// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"github.com/jmoiron/sqlx/types"
	"time"
)

const TableNameVEventUnprocessed = "v_event_unprocessed"

// VEventUnprocessed mapped from table <v_event_unprocessed>
type VEventUnprocessed struct {
	ID                          string         `gorm:"column:id;type:uuid" json:"id"`
	ReferenceID                 *string        `gorm:"column:reference_id;type:uuid" json:"reference_id"`
	TenantID                    string         `gorm:"column:tenant_id;type:uuid" json:"tenant_id"`
	TypeID                      string         `gorm:"column:type_id;type:uuid" json:"type_id"`
	Payload                     types.JSONText `gorm:"column:payload;type:jsonb" json:"payload"`
	Header                      *string        `gorm:"column:header;type:jsonb" json:"header"`
	IsProcessed                 bool           `gorm:"column:is_processed;type:boolean" json:"is_processed"`
	CreatedAt                   time.Time      `gorm:"column:created_at;type:timestamp without time zone" json:"created_at"`
	EventTypeName               string         `gorm:"column:event_type_name;type:text" json:"event_type_name"`
	EventTypeReferenceTableName *string        `gorm:"column:event_type_reference_table_name;type:text" json:"event_type_reference_table_name"`
}

// TableName VEventUnprocessed's table name
func (*VEventUnprocessed) TableName() string {
	return TableNameVEventUnprocessed
}

func (v *VEventUnprocessed) GetID() string {
	return v.ID
}
