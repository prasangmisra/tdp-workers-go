// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameOrderItemUpdateHosting = "order_item_update_hosting"

// OrderItemUpdateHosting mapped from table <order_item_update_hosting>
type OrderItemUpdateHosting struct {
	CreatedDate       *time.Time `gorm:"column:created_date;type:timestamp with time zone;default:now()" json:"created_date"`
	UpdatedDate       *time.Time `gorm:"column:updated_date;type:timestamp with time zone" json:"updated_date"`
	CreatedBy         *string    `gorm:"column:created_by;type:text;default:CURRENT_USER" json:"created_by"`
	UpdatedBy         *string    `gorm:"column:updated_by;type:text" json:"updated_by"`
	ID                string     `gorm:"column:id;type:uuid;primaryKey;default:gen_random_uuid()" json:"id"`
	OrderID           string     `gorm:"column:order_id;type:uuid;not null" json:"order_id"`
	StatusID          string     `gorm:"column:status_id;type:uuid;not null;default:tc_id_from_name('order_item_status'::text, 'pending'::text)" json:"status_id"`
	ParentOrderItemID *string    `gorm:"column:parent_order_item_id;type:uuid" json:"parent_order_item_id"`
	HostingID         string     `gorm:"column:hosting_id;type:uuid;not null" json:"hosting_id"`
	IsActive          *bool      `gorm:"column:is_active;type:boolean" json:"is_active"`
	CertificateID     *string    `gorm:"column:certificate_id;type:uuid" json:"certificate_id"`

	Certificate *OrderItemUpdateHostingCertificate
}

// TableName OrderItemUpdateHosting's table name
func (*OrderItemUpdateHosting) TableName() string {
	return TableNameOrderItemUpdateHosting
}
