// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"github.com/jmoiron/sqlx/types"
	"time"
)

const TableNameJob = "job"

// Job mapped from table <job>
type Job struct {
	CreatedDate      time.Time      `gorm:"column:created_date;type:timestamp with time zone;not null;default:now()" json:"created_date"`
	UpdatedDate      *time.Time     `gorm:"column:updated_date;type:timestamp with time zone" json:"updated_date"`
	CreatedBy        string         `gorm:"column:created_by;type:text;not null;default:CURRENT_USER" json:"created_by"`
	UpdatedBy        *string        `gorm:"column:updated_by;type:text" json:"updated_by"`
	ID               string         `gorm:"column:id;type:uuid;primaryKey;default:gen_random_uuid()" json:"id"`
	TenantCustomerID *string        `gorm:"column:tenant_customer_id;type:uuid" json:"tenant_customer_id"`
	TypeID           string         `gorm:"column:type_id;type:uuid;not null" json:"type_id"`
	StatusID         string         `gorm:"column:status_id;type:uuid;not null;default:tc_id_from_name('job_status'::text, 'submitted'::text)" json:"status_id"`
	StartDate        *time.Time     `gorm:"column:start_date;type:timestamp with time zone;default:now()" json:"start_date"`
	EndDate          *time.Time     `gorm:"column:end_date;type:timestamp with time zone" json:"end_date"`
	RetryDate        *time.Time     `gorm:"column:retry_date;type:timestamp with time zone" json:"retry_date"`
	RetryCount       *int32         `gorm:"column:retry_count;type:integer" json:"retry_count"`
	ReferenceID      *string        `gorm:"column:reference_id;type:uuid" json:"reference_id"`
	Data             types.JSONText `gorm:"column:data;type:jsonb" json:"data"`
	ResultMessage    *string        `gorm:"column:result_message;type:text" json:"result_msg"`
	ResultData       types.JSONText `gorm:"column:result_data;type:jsonb" json:"result_data"`
	EventID          *string        `gorm:"column:event_id;type:text" json:"event_id"`

	Info *VJob `gorm:"foreignKey:job_id"`
}

// TableName Job's table name
func (*Job) TableName() string {
	return TableNameJob
}
