// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameProvisionDomainTransferInRequest = "provision_domain_transfer_in_request"

// ProvisionDomainTransferInRequest mapped from table <provision_domain_transfer_in_request>
type ProvisionDomainTransferInRequest struct {
	CreatedDate        *time.Time `gorm:"column:created_date;type:timestamp with time zone;default:now()" json:"created_date"`
	UpdatedDate        *time.Time `gorm:"column:updated_date;type:timestamp with time zone" json:"updated_date"`
	CreatedBy          *string    `gorm:"column:created_by;type:text;default:CURRENT_USER" json:"created_by"`
	UpdatedBy          *string    `gorm:"column:updated_by;type:text" json:"updated_by"`
	ID                 string     `gorm:"column:id;type:uuid;primaryKey;default:gen_random_uuid()" json:"id"`
	TenantCustomerID   string     `gorm:"column:tenant_customer_id;type:uuid;not null" json:"tenant_customer_id"`
	ProvisionedDate    *time.Time `gorm:"column:provisioned_date;type:timestamp with time zone" json:"provisioned_date"`
	StatusID           string     `gorm:"column:status_id;type:uuid;not null;default:tc_id_from_name('provision_status'::text, 'pending'::text)" json:"status_id"`
	Roid               *string    `gorm:"column:roid;type:text" json:"roid"`
	JobID              *string    `gorm:"column:job_id;type:uuid" json:"job_id"`
	OrderItemPlanIds   *string    `gorm:"column:order_item_plan_ids;type:uuid[]" json:"order_item_plan_ids"`
	OrderMetadata      *string    `gorm:"column:order_metadata;type:jsonb;default:{}" json:"order_metadata"`
	ResultMessage      *string    `gorm:"column:result_message;type:text" json:"result_message"`
	ResultData         *string    `gorm:"column:result_data;type:jsonb" json:"result_data"`
	DomainName         string     `gorm:"column:domain_name;type:fqdn;not null" json:"domain_name"`
	AccreditationID    string     `gorm:"column:accreditation_id;type:uuid;not null" json:"accreditation_id"`
	AccreditationTldID string     `gorm:"column:accreditation_tld_id;type:uuid;not null" json:"accreditation_tld_id"`
	Pw                 *string    `gorm:"column:pw;type:text" json:"pw"`
	TransferPeriod     int32      `gorm:"column:transfer_period;type:integer;not null;default:1" json:"transfer_period"`
	TransferStatusID   string     `gorm:"column:transfer_status_id;type:uuid;not null;default:tc_id_from_name('transfer_status'::text, 'pending'::text)" json:"transfer_status_id"`
	RequestedBy        *string    `gorm:"column:requested_by;type:text" json:"requested_by"`
	RequestedDate      *time.Time `gorm:"column:requested_date;type:timestamp with time zone" json:"requested_date"`
	ActionBy           *string    `gorm:"column:action_by;type:text" json:"action_by"`
	ActionDate         *time.Time `gorm:"column:action_date;type:timestamp with time zone" json:"action_date"`
	ExpiryDate         *time.Time `gorm:"column:expiry_date;type:timestamp with time zone" json:"expiry_date"`
	AttemptCount       *int32     `gorm:"column:attempt_count;type:integer;default:1" json:"attempt_count"`
	AllowedAttempts    *int32     `gorm:"column:allowed_attempts;type:integer;default:1" json:"allowed_attempts"`
}

// TableName ProvisionDomainTransferInRequest's table name
func (*ProvisionDomainTransferInRequest) TableName() string {
	return TableNameProvisionDomainTransferInRequest
}
