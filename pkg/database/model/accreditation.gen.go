// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameAccreditation = "accreditation"

// Accreditation mapped from table <accreditation>
type Accreditation struct {
	CreatedDate        *time.Time `gorm:"column:created_date;type:timestamp with time zone;default:now()" json:"created_date"`
	UpdatedDate        *time.Time `gorm:"column:updated_date;type:timestamp with time zone" json:"updated_date"`
	CreatedBy          *string    `gorm:"column:created_by;type:text;default:CURRENT_USER" json:"created_by"`
	UpdatedBy          *string    `gorm:"column:updated_by;type:text" json:"updated_by"`
	ID                 string     `gorm:"column:id;type:uuid;primaryKey;default:gen_random_uuid()" json:"id"`
	Name               string     `gorm:"column:name;type:text;not null" json:"name"`
	TenantID           string     `gorm:"column:tenant_id;type:uuid;not null" json:"tenant_id"`
	ProviderInstanceID string     `gorm:"column:provider_instance_id;type:uuid;not null" json:"provider_instance_id"`
	ServiceRange       string     `gorm:"column:service_range;type:tstzrange;not null;default:(-infinity,infinity);comment:This attribute serves to limit the applicability of a relation over time." json:"service_range"`
	RegistrarID        string     `gorm:"column:registrar_id;type:text;not null" json:"registrar_id"`
}

// TableName Accreditation's table name
func (*Accreditation) TableName() string {
	return TableNameAccreditation
}
