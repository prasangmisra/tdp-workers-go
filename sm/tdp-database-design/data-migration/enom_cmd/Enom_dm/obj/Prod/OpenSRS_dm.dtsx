<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/15/2024 5:48:09 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-UHHLA3LI"
  DTS:CreatorName="TUCOWSAD\nludina"
  DTS:DTSID="{BBA0EB73-075E-494C-B3B9-271C9D341BD3}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:ForceExecutionResult="2"
  DTS:LastModifiedProductVersion="16.0.5556.0"
  DTS:LocaleID="1033"
  DTS:MaxConcurrentExecutables="10"
  DTS:ObjectName="OpenSRS_dm"
  DTS:PackageType="5"
  DTS:VersionBuild="2727"
  DTS:VersionGUID="{FD91CECB-C2A3-4CA9-B0E7-BCC930727402}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Devart OpenSRS Oracle]"
      DTS:CreationName="ADO.NET:System.Data.Odbc.OdbcConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{53EFD5B8-026A-45BF-8484-941C8C94ABAE}"
      DTS:ObjectName="Devart OpenSRS Oracle">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::DEVART_opensrs_connstion_string]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Package::OpenSRS_Password]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="uid=TDP_MIGRATION;Dsn=OpenSRS Oracle Prod Devart;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAVkmsD9Ji4UCbEVvvtX3EWAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAC0jlsPNWb2NJqsxICL/m3uAAAAAASAAACgAAAAEAAAAIt1aMWmtjJVzgZ7iYQLoj8gAAAA1zGMVFLOFVwCiQFv8GVxwLHZZmm6hEqLl0Esd5qa3BkUAAAATBef70+no6gk4thknZ8IuGxBY/g</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Enom_dm_log.xml]"
      DTS:CreationName="FILE"
      DTS:DTSID="{563C4A9E-E4C0-40F2-8330-7F086D21C27A}"
      DTS:ObjectName="Enom_dm_log.xml">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::log_xml_file_path]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="C:\tdp-database-design\data-migration\enom_cmd\Enom_dm\log\enom_dm_log.xml" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Enom_nazca_identity]"
      DTS:CreationName="ODBC"
      DTS:DTSID="{F2FA42B8-9093-46AB-90F0-E17357D890C6}"
      DTS:ObjectName="Enom_nazca_identity">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::Enom_Nazca_Identity_ODBC_ConnectionString]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Package::Enom_Nazca_Identity_Password]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="uid=nludina;Dsn=PostgreSQL_nazca_dev;">
          <DTS:Password
            DTS:Name="Pwd"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAVkmsD9Ji4UCbEVvvtX3EWAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAD1EHjmBpW1klp8/KLMjBHYAAAAAASAAACgAAAAEAAAAGv3y/4Qs1A4ABuSIKgZhP8wAAAAzcHy0+D8NFkxL5KPEdqHYuD+8tAPDCtRzFaLHWikt/0Ritb7tsu3RL73dzK6h+jtFAAAAHB/edIfW53TFJWKEnttlf9K/xbr</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Enom_nazca_identity_01]"
      DTS:CreationName="ODBC"
      DTS:DTSID="{A62F1E90-B9F7-4F25-A1A4-0062A8FB547A}"
      DTS:ObjectName="Enom_nazca_identity_01">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::Enom_Nazca_Identity_01_ODBC_ConnectionString]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Package::Enom_Nazca_Identity_Password]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="uid=nludina;Dsn=PostgreSQL_nazca_dev;">
          <DTS:Password
            DTS:Name="Pwd"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAVkmsD9Ji4UCbEVvvtX3EWAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAACPhhL4UsxEE4XHppw8+v4rAAAAAASAAACgAAAAEAAAABGqBttwgjFD3LM6XopkgAowAAAALHT9WsjIQT9N9DrMX29y8unGmUB5tCk9dBLsAMvvI5eH1TfzICG4phac+ojlvT1pFAAAAKIWYYPTos1jGaCRzH/avWoKMmjg</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[tdpdb]"
      DTS:CreationName="ODBC"
      DTS:DTSID="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
      DTS:ObjectName="tdpdb">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::Tdpdb_ConnectionString]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Package::Tdpdb_Password]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="uid=migration_user;Dsn=PostgreSQL_Tdp_prod;">
          <DTS:Password
            DTS:Name="Pwd"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAVkmsD9Ji4UCbEVvvtX3EWAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAAg429dh9EEngf1xSVIKwHtAAAAAASAAACgAAAAEAAAADB1kXcC9ESzM2UxROH3ZOUwAAAA7p38rRrjP2o6QJNPTwtugLvGQP3JmENDBSd6lSn2fgwQQF4NEPJcxd5WpBj86DtuFAAAAMdhaVNZJoc377RllRifHqLo8qpk</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[tdpdb_ADO.NET]"
      DTS:CreationName="ADO.NET:System.Data.Odbc.OdbcConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{2DC04CA4-3A3F-493B-AA09-274CFEDF0DB2}"
      DTS:ObjectName="tdpdb_ADO.NET">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::Tdpdb_ConnectionString]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Package::Tdpdb_Password]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="uid=migration_user;Dsn=PostgreSQL_Tdp_prod;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAVkmsD9Ji4UCbEVvvtX3EWAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAD5wjApOq8NcSt00LJX/8RDAAAAAASAAACgAAAAEAAAAIbfdbXd6w+HW+gc6XsvSn4wAAAA4DiT8EC8T7a4LqLcjpjJZbLO6KxWTSHp42JrX3QFRrJz/BlLxxnbjpIuTIgp1JT/FAAAAFcOwA1sLznU8Xf3EB3vdJZyPAgz</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Configurations>
    <DTS:Configuration
      DTS:ConfigurationString="C:\tdp-database-design\data-migration\enom_cmd\Enom_dm\Enom_dm_dev.dtsConfig"
      DTS:ConfigurationType="1"
      DTS:CreationName=""
      DTS:DTSID="{705789C6-940F-498A-A755-BD52D52C721D}"
      DTS:ObjectName="Dev" />
    <DTS:Configuration
      DTS:ConfigurationString="C:\tdp-database-design\data-migration\enom_cmd\Enom_dm\Enom_dm_local.dtsConfig"
      DTS:ConfigurationType="1"
      DTS:CreationName=""
      DTS:DTSID="{52771355-E7FB-4F50-91F9-45E6BD8BF3F2}"
      DTS:ObjectName="local" />
  </DTS:Configurations>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="Enom_dm_log.xml"
      DTS:CreationName="Microsoft.LogProviderXMLFile"
      DTS:Description="Writes log entries for events to an XML file"
      DTS:DTSID="{D9252FFD-B93F-48A8-AB14-F76A410BE864}"
      DTS:ObjectName="SSIS log provider for XML files1">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{4515508B-A50A-4AF1-B657-BC4CF9C3B7FB}"
      DTS:ObjectName="DEVART_opensrs_connstion_string">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Dsn=OpenSRS Oracle Prod Devart;uid=TDP_MIGRATION</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{76ACB8D2-A019-4028-A63B-8D6336114351}"
      DTS:ObjectName="Enom_Nazca_Identity_01_ODBC_ConnectionString">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">uid=nludina;Dsn=PostgreSQL_nazca_dev;</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{C0B7071A-A20F-49C2-8D0B-6C58BE692705}"
      DTS:ObjectName="Enom_Nazca_Identity_ODBC_ConnectionString">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">uid=nludina;Dsn=PostgreSQL_nazca_dev</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{071481CD-2CBE-4496-A4E2-8D284376D4C6}"
      DTS:ObjectName="Enom_Nazca_Identity_Password"
      DTS:Sensitive="True">
      <DTS:Property
        DTS:Name="ParameterValue">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="ParameterValue"
          Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAVkmsD9Ji4UCbEVvvtX3EWAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAABYAcwODjo/4kv+2RXAXZMRAAAAAASAAACgAAAAEAAAAGxqTt6sjcq7rNFAmeinH0gwAAAAPSR7a42xxSXlV8jCNifDrcqaNVhuEkprBhobLHAk7gtiUGEYAOeQg3lRjQ0914T2FAAAAEt5rvNfvfJkZx1x2qZt+nsIlMU/</DTS:Property>
      </DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{A231CC06-096F-4437-8443-A6325C311BD1}"
      DTS:ObjectName="log_xml_file_path">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\tdp-database-design\data-migration\enom_cmd\Enom_dm\log\enom_dm_log.xml</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{A675C07D-0A2C-4A85-8DA1-FBA9373A3C39}"
      DTS:ObjectName="Migration_phase">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">1.3</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{E40986C8-9998-4BBC-AD53-010460B160BE}"
      DTS:ObjectName="OpenSRS_Password"
      DTS:Sensitive="True">
      <DTS:Property
        DTS:Name="ParameterValue">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="ParameterValue"
          Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAVkmsD9Ji4UCbEVvvtX3EWAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAABoXj7N1dUsihIKG3NTerUFAAAAAASAAACgAAAAEAAAACJd8QlFHt3w+XGYpg6Iqu4gAAAANVKLF2zwPRsjFgCnD3GLscP2+fiCkbZdBsrUgBrDNewUAAAAG+lNeINYiT7XWWSmAMcpl2SiYiM</DTS:Property>
      </DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:DTSID="{9A1F9C6C-C648-41CD-98F9-7879259EC21A}"
      DTS:ObjectName="private_contact">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{1EF1993A-5CFE-4E9A-8E22-563015BB7F8E}"
      DTS:ObjectName="Tdpdb_ConnectionString">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Dsn=PostgreSQL_Tdp_prod;uid=migration_user</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{0CF44AA7-2C90-4525-B740-9CDECA8AE2E8}"
      DTS:ObjectName="Tdpdb_Password"
      DTS:Sensitive="True">
      <DTS:Property
        DTS:Name="ParameterValue">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="ParameterValue"
          Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAVkmsD9Ji4UCbEVvvtX3EWAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAAizT6upwX42AHRfMcZRrREAAAAAASAAACgAAAAEAAAAFxiSHk+t+KQsNgc6Z0m5H8wAAAA8qH5RApy7jdtYM+99ElS9vbsaXZw/coycZUd6c7u7ukrDM9Vrjl86nByZD6zbuf3FAAAAMpHvYgDhyDzxNQS/THc2GeIiv0J</DTS:Property>
      </DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{933CB941-9C6C-4344-BCF2-16872AF8308B}"
      DTS:ObjectName="Tenant">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">opensrs</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{8C76C11D-92F5-4E42-8096-B51EAF4894D6}"
      DTS:ObjectName="TLD">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">in</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{5519D4BC-C0C7-4197-87C2-FD9E0DCBE5E9}"
      DTS:ObjectName="_Enom_TDP_domain_table_name">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">TDP_domain</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5F1A667A-C87B-4399-A8CE-F76E20EC4066}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="dm_log_id">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{82112A0B-6626-4891-B393-68CA7F7E6246}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="list_big_tlds">
      <DTS:VariableValue
        DTS:DataType="8">com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AC2ED54D-9610-4758-934E-7B62BCC889CC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="list_middle_and_big_tlds">
      <DTS:VariableValue
        DTS:DataType="8">com' ,'net</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3D278AD8-DE56-4394-A065-8D6C83408DFF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="max_dm_log_query">
      <DTS:VariableValue
        DTS:DataType="8">SELECT COALESCE(MAX(ID)+1,1)::int as max_id from itdp.dm_log;</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">4,7,OnError,13,OnInformation,10,OnProgress,12,OnTaskFailed</DTS:Property>
    <DTS:Property
      DTS:EventName="Diagnostic"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="DiagnosticEx"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">0</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">0</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnExecStatusChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnInformation"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">0</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">0</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostComponentCall"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostPrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePreComponentCall"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePreEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePrePrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelineRowsSent"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPostExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPostValidate"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPreExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPreValidate"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnProgress"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">0</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">0</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnQueryCancel"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnTaskFailed"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">0</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">0</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnVariableValueChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{D9252FFD-B93F-48A8-AB14-F76A410BE864}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\01 Extract Enom domain, contact, host"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{5EFCF78C-0098-4626-A8B4-60D603C78502}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="01 Extract Enom domain, contact, host">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{04053575-0260-4E5E-A8E7-CF48ACE7C8AA}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="01_1  Extract  Enom Domain">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">19,7,OnError,19,OnExecStatusChanged,13,OnInformation,27,OnPipelinePostComponentCall,25,OnPipelinePostEndOfRowset,25,OnPipelinePostPrimeOutput,26,OnPipelinePreComponentCall,24,OnPipelinePreEndOfRowset,24,OnPipelinePrePrimeOutput,18,OnPipelineRowsSent,13,OnPostExecute,14,OnPostValidate,12,OnPreExecute,13,OnPreValidate,10,OnProgress,13,OnQueryCancel,12,OnTaskFailed,22,OnVariableValueChanged,9,OnWarning</DTS:Property>
            <DTS:Property
              DTS:EventName="OnError"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnExecStatusChanged"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnInformation"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePostComponentCall"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePostEndOfRowset"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePostPrimeOutput"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePreComponentCall"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePreEndOfRowset"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePrePrimeOutput"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelineRowsSent"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPostExecute"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPostValidate"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPreExecute"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPreValidate"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnProgress"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnQueryCancel"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnTaskFailed"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnVariableValueChanged"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnWarning"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
          </DTS:LoggingOptions>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{17269535-26F0-4031-8ABA-A917340D8600}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Extract Domains to Domains_ODBC"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="1">
                <DTS:Property
                  DTS:DataType="8"
                  DTS:Name="EventFilter">25,7,OnError,19,OnExecStatusChanged,13,OnInformation,27,OnPipelinePostComponentCall,25,OnPipelinePostEndOfRowset,25,OnPipelinePostPrimeOutput,26,OnPipelinePreComponentCall,24,OnPipelinePreEndOfRowset,24,OnPipelinePrePrimeOutput,18,OnPipelineRowsSent,13,OnPostExecute,14,OnPostValidate,12,OnPreExecute,13,OnPreValidate,10,OnProgress,13,OnQueryCancel,12,OnTaskFailed,22,OnVariableValueChanged,9,OnWarning,16,BufferSizeTuning,18,PipelineBufferLeak,21,PipelineComponentTime,21,PipelineExecutionPlan,22,PipelineExecutionTrees,22,PipelineInitialization</DTS:Property>
                <DTS:Property
                  DTS:EventName="BufferSizeTuning"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnError"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnExecStatusChanged"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnInformation"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPipelinePostComponentCall"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPipelinePostEndOfRowset"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPipelinePostPrimeOutput"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPipelinePreComponentCall"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPipelinePreEndOfRowset"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPipelinePrePrimeOutput"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPipelineRowsSent"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPostExecute"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPostValidate"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPreExecute"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPreValidate"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnProgress"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnQueryCancel"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnTaskFailed"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnVariableValueChanged"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnWarning"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="PipelineBufferLeak"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="PipelineComponentTime"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="PipelineExecutionPlan"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="PipelineExecutionTrees"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="PipelineInitialization"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
              </DTS:LoggingOptions>
              <DTS:PropertyExpression
                DTS:Name="[ADO NET Source].[SqlCommand]">"SELECT   lang.ENCODING_TYPE,opensrs.unixtodate(t.transfer_time) AS transfer_date ,
opensrs.unixtodate(d.CREATEDATE) AS CREATEDATE1,
CASE WHEN bitand(d.status,8) =8 then '1' END AS lock_transfer,
CASE WHEN bitand(d.status,1) =1 then '1' END AS lock_delete,
CASE WHEN bitand(d.status,16) =16 then '1' END AS lock_update,
CASE WHEN bitand(d.status,2) =2 then '1' END AS lock_hold,
substr(TLDS.NAME, 2) AS TLD, 'Active' AS RegistrationStatus,
d.ID, d.NAME,  d.CREATEDATE_NSI, d.UPDATEDATE, d.EXPIREDATE, NULL AS deldate,
d.STATUS,  d.RESELLER_ID,   d.F_AUTO_RENEW, d.AUTH_INFO, 
d.AFFILIATE_ID, d.REGISTRY_DOMAIN_ID

FROM  OPENSRS.domains d
LEFT JOIN OPENSRS.encoding_types lang ON lang.id=d.ENCODING_TYPE_ID
LEFT JOIN OPENSRS.TLDS   ON TLDS.id=d.TLD_ID
LEFT JOIN (SELECT MAX(COMPLETED_TIME) as transfer_time,domain 
FROM OPENSRS.transfers  WHERE type='REG2REG' and status='completed' group by  DOMAIN)t ON t.DOMAIN=d.name
WHERE F_REGISTERED=1 AND  substr(TLDS.NAME, 2)  =  '"+ @[$Package::TLD] +"' 

UNION  ALL
select NULL AS ENCODING_TYPE, NULL AS  transfer_date,
opensrs.unixtodate(del.CREATE_TIME) AS CREATEDATE1,
NULL AS lock_transfer, NULL AS lock_delete, NULL AS lock_update, NULL AS lock_hold,
substr(TLDS.NAME, 2) AS TLD, 'RGP' AS RegistrationStatus,
DEL.DOMAIN_ID ,del.DOMAIN,NULL AS CREATEDATE_NSI,NULL AS UPDATEDATE,del.EXPIREDATE,opensrs.unixtodate(del.DELETE_TIME) AS deldate,
NULL AS STATUS, del.RESELLER_ID, NULL AS F_AUTO_RENEW, NULL AS AUTH_INFO,
del.AFFILIATE_ID, NULL AS REGISTRY_DOMAIN_ID

FROM  OPENSRS.deletions del
LEFT JOIN OPENSRS.TLDS   ON TLDS.id=del.TLD_ID
left outer join OPENSRS.domains d on (del.domain = d.name) 
WHERE del.reason = 'Expired'
AND  OPENSRS.unixtodate(del.delete_time+30*24*3600) &gt; sysdate
AND  d.name is NULL
AND  substr(TLDS.NAME, 2)  =  '"+ @[$Package::TLD] +"' ;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <pipeline
                  autoAdjustBufferSize="true"
                  defaultBufferMaxRows="100000"
                  version="1">
                  <components>
                    <component
                      refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
                      name="ADO NET Source"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement used by the component to extract data."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT   lang.ENCODING_TYPE,opensrs.unixtodate(t.transfer_time) AS transfer_date ,
opensrs.unixtodate(d.CREATEDATE) AS CREATEDATE1,
CASE WHEN bitand(d.status,8) =8 then '1' END AS lock_transfer,
CASE WHEN bitand(d.status,1) =1 then '1' END AS lock_delete,
CASE WHEN bitand(d.status,16) =16 then '1' END AS lock_update,
CASE WHEN bitand(d.status,2) =2 then '1' END AS lock_hold,
substr(TLDS.NAME, 2) AS TLD, 'Active' AS RegistrationStatus,
d.ID, d.NAME,  d.CREATEDATE_NSI, d.UPDATEDATE, d.EXPIREDATE, NULL AS deldate,
d.STATUS,  d.RESELLER_ID,   d.F_AUTO_RENEW, d.AUTH_INFO, 
d.AFFILIATE_ID, d.REGISTRY_DOMAIN_ID

FROM  OPENSRS.domains d
LEFT JOIN OPENSRS.encoding_types lang ON lang.id=d.ENCODING_TYPE_ID
LEFT JOIN OPENSRS.TLDS   ON TLDS.id=d.TLD_ID
LEFT JOIN (SELECT MAX(COMPLETED_TIME) as transfer_time,domain 
FROM OPENSRS.transfers  WHERE type='REG2REG' and status='completed' group by  DOMAIN)t ON t.DOMAIN=d.name
WHERE F_REGISTERED=1 AND  substr(TLDS.NAME, 2)  =  'in' 

UNION  ALL
select NULL AS ENCODING_TYPE, NULL AS  transfer_date,
opensrs.unixtodate(del.CREATE_TIME) AS CREATEDATE1,
NULL AS lock_transfer, NULL AS lock_delete, NULL AS lock_update, NULL AS lock_hold,
substr(TLDS.NAME, 2) AS TLD, 'RGP' AS RegistrationStatus,
DEL.DOMAIN_ID ,del.DOMAIN,NULL AS CREATEDATE_NSI,NULL AS UPDATEDATE,del.EXPIREDATE,opensrs.unixtodate(del.DELETE_TIME) AS deldate,
NULL AS STATUS, del.RESELLER_ID, NULL AS F_AUTO_RENEW, NULL AS AUTH_INFO,
del.AFFILIATE_ID, NULL AS REGISTRY_DOMAIN_ID

FROM  OPENSRS.deletions del
LEFT JOIN OPENSRS.TLDS   ON TLDS.id=del.TLD_ID
left outer join OPENSRS.domains d on (del.domain = d.name) 
WHERE del.reason = 'Expired'
AND  OPENSRS.unixtodate(del.delete_time+30*24*3600) &gt; sysdate
AND  d.name is NULL
AND  substr(TLDS.NAME, 2)  =  'in' ;</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">30</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                          name="AllowImplicitStringConversion">true</property>
                        <property
                          dataType="System.String"
                          description="The Source database table name."
                          expressionType="Notify"
                          name="TableOrViewName"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specify the mode to retrieve external column information"
                          name="AccessMode"
                          typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Connections[IDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Devart OpenSRS Oracle]"
                          connectionManagerRefId="Package.ConnectionManagers[Devart OpenSRS Oracle]"
                          description="Managed connection manager"
                          name="IDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output]"
                          name="ADO NET Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[ENCODING_TYPE]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ENCODING_TYPE]"
                              length="15"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[ENCODING_TYPE]"
                              name="ENCODING_TYPE"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[TRANSFER_DATE]"
                              dataType="dbTimeStamp"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[TRANSFER_DATE]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[TRANSFER_DATE]"
                              name="TRANSFER_DATE"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[CREATEDATE1]"
                              dataType="dbTimeStamp"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CREATEDATE1]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[CREATEDATE1]"
                              name="CREATEDATE1"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[LOCK_TRANSFER]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[LOCK_TRANSFER]"
                              length="1"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[LOCK_TRANSFER]"
                              name="LOCK_TRANSFER"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[LOCK_DELETE]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[LOCK_DELETE]"
                              length="1"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[LOCK_DELETE]"
                              name="LOCK_DELETE"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[LOCK_UPDATE]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[LOCK_UPDATE]"
                              length="1"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[LOCK_UPDATE]"
                              name="LOCK_UPDATE"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[LOCK_HOLD]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[LOCK_HOLD]"
                              length="1"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[LOCK_HOLD]"
                              name="LOCK_HOLD"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[TLD]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[TLD]"
                              length="19"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[TLD]"
                              name="TLD"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[REGISTRATIONSTATUS]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[REGISTRATIONSTATUS]"
                              length="6"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[REGISTRATIONSTATUS]"
                              name="REGISTRATIONSTATUS"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[ID]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ID]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[ID]"
                              name="ID"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[NAME]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[NAME]"
                              length="255"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[NAME]"
                              name="NAME"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[CREATEDATE_NSI]"
                              dataType="dbTimeStamp"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CREATEDATE_NSI]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[CREATEDATE_NSI]"
                              name="CREATEDATE_NSI"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[UPDATEDATE]"
                              dataType="dbTimeStamp"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[UPDATEDATE]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[UPDATEDATE]"
                              name="UPDATEDATE"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[EXPIREDATE]"
                              dataType="dbTimeStamp"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[EXPIREDATE]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[EXPIREDATE]"
                              name="EXPIREDATE"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[DELDATE]"
                              dataType="dbTimeStamp"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[DELDATE]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[DELDATE]"
                              name="DELDATE"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[STATUS]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[STATUS]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[STATUS]"
                              name="STATUS"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[RESELLER_ID]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[RESELLER_ID]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[RESELLER_ID]"
                              name="RESELLER_ID"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[F_AUTO_RENEW]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[F_AUTO_RENEW]"
                              length="1"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[F_AUTO_RENEW]"
                              name="F_AUTO_RENEW"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[AUTH_INFO]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[AUTH_INFO]"
                              length="144"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[AUTH_INFO]"
                              name="AUTH_INFO"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[AFFILIATE_ID]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[AFFILIATE_ID]"
                              length="256"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[AFFILIATE_ID]"
                              name="AFFILIATE_ID"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[REGISTRY_DOMAIN_ID]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[REGISTRY_DOMAIN_ID]"
                              length="100"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[REGISTRY_DOMAIN_ID]"
                              name="REGISTRY_DOMAIN_ID"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ENCODING_TYPE]"
                              dataType="wstr"
                              length="15"
                              name="ENCODING_TYPE" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[TRANSFER_DATE]"
                              dataType="dbTimeStamp"
                              name="TRANSFER_DATE" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CREATEDATE1]"
                              dataType="dbTimeStamp"
                              name="CREATEDATE1" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[LOCK_TRANSFER]"
                              dataType="wstr"
                              length="1"
                              name="LOCK_TRANSFER" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[LOCK_DELETE]"
                              dataType="wstr"
                              length="1"
                              name="LOCK_DELETE" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[LOCK_UPDATE]"
                              dataType="wstr"
                              length="1"
                              name="LOCK_UPDATE" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[LOCK_HOLD]"
                              dataType="wstr"
                              length="1"
                              name="LOCK_HOLD" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[TLD]"
                              dataType="wstr"
                              length="19"
                              name="TLD" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[REGISTRATIONSTATUS]"
                              dataType="wstr"
                              length="6"
                              name="REGISTRATIONSTATUS" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ID]"
                              dataType="r8"
                              name="ID" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[NAME]"
                              dataType="wstr"
                              length="255"
                              name="NAME" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CREATEDATE_NSI]"
                              dataType="dbTimeStamp"
                              name="CREATEDATE_NSI" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[UPDATEDATE]"
                              dataType="dbTimeStamp"
                              name="UPDATEDATE" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[EXPIREDATE]"
                              dataType="dbTimeStamp"
                              name="EXPIREDATE" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[DELDATE]"
                              dataType="dbTimeStamp"
                              name="DELDATE" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[STATUS]"
                              dataType="r8"
                              name="STATUS" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[RESELLER_ID]"
                              dataType="r8"
                              name="RESELLER_ID" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[F_AUTO_RENEW]"
                              dataType="wstr"
                              length="1"
                              name="F_AUTO_RENEW" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[AUTH_INFO]"
                              dataType="wstr"
                              length="144"
                              name="AUTH_INFO" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[AFFILIATE_ID]"
                              dataType="wstr"
                              length="256"
                              name="AFFILIATE_ID" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[REGISTRY_DOMAIN_ID]"
                              dataType="wstr"
                              length="100"
                              name="REGISTRY_DOMAIN_ID" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output]"
                          isErrorOut="true"
                          name="ADO NET Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ENCODING_TYPE]"
                              dataType="wstr"
                              length="15"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ENCODING_TYPE]"
                              name="ENCODING_TYPE" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[TRANSFER_DATE]"
                              dataType="dbTimeStamp"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[TRANSFER_DATE]"
                              name="TRANSFER_DATE" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CREATEDATE1]"
                              dataType="dbTimeStamp"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CREATEDATE1]"
                              name="CREATEDATE1" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[LOCK_TRANSFER]"
                              dataType="wstr"
                              length="1"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[LOCK_TRANSFER]"
                              name="LOCK_TRANSFER" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[LOCK_DELETE]"
                              dataType="wstr"
                              length="1"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[LOCK_DELETE]"
                              name="LOCK_DELETE" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[LOCK_UPDATE]"
                              dataType="wstr"
                              length="1"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[LOCK_UPDATE]"
                              name="LOCK_UPDATE" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[LOCK_HOLD]"
                              dataType="wstr"
                              length="1"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[LOCK_HOLD]"
                              name="LOCK_HOLD" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[TLD]"
                              dataType="wstr"
                              length="19"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[TLD]"
                              name="TLD" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[REGISTRATIONSTATUS]"
                              dataType="wstr"
                              length="6"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[REGISTRATIONSTATUS]"
                              name="REGISTRATIONSTATUS" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ID]"
                              dataType="r8"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ID]"
                              name="ID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[NAME]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[NAME]"
                              name="NAME" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CREATEDATE_NSI]"
                              dataType="dbTimeStamp"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CREATEDATE_NSI]"
                              name="CREATEDATE_NSI" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[UPDATEDATE]"
                              dataType="dbTimeStamp"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[UPDATEDATE]"
                              name="UPDATEDATE" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[EXPIREDATE]"
                              dataType="dbTimeStamp"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[EXPIREDATE]"
                              name="EXPIREDATE" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[DELDATE]"
                              dataType="dbTimeStamp"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[DELDATE]"
                              name="DELDATE" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[STATUS]"
                              dataType="r8"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[STATUS]"
                              name="STATUS" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[RESELLER_ID]"
                              dataType="r8"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[RESELLER_ID]"
                              name="RESELLER_ID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[F_AUTO_RENEW]"
                              dataType="wstr"
                              length="1"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[F_AUTO_RENEW]"
                              name="F_AUTO_RENEW" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[AUTH_INFO]"
                              dataType="wstr"
                              length="144"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[AUTH_INFO]"
                              name="AUTH_INFO" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[AFFILIATE_ID]"
                              dataType="wstr"
                              length="256"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[AFFILIATE_ID]"
                              name="AFFILIATE_ID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[REGISTRY_DOMAIN_ID]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[REGISTRY_DOMAIN_ID]"
                              name="REGISTRY_DOMAIN_ID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_"
                      componentClassID="Microsoft.SSISODBCDst"
                      contactInfo="ODBC Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="ODBC Destination"
                      name="ODBC Destination DimainName_"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The name of the table to be fetched."
                          expressionType="Notify"
                          name="TableName">"dm_opensrs"."domainname"</property>
                        <property
                          dataType="System.Int32"
                          description="Specify the number of rows fetched per batch."
                          expressionType="Notify"
                          name="BatchSize">10000</property>
                        <property
                          dataType="System.Int32"
                          description="The number of rows inserted under the same transaction."
                          expressionType="Notify"
                          name="TransactionSize">100000</property>
                        <property
                          dataType="System.Int32"
                          description="Determines the chunk size allocation for LOB columns"
                          expressionType="Notify"
                          name="LobChunkSize">32768</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                          expressionType="Notify"
                          name="StatementTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="The code page to use when code page information is unavailable from the data source."
                          expressionType="Notify"
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Int32"
                          description="The method used for inserting data. Possible values are 'Batch' or 'Row by row'."
                          expressionType="Notify"
                          name="InsertMethod">1</property>
                        <property
                          dataType="System.Int32"
                          description="The ODBC C data type for binding numeric data."
                          expressionType="Notify"
                          name="BindNumericAs">0</property>
                        <property
                          dataType="System.Int32"
                          description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                          expressionType="Notify"
                          name="BindCharColumnsAs">0</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Connections[ODBCConnection]"
                          connectionManagerID="Package.ConnectionManagers[tdpdb]"
                          connectionManagerRefId="Package.ConnectionManagers[tdpdb]"
                          description="The ODBC runtime connection used to access the database."
                          name="ODBCConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="ODBC Destination Input"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[UPDATEDATE]"
                              cachedDataType="dbTimeStamp"
                              cachedName="UPDATEDATE"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[updatedate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[UPDATEDATE]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[RESELLER_ID]"
                              cachedDataType="r8"
                              cachedName="RESELLER_ID"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[reseller_id]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[RESELLER_ID]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[ENCODING_TYPE]"
                              cachedDataType="wstr"
                              cachedLength="15"
                              cachedName="ENCODING_TYPE"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[encodingtype]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[ENCODING_TYPE]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[TRANSFER_DATE]"
                              cachedDataType="dbTimeStamp"
                              cachedName="TRANSFER_DATE"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[transferindate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[TRANSFER_DATE]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[CREATEDATE1]"
                              cachedDataType="dbTimeStamp"
                              cachedName="CREATEDATE1"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[creationdate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[CREATEDATE1]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[LOCK_TRANSFER]"
                              cachedDataType="wstr"
                              cachedLength="1"
                              cachedName="LOCK_TRANSFER"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[lock_transfer]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[LOCK_TRANSFER]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[LOCK_DELETE]"
                              cachedDataType="wstr"
                              cachedLength="1"
                              cachedName="LOCK_DELETE"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[lock_delete]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[LOCK_DELETE]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[LOCK_UPDATE]"
                              cachedDataType="wstr"
                              cachedLength="1"
                              cachedName="LOCK_UPDATE"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[lock_update]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[LOCK_UPDATE]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[LOCK_HOLD]"
                              cachedDataType="wstr"
                              cachedLength="1"
                              cachedName="LOCK_HOLD"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[lock_hold]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[LOCK_HOLD]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[TLD]"
                              cachedDataType="wstr"
                              cachedLength="19"
                              cachedName="TLD"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[TLD]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[REGISTRATIONSTATUS]"
                              cachedDataType="wstr"
                              cachedLength="6"
                              cachedName="REGISTRATIONSTATUS"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[registrationstatus]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[REGISTRATIONSTATUS]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[ID]"
                              cachedDataType="r8"
                              cachedName="ID"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[domainnameid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[ID]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[NAME]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="NAME"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[slddottld]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[NAME]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[CREATEDATE_NSI]"
                              cachedDataType="dbTimeStamp"
                              cachedName="CREATEDATE_NSI"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[creationdate_nsi]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[CREATEDATE_NSI]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[REGISTRY_DOMAIN_ID]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="REGISTRY_DOMAIN_ID"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[roid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[REGISTRY_DOMAIN_ID]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[AUTH_INFO]"
                              cachedDataType="wstr"
                              cachedLength="144"
                              cachedName="AUTH_INFO"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[authinfo]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[AUTH_INFO]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[F_AUTO_RENEW]"
                              cachedDataType="wstr"
                              cachedLength="1"
                              cachedName="F_AUTO_RENEW"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[renew]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[F_AUTO_RENEW]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[EXPIREDATE]"
                              cachedDataType="dbTimeStamp"
                              cachedName="EXPIREDATE"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[expdate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[EXPIREDATE]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[DELDATE]"
                              cachedDataType="dbTimeStamp"
                              cachedName="DELDATE"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[deldate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output].Columns[DELDATE]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                              dataType="wstr"
                              length="20"
                              name="tld" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[registrationstatus]"
                              dataType="wstr"
                              length="20"
                              name="registrationstatus" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[renew]"
                              dataType="wstr"
                              length="5"
                              name="renew" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[regperiod]"
                              dataType="i2"
                              name="regperiod" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[encodingtype]"
                              dataType="wstr"
                              length="15"
                              name="encodingtype" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[roid]"
                              dataType="wstr"
                              length="100"
                              name="roid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[authinfo]"
                              dataType="wstr"
                              length="255"
                              name="authinfo" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[deldate]"
                              dataType="dbTimeStamp2"
                              name="deldate"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[transferindate]"
                              dataType="dbTimeStamp2"
                              name="transferindate"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[reseller_id]"
                              dataType="i4"
                              name="reseller_id" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[updatedate]"
                              dataType="dbTimeStamp2"
                              name="updatedate"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[itdp_domain_id]"
                              dataType="guid"
                              name="itdp_domain_id" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[domainnameid]"
                              dataType="i4"
                              name="domainnameid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[slddottld]"
                              dataType="wstr"
                              length="272"
                              name="slddottld" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[expdate]"
                              dataType="dbTimeStamp2"
                              name="expdate"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[creationdate]"
                              dataType="dbTimeStamp2"
                              name="creationdate"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[creationdate_nsi]"
                              dataType="dbTimeStamp2"
                              name="creationdate_nsi"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[inserted_dm_date]"
                              dataType="dbTimeStamp2"
                              name="inserted_dm_date"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[uname]"
                              dataType="nText"
                              name="uname" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[lock_hold]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="lock_hold" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[lock_delete]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="lock_delete" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[lock_transfer]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="lock_transfer" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[lock_update]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="lock_update" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Outputs[ODBC Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="ODBC Destination Error Output"
                          synchronousInputId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC.Paths[ADO NET Source Output]"
                      endId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input]"
                      name="ADO NET Source Output"
                      startId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source.Outputs[ADO NET Source Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Truncate Domainname"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{30BD99D9-992D-4A50-A83F-D80261BF89DA}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Truncate Domainname"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="1">
                <DTS:Property
                  DTS:DataType="8"
                  DTS:Name="EventFilter">13,7,OnError,19,OnExecStatusChanged,13,OnInformation,13,OnPostExecute,14,OnPostValidate,12,OnPreExecute,13,OnPreValidate,10,OnProgress,13,OnQueryCancel,12,OnTaskFailed,22,OnVariableValueChanged,9,OnWarning,24,ExecuteSQLExecutingQuery</DTS:Property>
                <DTS:Property
                  DTS:EventName="ExecuteSQLExecutingQuery"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnError"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnExecStatusChanged"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnInformation"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPostExecute"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPostValidate"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPreExecute"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPreValidate"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnProgress"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnQueryCancel"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnTaskFailed"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnVariableValueChanged"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnWarning"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
              </DTS:LoggingOptions>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                  SQLTask:SqlStatementSource="TRUNCATE table dm_opensrs.domainname" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{2F8129D2-35D5-4B5B-94AB-83CCB1000818}"
              DTS:From="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Truncate Domainname"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{E3A5AF04-0B19-43C5-AE4C-36120E6179E8}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="01_3  Extract  Enom Domain NameServers">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">19,7,OnError,19,OnExecStatusChanged,13,OnInformation,27,OnPipelinePostComponentCall,25,OnPipelinePostEndOfRowset,25,OnPipelinePostPrimeOutput,26,OnPipelinePreComponentCall,24,OnPipelinePreEndOfRowset,24,OnPipelinePrePrimeOutput,18,OnPipelineRowsSent,13,OnPostExecute,14,OnPostValidate,12,OnPreExecute,13,OnPreValidate,10,OnProgress,13,OnQueryCancel,12,OnTaskFailed,22,OnVariableValueChanged,9,OnWarning</DTS:Property>
            <DTS:Property
              DTS:EventName="OnError"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnExecStatusChanged"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnInformation"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePostComponentCall"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePostEndOfRowset"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePostPrimeOutput"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePreComponentCall"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePreEndOfRowset"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePrePrimeOutput"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelineRowsSent"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPostExecute"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPostValidate"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPreExecute"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPreValidate"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnProgress"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnQueryCancel"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnTaskFailed"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnVariableValueChanged"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnWarning"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
          </DTS:LoggingOptions>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{9FBFF10A-C22D-482D-8B8C-73F0414A980D}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Extract NameServers table to NameServers_"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="[ADO NET Source].[SqlCommand]">"SELECT  dnsp.id AS domain_nameserver_id, 
	dnsp.domain_id ,dnsp.NAMESERVER_ID,
	n.FQDN,n.ip,n.ipv6, substr(TLDS.NAME, 2) AS TLD
FROM  opensrs.domain_ns_map dnsp
JOIN  opensrs.domains d on d.id=dnsp.domain_id 
LEFT JOIN OPENSRS.TLDS   ON TLDS.id=d.TLD_ID  
JOIN opensrs.nameservers n ON n.id=dnsp.NAMESERVER_ID
WHERE F_REGISTERED=1 AND  substr(TLDS.NAME, 2)='"+ @[$Package::TLD]+ "'
 
UNION ALL 
SELECT NULL  AS domain_nameserver_id,
domain_id, id AS NAMESERVER_ID,
FQDN, NULL AS ip, NULL AS ipv6, TLD
FROM (
  SELECT  del.domain_id,del.id,substr(TLDS.NAME, 2) AS TLD,
    FQDN1, FQDN2, FQDN3, FQDN4, FQDN5, FQDN6, FQDN7, FQDN8, FQDN9, FQDN10
  FROM  OPENSRS.deletions del
  LEFT JOIN OPENSRS.TLDS   ON TLDS.id=del.TLD_ID
  left outer join OPENSRS.domains d on (del.domain = d.name) 
  WHERE del.reason = 'Expired'
	AND  OPENSRS.unixtodate(del.delete_time+30*24*3600) &gt; sysdate
	AND  d.name is NULL
	AND  substr(TLDS.NAME, 2)='"+ @[$Package::TLD]+ "'
) dd
UNPIVOT (
  (FQDN )
   FOR host_number IN (
     ( FQDN1   ) AS '1',
     ( FQDN2   ) AS '2',
     ( FQDN3   ) AS '3',
     ( FQDN4  )  AS '4',
     ( FQDN5   ) AS '5',
     ( FQDN6   ) AS '6',
     ( FQDN7   ) AS '7',
     ( FQDN8  )  AS '8',
     ( FQDN9   ) AS '9',
     ( FQDN10   ) AS '10' 
  )
);"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <pipeline
                  autoAdjustBufferSize="true"
                  defaultBufferMaxRows="100000"
                  version="1">
                  <components>
                    <component
                      refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
                      name="ADO NET Source"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement used by the component to extract data."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT  dnsp.id AS domain_nameserver_id, 
	dnsp.domain_id ,dnsp.NAMESERVER_ID,
	n.FQDN,n.ip,n.ipv6, substr(TLDS.NAME, 2) AS TLD
FROM  opensrs.domain_ns_map dnsp
JOIN  opensrs.domains d on d.id=dnsp.domain_id 
LEFT JOIN OPENSRS.TLDS   ON TLDS.id=d.TLD_ID  
JOIN opensrs.nameservers n ON n.id=dnsp.NAMESERVER_ID
WHERE F_REGISTERED=1 AND  substr(TLDS.NAME, 2)='in'
 
UNION ALL 
SELECT NULL  AS domain_nameserver_id,
domain_id, id AS NAMESERVER_ID,
FQDN, NULL AS ip, NULL AS ipv6, TLD
FROM (
  SELECT  del.domain_id,del.id,substr(TLDS.NAME, 2) AS TLD,
    FQDN1, FQDN2, FQDN3, FQDN4, FQDN5, FQDN6, FQDN7, FQDN8, FQDN9, FQDN10
  FROM  OPENSRS.deletions del
  LEFT JOIN OPENSRS.TLDS   ON TLDS.id=del.TLD_ID
  left outer join OPENSRS.domains d on (del.domain = d.name) 
  WHERE del.reason = 'Expired'
	AND  OPENSRS.unixtodate(del.delete_time+30*24*3600) &gt; sysdate
	AND  d.name is NULL
	AND  substr(TLDS.NAME, 2)='in'
) dd
UNPIVOT (
  (FQDN )
   FOR host_number IN (
     ( FQDN1   ) AS '1',
     ( FQDN2   ) AS '2',
     ( FQDN3   ) AS '3',
     ( FQDN4  )  AS '4',
     ( FQDN5   ) AS '5',
     ( FQDN6   ) AS '6',
     ( FQDN7   ) AS '7',
     ( FQDN8  )  AS '8',
     ( FQDN9   ) AS '9',
     ( FQDN10   ) AS '10' 
  )
);</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">30</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                          name="AllowImplicitStringConversion">true</property>
                        <property
                          dataType="System.String"
                          description="The Source database table name."
                          expressionType="Notify"
                          name="TableOrViewName"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specify the mode to retrieve external column information"
                          name="AccessMode"
                          typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Connections[IDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Devart OpenSRS Oracle]"
                          connectionManagerRefId="Package.ConnectionManagers[Devart OpenSRS Oracle]"
                          description="Managed connection manager"
                          name="IDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output]"
                          name="ADO NET Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].Columns[DOMAIN_NAMESERVER_ID]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[DOMAIN_NAMESERVER_ID]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].Columns[DOMAIN_NAMESERVER_ID]"
                              name="DOMAIN_NAMESERVER_ID"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].Columns[DOMAIN_ID]"
                              dataType="i8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[DOMAIN_ID]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].Columns[DOMAIN_ID]"
                              name="DOMAIN_ID"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].Columns[NAMESERVER_ID]"
                              dataType="i8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[NAMESERVER_ID]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].Columns[NAMESERVER_ID]"
                              name="NAMESERVER_ID"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].Columns[FQDN]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[FQDN]"
                              length="255"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].Columns[FQDN]"
                              name="FQDN"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].Columns[IP]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[IP]"
                              length="45"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].Columns[IP]"
                              name="IP"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].Columns[IPV6]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[IPV6]"
                              length="45"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].Columns[IPV6]"
                              name="IPV6"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].Columns[TLD]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[TLD]"
                              length="19"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].Columns[TLD]"
                              name="TLD"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[DOMAIN_NAMESERVER_ID]"
                              dataType="r8"
                              name="DOMAIN_NAMESERVER_ID" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[DOMAIN_ID]"
                              dataType="i8"
                              name="DOMAIN_ID" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[NAMESERVER_ID]"
                              dataType="i8"
                              name="NAMESERVER_ID" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[FQDN]"
                              dataType="wstr"
                              length="255"
                              name="FQDN" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[IP]"
                              dataType="wstr"
                              length="45"
                              name="IP" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[IPV6]"
                              dataType="wstr"
                              length="45"
                              name="IPV6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[TLD]"
                              dataType="wstr"
                              length="19"
                              name="TLD" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Error Output]"
                          isErrorOut="true"
                          name="ADO NET Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[DOMAIN_NAMESERVER_ID]"
                              dataType="r8"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[DOMAIN_NAMESERVER_ID]"
                              name="DOMAIN_NAMESERVER_ID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[DOMAIN_ID]"
                              dataType="i8"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[DOMAIN_ID]"
                              name="DOMAIN_ID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[NAMESERVER_ID]"
                              dataType="i8"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[NAMESERVER_ID]"
                              name="NAMESERVER_ID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[FQDN]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[FQDN]"
                              name="FQDN" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[IP]"
                              dataType="wstr"
                              length="45"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[IP]"
                              name="IP" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[IPV6]"
                              dataType="wstr"
                              length="45"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[IPV6]"
                              name="IPV6" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[TLD]"
                              dataType="wstr"
                              length="19"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[TLD]"
                              name="TLD" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers"
                      componentClassID="Microsoft.SSISODBCDst"
                      contactInfo="ODBC Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="ODBC Destination"
                      name="ODBC Destination Nameservers"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The name of the table to be fetched."
                          expressionType="Notify"
                          name="TableName">"dm_opensrs"."nameservers"</property>
                        <property
                          dataType="System.Int32"
                          description="Specify the number of rows fetched per batch."
                          expressionType="Notify"
                          name="BatchSize">10000</property>
                        <property
                          dataType="System.Int32"
                          description="The number of rows inserted under the same transaction."
                          expressionType="Notify"
                          name="TransactionSize">100000</property>
                        <property
                          dataType="System.Int32"
                          description="Determines the chunk size allocation for LOB columns"
                          expressionType="Notify"
                          name="LobChunkSize">32768</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                          expressionType="Notify"
                          name="StatementTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="The code page to use when code page information is unavailable from the data source."
                          expressionType="Notify"
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Int32"
                          description="The method used for inserting data. Possible values are 'Batch' or 'Row by row'."
                          expressionType="Notify"
                          name="InsertMethod">1</property>
                        <property
                          dataType="System.Int32"
                          description="The ODBC C data type for binding numeric data."
                          expressionType="Notify"
                          name="BindNumericAs">0</property>
                        <property
                          dataType="System.Int32"
                          description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                          expressionType="Notify"
                          name="BindCharColumnsAs">0</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Connections[ODBCConnection]"
                          connectionManagerID="Package.ConnectionManagers[tdpdb]"
                          connectionManagerRefId="Package.ConnectionManagers[tdpdb]"
                          description="The ODBC runtime connection used to access the database."
                          name="ODBCConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="ODBC Destination Input"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].Columns[DOMAIN_ID]"
                              cachedDataType="i8"
                              cachedName="DOMAIN_ID"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].ExternalColumns[domainnameid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].Columns[DOMAIN_ID]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].Columns[FQDN]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="FQDN"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].ExternalColumns[name]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].Columns[FQDN]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].Columns[NAMESERVER_ID]"
                              cachedDataType="i8"
                              cachedName="NAMESERVER_ID"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].ExternalColumns[idx]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].Columns[NAMESERVER_ID]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].Columns[TLD]"
                              cachedDataType="wstr"
                              cachedLength="19"
                              cachedName="TLD"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].Columns[TLD]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].Columns[IP]"
                              cachedDataType="wstr"
                              cachedLength="45"
                              cachedName="IP"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].ExternalColumns[ip]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].Columns[IP]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].Columns[IPV6]"
                              cachedDataType="wstr"
                              cachedLength="45"
                              cachedName="IPV6"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].ExternalColumns[ipv6]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].Columns[IPV6]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].Columns[DOMAIN_NAMESERVER_ID]"
                              cachedDataType="r8"
                              cachedName="DOMAIN_NAMESERVER_ID"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].ExternalColumns[domain_nameserver_id]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output].Columns[DOMAIN_NAMESERVER_ID]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].ExternalColumns[domainnameid]"
                              dataType="i4"
                              name="domainnameid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].ExternalColumns[idx]"
                              dataType="i4"
                              name="idx" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].ExternalColumns[name]"
                              dataType="wstr"
                              length="255"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].ExternalColumns[itdp_domain_id]"
                              dataType="guid"
                              name="itdp_domain_id" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].ExternalColumns[itdp_host_id]"
                              dataType="guid"
                              name="itdp_host_id" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                              dataType="wstr"
                              length="20"
                              name="tld" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].ExternalColumns[ip]"
                              dataType="wstr"
                              length="45"
                              name="ip" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].ExternalColumns[ipv6]"
                              dataType="wstr"
                              length="45"
                              name="ipv6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].ExternalColumns[domain_nameserver_id]"
                              dataType="i4"
                              name="domain_nameserver_id" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input].ExternalColumns[source_nameserver_id]"
                              dataType="i4"
                              name="source_nameserver_id" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Outputs[ODBC Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="ODBC Destination Error Output"
                          synchronousInputId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_.Paths[ADO NET Source Output]"
                      endId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers.Inputs[ODBC Destination Input]"
                      name="ADO NET Source Output"
                      startId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source.Outputs[ADO NET Source Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Truncate NameServers"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{C17F100E-94B7-49AF-BEB7-127F92D0646F}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Truncate NameServers"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                  SQLTask:SqlStatementSource="TRUNCATE table dm_opensrs.nameservers" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{6C322D9E-3E45-49FC-B130-CA4673E4C4CD}"
              DTS:From="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Truncate NameServers"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{90B3599C-A581-4C44-8D22-06D67A4B066E}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="01_5 Extract public contact">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[$Package::private_contact] == True ? True : False</DTS:PropertyExpression>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{3194A3BA-EC24-420E-9C96-372476A6A1DE}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Data Flow Task"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="[ADO NET Source].[SqlCommand]">"SELECT dc.domain_id,dc.contact_type ,
CASE WHEN dc.contact_type='owner' THEN  'registrant'
	ELSE dc.contact_type END  AS c_type , rc.reg_contact_id, substr(TLDS.NAME, 2) AS TLD,
	c.id, c.FIRST_NAME, c.LAST_NAME, c.ORG_NAME, c.ADDRESS1, c.ADDRESS2, c.ADDRESS3, c.CITY, c.STATE, c.POSTAL_CODE, c.COUNTRY,
	c.PHONE, c.FAX, c.EMAIL
FROM OPENSRS.domain_contacts dc
JOIN OPENSRS.domains d ON dc.domain_id=d.id
LEFT JOIN OPENSRS.contacts c ON c.id=dc.contact_id
LEFT JOIN OPENSRS.TLDS ON TLDS.id=d.TLD_ID  
LEFT JOIN OPENSRS.registry_contacts rc ON rc.CONTACT_ID =dc.CONTACT_ID  AND rc.REGISTRY_ID=tlds.ID
WHERE  F_REGISTERED=1 AND  substr(TLDS.NAME, 2)='"+ @[$Package::TLD] +"'

UNION ALL 
SELECT domain_id,contact_type ,
contact_type AS c_type, NULL AS reg_contact_id,TLD,
id, FIRST_NAME, LAST_NAME, ORG_NAME, ADDRESS1, ADDRESS2, ADDRESS3, CITY, STATE, POSTAL_CODE, COUNTRY, PHONE, FAX, EMAIL 
FROM (
  SELECT  del.domain_id,del.id,substr(TLDS.NAME, 2) AS TLD,
    OWNER_FIRST_NAME,   OWNER_LAST_NAME,   OWNER_ORG_NAME,   OWNER_ADDRESS1,   OWNER_ADDRESS2,   OWNER_ADDRESS3,   OWNER_CITY,   OWNER_STATE,   OWNER_COUNTRY,   OWNER_POSTAL_CODE,   OWNER_PHONE,   OWNER_FAX,   OWNER_EMAIL, 
    ADMIN_FIRST_NAME,   ADMIN_LAST_NAME,   ADMIN_ORG_NAME,   ADMIN_ADDRESS1,   ADMIN_ADDRESS2,   ADMIN_ADDRESS3,   ADMIN_CITY,   ADMIN_STATE,   ADMIN_COUNTRY,   ADMIN_POSTAL_CODE,   ADMIN_PHONE,   ADMIN_FAX,   ADMIN_EMAIL,
 	BILLING_FIRST_NAME, BILLING_LAST_NAME, BILLING_ORG_NAME, BILLING_ADDRESS1, BILLING_ADDRESS2, BILLING_ADDRESS3, BILLING_CITY, BILLING_STATE, BILLING_COUNTRY, BILLING_POSTAL_CODE, BILLING_PHONE, BILLING_FAX, BILLING_EMAIL,
 	TECH_FIRST_NAME,    TECH_LAST_NAME,    TECH_ORG_NAME,    TECH_ADDRESS1,    TECH_ADDRESS2,    TECH_ADDRESS3,    TECH_CITY,    TECH_STATE,    TECH_COUNTRY,    TECH_POSTAL_CODE,     TECH_PHONE,    TECH_FAX,    TECH_EMAIL
  FROM  OPENSRS.deletions del
  LEFT JOIN OPENSRS.TLDS   ON TLDS.id=del.TLD_ID
  left outer join OPENSRS.domains d on (del.domain = d.name) 
  WHERE del.reason = 'Expired'
	AND  OPENSRS.unixtodate(del.delete_time+30*24*3600) &gt; sysdate
	AND  d.name is NULL
	AND  substr(TLDS.NAME, 2) ='"+ @[$Package::TLD] +"'
) dd
UNPIVOT (
  (FIRST_NAME,LAST_NAME,ORG_NAME, ADDRESS1, ADDRESS2,  ADDRESS3,  CITY,  STATE,  COUNTRY,  POSTAL_CODE,  PHONE,  FAX,  EMAIL )
   FOR contact_type IN (
     ( OWNER_FIRST_NAME,  OWNER_LAST_NAME,   OWNER_ORG_NAME,   OWNER_ADDRESS1,   OWNER_ADDRESS2,   OWNER_ADDRESS3,   OWNER_CITY,   OWNER_STATE,   OWNER_COUNTRY,   OWNER_POSTAL_CODE,   OWNER_PHONE,   OWNER_FAX,   OWNER_EMAIL
   ) AS 'registrant',
     (ADMIN_FIRST_NAME,   ADMIN_LAST_NAME,   ADMIN_ORG_NAME,   ADMIN_ADDRESS1,   ADMIN_ADDRESS2,   ADMIN_ADDRESS3,   ADMIN_CITY,   ADMIN_STATE,   ADMIN_COUNTRY,   ADMIN_POSTAL_CODE,   ADMIN_PHONE,   ADMIN_FAX,   ADMIN_EMAIL
 ) AS 'admin',
     (TECH_FIRST_NAME,    TECH_LAST_NAME,    TECH_ORG_NAME,   TECH_ADDRESS1,     TECH_ADDRESS2,    TECH_ADDRESS3,    TECH_CITY,    TECH_STATE,    TECH_COUNTRY,    TECH_POSTAL_CODE,    TECH_PHONE,    TECH_FAX,    TECH_EMAIL
)  AS 'tech',
     (BILLING_FIRST_NAME, BILLING_LAST_NAME, BILLING_ORG_NAME, BILLING_ADDRESS1, BILLING_ADDRESS2, BILLING_ADDRESS3, BILLING_CITY, BILLING_STATE, BILLING_COUNTRY, BILLING_POSTAL_CODE, BILLING_PHONE, BILLING_FAX, BILLING_EMAIL
 )  AS 'billing'
  )
);"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <pipeline
                  autoAdjustBufferSize="true"
                  defaultBufferMaxRows="100000"
                  version="1">
                  <components>
                    <component
                      refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
                      name="ADO NET Source"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement used by the component to extract data."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT dc.domain_id,dc.contact_type ,
CASE WHEN dc.contact_type='owner' THEN  'registrant'
	ELSE dc.contact_type END  AS c_type , rc.reg_contact_id, substr(TLDS.NAME, 2) AS TLD,
	c.id, c.FIRST_NAME, c.LAST_NAME, c.ORG_NAME, c.ADDRESS1, c.ADDRESS2, c.ADDRESS3, c.CITY, c.STATE, c.POSTAL_CODE, c.COUNTRY,
	c.PHONE, c.FAX, c.EMAIL
FROM OPENSRS.domain_contacts dc
JOIN OPENSRS.domains d ON dc.domain_id=d.id
LEFT JOIN OPENSRS.contacts c ON c.id=dc.contact_id
LEFT JOIN OPENSRS.TLDS ON TLDS.id=d.TLD_ID  
LEFT JOIN OPENSRS.registry_contacts rc ON rc.CONTACT_ID =dc.CONTACT_ID  AND rc.REGISTRY_ID=tlds.ID
WHERE  F_REGISTERED=1 AND  substr(TLDS.NAME, 2)='in'

UNION ALL 
SELECT domain_id,contact_type ,
contact_type AS c_type, NULL AS reg_contact_id,TLD,
id, FIRST_NAME, LAST_NAME, ORG_NAME, ADDRESS1, ADDRESS2, ADDRESS3, CITY, STATE, POSTAL_CODE, COUNTRY, PHONE, FAX, EMAIL 
FROM (
  SELECT  del.domain_id,del.id,substr(TLDS.NAME, 2) AS TLD,
    OWNER_FIRST_NAME,   OWNER_LAST_NAME,   OWNER_ORG_NAME,   OWNER_ADDRESS1,   OWNER_ADDRESS2,   OWNER_ADDRESS3,   OWNER_CITY,   OWNER_STATE,   OWNER_COUNTRY,   OWNER_POSTAL_CODE,   OWNER_PHONE,   OWNER_FAX,   OWNER_EMAIL, 
    ADMIN_FIRST_NAME,   ADMIN_LAST_NAME,   ADMIN_ORG_NAME,   ADMIN_ADDRESS1,   ADMIN_ADDRESS2,   ADMIN_ADDRESS3,   ADMIN_CITY,   ADMIN_STATE,   ADMIN_COUNTRY,   ADMIN_POSTAL_CODE,   ADMIN_PHONE,   ADMIN_FAX,   ADMIN_EMAIL,
 	BILLING_FIRST_NAME, BILLING_LAST_NAME, BILLING_ORG_NAME, BILLING_ADDRESS1, BILLING_ADDRESS2, BILLING_ADDRESS3, BILLING_CITY, BILLING_STATE, BILLING_COUNTRY, BILLING_POSTAL_CODE, BILLING_PHONE, BILLING_FAX, BILLING_EMAIL,
 	TECH_FIRST_NAME,    TECH_LAST_NAME,    TECH_ORG_NAME,    TECH_ADDRESS1,    TECH_ADDRESS2,    TECH_ADDRESS3,    TECH_CITY,    TECH_STATE,    TECH_COUNTRY,    TECH_POSTAL_CODE,     TECH_PHONE,    TECH_FAX,    TECH_EMAIL
  FROM  OPENSRS.deletions del
  LEFT JOIN OPENSRS.TLDS   ON TLDS.id=del.TLD_ID
  left outer join OPENSRS.domains d on (del.domain = d.name) 
  WHERE del.reason = 'Expired'
	AND  OPENSRS.unixtodate(del.delete_time+30*24*3600) &gt; sysdate
	AND  d.name is NULL
	AND  substr(TLDS.NAME, 2) ='in'
) dd
UNPIVOT (
  (FIRST_NAME,LAST_NAME,ORG_NAME, ADDRESS1, ADDRESS2,  ADDRESS3,  CITY,  STATE,  COUNTRY,  POSTAL_CODE,  PHONE,  FAX,  EMAIL )
   FOR contact_type IN (
     ( OWNER_FIRST_NAME,  OWNER_LAST_NAME,   OWNER_ORG_NAME,   OWNER_ADDRESS1,   OWNER_ADDRESS2,   OWNER_ADDRESS3,   OWNER_CITY,   OWNER_STATE,   OWNER_COUNTRY,   OWNER_POSTAL_CODE,   OWNER_PHONE,   OWNER_FAX,   OWNER_EMAIL
   ) AS 'registrant',
     (ADMIN_FIRST_NAME,   ADMIN_LAST_NAME,   ADMIN_ORG_NAME,   ADMIN_ADDRESS1,   ADMIN_ADDRESS2,   ADMIN_ADDRESS3,   ADMIN_CITY,   ADMIN_STATE,   ADMIN_COUNTRY,   ADMIN_POSTAL_CODE,   ADMIN_PHONE,   ADMIN_FAX,   ADMIN_EMAIL
 ) AS 'admin',
     (TECH_FIRST_NAME,    TECH_LAST_NAME,    TECH_ORG_NAME,   TECH_ADDRESS1,     TECH_ADDRESS2,    TECH_ADDRESS3,    TECH_CITY,    TECH_STATE,    TECH_COUNTRY,    TECH_POSTAL_CODE,    TECH_PHONE,    TECH_FAX,    TECH_EMAIL
)  AS 'tech',
     (BILLING_FIRST_NAME, BILLING_LAST_NAME, BILLING_ORG_NAME, BILLING_ADDRESS1, BILLING_ADDRESS2, BILLING_ADDRESS3, BILLING_CITY, BILLING_STATE, BILLING_COUNTRY, BILLING_POSTAL_CODE, BILLING_PHONE, BILLING_FAX, BILLING_EMAIL
 )  AS 'billing'
  )
);</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">30</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                          name="AllowImplicitStringConversion">true</property>
                        <property
                          dataType="System.String"
                          description="The Source database table name."
                          expressionType="Notify"
                          name="TableOrViewName"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specify the mode to retrieve external column information"
                          name="AccessMode"
                          typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Connections[IDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Devart OpenSRS Oracle]"
                          connectionManagerRefId="Package.ConnectionManagers[Devart OpenSRS Oracle]"
                          description="Managed connection manager"
                          name="IDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output]"
                          name="ADO NET Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[DOMAIN_ID]"
                              dataType="i8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[DOMAIN_ID]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[DOMAIN_ID]"
                              name="DOMAIN_ID"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[CONTACT_TYPE]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CONTACT_TYPE]"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[CONTACT_TYPE]"
                              name="CONTACT_TYPE"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[C_TYPE]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[C_TYPE]"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[C_TYPE]"
                              name="C_TYPE"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[REG_CONTACT_ID]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[REG_CONTACT_ID]"
                              length="100"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[REG_CONTACT_ID]"
                              name="REG_CONTACT_ID"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[TLD]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[TLD]"
                              length="19"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[TLD]"
                              name="TLD"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[ID]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ID]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[ID]"
                              name="ID"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[FIRST_NAME]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[FIRST_NAME]"
                              length="64"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[FIRST_NAME]"
                              name="FIRST_NAME"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[LAST_NAME]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[LAST_NAME]"
                              length="64"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[LAST_NAME]"
                              name="LAST_NAME"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[ORG_NAME]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ORG_NAME]"
                              length="64"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[ORG_NAME]"
                              name="ORG_NAME"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[ADDRESS1]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ADDRESS1]"
                              length="100"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[ADDRESS1]"
                              name="ADDRESS1"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[ADDRESS2]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ADDRESS2]"
                              length="100"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[ADDRESS2]"
                              name="ADDRESS2"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[ADDRESS3]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ADDRESS3]"
                              length="100"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[ADDRESS3]"
                              name="ADDRESS3"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[CITY]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CITY]"
                              length="64"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[CITY]"
                              name="CITY"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[STATE]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[STATE]"
                              length="64"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[STATE]"
                              name="STATE"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[POSTAL_CODE]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[POSTAL_CODE]"
                              length="32"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[POSTAL_CODE]"
                              name="POSTAL_CODE"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[COUNTRY]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[COUNTRY]"
                              length="6"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[COUNTRY]"
                              name="COUNTRY"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[PHONE]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[PHONE]"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[PHONE]"
                              name="PHONE"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[FAX]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[FAX]"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[FAX]"
                              name="FAX"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[EMAIL]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[EMAIL]"
                              length="255"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[EMAIL]"
                              name="EMAIL"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[DOMAIN_ID]"
                              dataType="i8"
                              name="DOMAIN_ID" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CONTACT_TYPE]"
                              dataType="wstr"
                              length="20"
                              name="CONTACT_TYPE" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[C_TYPE]"
                              dataType="wstr"
                              length="20"
                              name="C_TYPE" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[REG_CONTACT_ID]"
                              dataType="wstr"
                              length="100"
                              name="REG_CONTACT_ID" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[TLD]"
                              dataType="wstr"
                              length="19"
                              name="TLD" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ID]"
                              dataType="r8"
                              name="ID" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[FIRST_NAME]"
                              dataType="wstr"
                              length="64"
                              name="FIRST_NAME" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[LAST_NAME]"
                              dataType="wstr"
                              length="64"
                              name="LAST_NAME" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ORG_NAME]"
                              dataType="wstr"
                              length="64"
                              name="ORG_NAME" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ADDRESS1]"
                              dataType="wstr"
                              length="100"
                              name="ADDRESS1" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ADDRESS2]"
                              dataType="wstr"
                              length="100"
                              name="ADDRESS2" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ADDRESS3]"
                              dataType="wstr"
                              length="100"
                              name="ADDRESS3" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CITY]"
                              dataType="wstr"
                              length="64"
                              name="CITY" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[STATE]"
                              dataType="wstr"
                              length="64"
                              name="STATE" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[POSTAL_CODE]"
                              dataType="wstr"
                              length="32"
                              name="POSTAL_CODE" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[COUNTRY]"
                              dataType="wstr"
                              length="6"
                              name="COUNTRY" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[PHONE]"
                              dataType="wstr"
                              length="20"
                              name="PHONE" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[FAX]"
                              dataType="wstr"
                              length="20"
                              name="FAX" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[EMAIL]"
                              dataType="wstr"
                              length="255"
                              name="EMAIL" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output]"
                          isErrorOut="true"
                          name="ADO NET Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[DOMAIN_ID]"
                              dataType="i8"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[DOMAIN_ID]"
                              name="DOMAIN_ID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CONTACT_TYPE]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CONTACT_TYPE]"
                              name="CONTACT_TYPE" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[C_TYPE]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[C_TYPE]"
                              name="C_TYPE" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[REG_CONTACT_ID]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[REG_CONTACT_ID]"
                              name="REG_CONTACT_ID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[TLD]"
                              dataType="wstr"
                              length="19"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[TLD]"
                              name="TLD" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ID]"
                              dataType="r8"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ID]"
                              name="ID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[FIRST_NAME]"
                              dataType="wstr"
                              length="64"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[FIRST_NAME]"
                              name="FIRST_NAME" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[LAST_NAME]"
                              dataType="wstr"
                              length="64"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[LAST_NAME]"
                              name="LAST_NAME" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ORG_NAME]"
                              dataType="wstr"
                              length="64"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ORG_NAME]"
                              name="ORG_NAME" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ADDRESS1]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ADDRESS1]"
                              name="ADDRESS1" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ADDRESS2]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ADDRESS2]"
                              name="ADDRESS2" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ADDRESS3]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ADDRESS3]"
                              name="ADDRESS3" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CITY]"
                              dataType="wstr"
                              length="64"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CITY]"
                              name="CITY" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[STATE]"
                              dataType="wstr"
                              length="64"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[STATE]"
                              name="STATE" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[POSTAL_CODE]"
                              dataType="wstr"
                              length="32"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[POSTAL_CODE]"
                              name="POSTAL_CODE" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[COUNTRY]"
                              dataType="wstr"
                              length="6"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[COUNTRY]"
                              name="COUNTRY" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[PHONE]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[PHONE]"
                              name="PHONE" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[FAX]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[FAX]"
                              name="FAX" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[EMAIL]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[EMAIL]"
                              name="EMAIL" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination"
                      componentClassID="Microsoft.SSISODBCDst"
                      contactInfo="ODBC Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="ODBC Destination"
                      name="ODBC Destination"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The name of the table to be fetched."
                          expressionType="Notify"
                          name="TableName">"dm_opensrs"."contact"</property>
                        <property
                          dataType="System.Int32"
                          description="Specify the number of rows fetched per batch."
                          expressionType="Notify"
                          name="BatchSize">10000</property>
                        <property
                          dataType="System.Int32"
                          description="The number of rows inserted under the same transaction."
                          expressionType="Notify"
                          name="TransactionSize">100000</property>
                        <property
                          dataType="System.Int32"
                          description="Determines the chunk size allocation for LOB columns"
                          expressionType="Notify"
                          name="LobChunkSize">32768</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                          expressionType="Notify"
                          name="StatementTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="The code page to use when code page information is unavailable from the data source."
                          expressionType="Notify"
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Int32"
                          description="The method used for inserting data. Possible values are 'Batch' or 'Row by row'."
                          expressionType="Notify"
                          name="InsertMethod">1</property>
                        <property
                          dataType="System.Int32"
                          description="The ODBC C data type for binding numeric data."
                          expressionType="Notify"
                          name="BindNumericAs">0</property>
                        <property
                          dataType="System.Int32"
                          description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                          expressionType="Notify"
                          name="BindCharColumnsAs">0</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Connections[ODBCConnection]"
                          connectionManagerID="Package.ConnectionManagers[tdpdb]"
                          connectionManagerRefId="Package.ConnectionManagers[tdpdb]"
                          description="The ODBC runtime connection used to access the database."
                          name="ODBCConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="ODBC Destination Input"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].Columns[CONTACT_TYPE]"
                              cachedDataType="wstr"
                              cachedLength="20"
                              cachedName="CONTACT_TYPE"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[contact_type]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[CONTACT_TYPE]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].Columns[FIRST_NAME]"
                              cachedDataType="wstr"
                              cachedLength="64"
                              cachedName="FIRST_NAME"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[first_name]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[FIRST_NAME]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].Columns[LAST_NAME]"
                              cachedDataType="wstr"
                              cachedLength="64"
                              cachedName="LAST_NAME"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[last_name]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[LAST_NAME]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].Columns[ADDRESS1]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ADDRESS1"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[address1]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[ADDRESS1]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].Columns[ADDRESS2]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ADDRESS2"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[address2]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[ADDRESS2]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].Columns[ADDRESS3]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ADDRESS3"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[address3]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[ADDRESS3]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].Columns[CITY]"
                              cachedDataType="wstr"
                              cachedLength="64"
                              cachedName="CITY"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[city]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[CITY]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].Columns[STATE]"
                              cachedDataType="wstr"
                              cachedLength="64"
                              cachedName="STATE"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[state]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[STATE]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].Columns[POSTAL_CODE]"
                              cachedDataType="wstr"
                              cachedLength="32"
                              cachedName="POSTAL_CODE"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[postal_code]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[POSTAL_CODE]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].Columns[DOMAIN_ID]"
                              cachedDataType="i8"
                              cachedName="DOMAIN_ID"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[domainnameid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[DOMAIN_ID]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].Columns[ORG_NAME]"
                              cachedDataType="wstr"
                              cachedLength="64"
                              cachedName="ORG_NAME"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[organization]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[ORG_NAME]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].Columns[ID]"
                              cachedDataType="r8"
                              cachedName="ID"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[enom_contact_id]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[ID]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].Columns[EMAIL]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="EMAIL"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[email_address]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[EMAIL]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].Columns[COUNTRY]"
                              cachedDataType="wstr"
                              cachedLength="6"
                              cachedName="COUNTRY"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[country_code]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[COUNTRY]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].Columns[PHONE]"
                              cachedDataType="wstr"
                              cachedLength="20"
                              cachedName="PHONE"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[phone_number]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[PHONE]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].Columns[FAX]"
                              cachedDataType="wstr"
                              cachedLength="20"
                              cachedName="FAX"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[fax_number]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[FAX]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].Columns[REG_CONTACT_ID]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="REG_CONTACT_ID"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[handl]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[REG_CONTACT_ID]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].Columns[TLD]"
                              cachedDataType="wstr"
                              cachedLength="19"
                              cachedName="TLD"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[TLD]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].Columns[C_TYPE]"
                              cachedDataType="wstr"
                              cachedLength="20"
                              cachedName="C_TYPE"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[c_type]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output].Columns[C_TYPE]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[domainnameid]"
                              dataType="i4"
                              name="domainnameid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[itdp_domain_id]"
                              dataType="guid"
                              name="itdp_domain_id" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[itdp_contact_id]"
                              dataType="guid"
                              name="itdp_contact_id" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[id]"
                              dataType="guid"
                              name="id" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[enom_contact_id]"
                              dataType="i4"
                              name="enom_contact_id" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[contact_type]"
                              dataType="wstr"
                              length="20"
                              name="contact_type" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[first_name]"
                              dataType="wstr"
                              length="200"
                              name="first_name" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[last_name]"
                              dataType="wstr"
                              length="200"
                              name="last_name" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[email_address]"
                              dataType="wstr"
                              length="320"
                              name="email_address" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[organization]"
                              dataType="wstr"
                              length="300"
                              name="organization" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[address1]"
                              dataType="wstr"
                              length="255"
                              name="address1" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[address2]"
                              dataType="wstr"
                              length="255"
                              name="address2" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[address3]"
                              dataType="wstr"
                              length="255"
                              name="address3" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[city]"
                              dataType="wstr"
                              length="120"
                              name="city" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[state]"
                              dataType="wstr"
                              length="120"
                              name="state" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[postal_code]"
                              dataType="wstr"
                              length="32"
                              name="postal_code" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[country_code]"
                              dataType="wstr"
                              length="6"
                              name="country_code" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[phone_number]"
                              dataType="wstr"
                              length="31"
                              name="phone_number" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[phone_extension]"
                              dataType="wstr"
                              length="15"
                              name="phone_extension" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[fax_number]"
                              dataType="wstr"
                              length="31"
                              name="fax_number" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[reseller_id]"
                              dataType="i4"
                              name="reseller_id" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                              dataType="wstr"
                              length="20"
                              name="tld" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[c_type]"
                              dataType="wstr"
                              length="20"
                              name="c_type" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[npd]"
                              codePage="1252"
                              dataType="str"
                              length="5"
                              name="npd" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[is_private]"
                              codePage="1252"
                              dataType="str"
                              length="5"
                              name="is_private" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input].ExternalColumns[handl]"
                              dataType="nText"
                              name="handl" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Outputs[ODBC Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="ODBC Destination Error Output"
                          synchronousInputId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task.Paths[ADO NET Source Output]"
                      endId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination.Inputs[ODBC Destination Input]"
                      name="ADO NET Source Output"
                      startId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source.Outputs[ADO NET Source Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Truncate contact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{4de2a00f-d604-44bd-b996-f3f72951d626}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Truncate contact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="1">
                <DTS:Property
                  DTS:DataType="8"
                  DTS:Name="EventFilter">13,7,OnError,19,OnExecStatusChanged,13,OnInformation,13,OnPostExecute,14,OnPostValidate,12,OnPreExecute,13,OnPreValidate,10,OnProgress,13,OnQueryCancel,12,OnTaskFailed,22,OnVariableValueChanged,9,OnWarning,24,ExecuteSQLExecutingQuery</DTS:Property>
                <DTS:Property
                  DTS:EventName="ExecuteSQLExecutingQuery"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnError"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnExecStatusChanged"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnInformation"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPostExecute"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPostValidate"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPreExecute"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPreValidate"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnProgress"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnQueryCancel"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnTaskFailed"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnVariableValueChanged"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnWarning"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
              </DTS:LoggingOptions>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                  SQLTask:SqlStatementSource="TRUNCATE table dm_opensrs.contact" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{96ED86D1-21CA-4D40-AF26-E7986E0A8F32}"
              DTS:From="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Truncate contact"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\01 Extract Enom domain, contact, host\dm_log - dm_start"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{8D992D57-2594-4EDD-95C1-7DFBA691B640}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="dm_log - dm_start"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"BEGIN ;
INSERT INTO itdp.dm_log
( id, phase, dm_source, tld, start_date, status)
VALUES( "+ (DT_WSTR, 5) @[User::dm_log_id] +",'"+  @[$Package::Migration_phase] +"', '"+ @[$Package::Tenant]  +"', '"+ @[$Package::TLD] +"', NOW(), 'opensrs_dm started' );

UPDATE  itdp.tld t
SET migration_status = NULL , 
	result_domain.extract = NULL ,
	result_host.extract =  NULL ,
	result_contact.extract = NULL ,
	result_domain.dm_enom = NULL ,
	result_domain.itdp = NULL ,
	result_domain.error = NULL ,
	result_domain.tdp  = NULL ,
	result_host.dm_enom = NULL ,
	result_host.itdp = NULL ,
	result_host.error = NULL ,
	result_host.tdp = NULL ,
	result_contact.dm_enom = NULL ,
	result_contact.itdp = NULL ,
	result_contact.error = NULL ,
	result_contact.tdp = NULL ,
	result_domain.dm_enom_itdp_pk  = NULL ,
	result_contact.dm_enom_itdp_pk = NULL ,
result_host.dm_enom_itdp_pk  = NULL ,
	updated_date = now()
WHERE t.TLD_name  = '"+ @[$Package::TLD] +"' AND t.dm_source='"+ @[$Package::Tenant] +"'  AND phase = '"+@[$Package::Migration_phase]+"';
COMMIT;"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
              SQLTask:SqlStatementSource="BEGIN ;&#xA;INSERT INTO itdp.dm_log&#xA;( id, phase, dm_source, tld, start_date, status)&#xA;VALUES( 1,'1.3', 'opensrs', 'in', NOW(), 'opensrs_dm started' );&#xA;&#xA;UPDATE  itdp.tld t&#xA;SET migration_status = NULL , &#xA;&#x9;result_domain.extract = NULL ,&#xA;&#x9;result_host.extract =  NULL ,&#xA;&#x9;result_contact.extract = NULL ,&#xA;&#x9;result_domain.dm_enom = NULL ,&#xA;&#x9;result_domain.itdp = NULL ,&#xA;&#x9;result_domain.error = NULL ,&#xA;&#x9;result_domain.tdp  = NULL ,&#xA;&#x9;result_host.dm_enom = NULL ,&#xA;&#x9;result_host.itdp = NULL ,&#xA;&#x9;result_host.error = NULL ,&#xA;&#x9;result_host.tdp = NULL ,&#xA;&#x9;result_contact.dm_enom = NULL ,&#xA;&#x9;result_contact.itdp = NULL ,&#xA;&#x9;result_contact.error = NULL ,&#xA;&#x9;result_contact.tdp = NULL ,&#xA;&#x9;result_domain.dm_enom_itdp_pk  = NULL ,&#xA;&#x9;result_contact.dm_enom_itdp_pk = NULL ,&#xA;result_host.dm_enom_itdp_pk  = NULL ,&#xA;&#x9;updated_date = now()&#xA;WHERE t.TLD_name  = 'in' AND t.dm_source='opensrs'  AND phase = '1.3';&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\01 Extract Enom domain, contact, host\Get max dm_log"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{46159DA5-5707-400D-968D-55A10C1761E5}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get max dm_log"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2DC04CA4-3A3F-493B-AA09-274CFEDF0DB2}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::max_dm_log_query"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::dm_log_id" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\01 Extract Enom domain, contact, host.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{52678E9C-A4BB-4405-AF0B-87C2B94289DE}"
          DTS:From="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\01 Extract Enom domain, contact, host.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{4FDB7269-98CB-48C4-B601-14DC593EE80F}"
          DTS:From="Package\01 Extract Enom domain, contact, host\Get max dm_log"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\01 Extract Enom domain, contact, host\dm_log - dm_start" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\01 Extract Enom domain, contact, host.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{A3E349A8-B0E3-403D-A1AD-9F171B63C83B}"
          DTS:From="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{3F873CC8-2ACE-490D-A8DE-F4DF7C9CF50F}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{0D9FE254-BD08-487B-BB87-585226E5F7DA}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="02_1 domain and host">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Add host error for not migrated domains"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{0B393AB2-BB55-4389-AD0A-F3A06E33F75B}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Add host error for not migrated domains"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
 ANALYSE itdp.domain;  
	INSERT INTO itdp.host_error_records  (dm_source, tld, source_host_id, source_domain_id,   name,   errordescription)
	SELECT DISTINCT  der.dm_source,der.tld,h.idx, h.domainnameid,   h.name,  'domain was not migrated'
	FROM  dm_opensrs.nameservers  h
	JOIN  itdp.domain_error_records der   ON  der.source_domain_id = h.DomainNameID 
	LEFT JOIN itdp.host_error_records her   ON  her.source_host_id = h.idx
	WHERE  her.id IS null  AND h.tld  = '"+ @[$Package::TLD] +"';
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA; ANALYSE itdp.domain;  &#xA;&#x9;INSERT INTO itdp.host_error_records  (dm_source, tld, source_host_id, source_domain_id,   name,   errordescription)&#xA;&#x9;SELECT DISTINCT  der.dm_source,der.tld,h.idx, h.domainnameid,   h.name,  'domain was not migrated'&#xA;&#x9;FROM  dm_opensrs.nameservers  h&#xA;&#x9;JOIN  itdp.domain_error_records der   ON  der.source_domain_id = h.DomainNameID &#xA;&#x9;LEFT JOIN itdp.host_error_records her   ON  her.source_host_id = h.idx&#xA;&#x9;WHERE  her.id IS null  AND h.tld  = 'in';&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Create itdp_domain_itemp"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{AAAAC30D-A9DF-4809-9C76-B462D8D16F03}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create itdp_domain_itemp"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"DROP TABLE IF EXISTS itdp.domain_itemp_opensrs ;
--set timezone to 'UTC';
CREATE TABLE IF NOT EXISTS  itdp.domain_itemp_opensrs AS 
(SELECT d.domainnameid, d.tld, CASE WHEN d.renew='Y' THEN TRUE ELSE FALSE END ::boolean AS auto_renew ,
    1 as regperiod,  d.slddottld,  d.roid, d.authinfo,ds.id  AS itdp_status_id,
    
	COALESCE(d.creationdate_NSI AT TIME ZONE 'UTC', (d.creationdate + interval '4 hour') AT time zone 'UTC')  as  creationdate1 ,
 	expdate AT TIME ZONE 'UTC'  as  expdate1,
 	expdate AT TIME ZONE 'UTC'  as  expdate2 ,
 	(UPDATEDATE + interval '4 hour') AT time zone 'UTC'as  UPDATEDATE1 ,
 	(deldate + interval '4 hour') AT time zone 'UTC'as deldate1,
 	(transferindate + interval '4 hour') AT time zone 'UTC' as transferindate1 ,
 	
 	CASE WHEN LEFT(d.slddottld,4)='xn--' THEN NULL ELSE d.slddottld END   AS uname1,
 	d.EncodingType as LANGUAGE
 	
FROM dm_opensrs.domainname d
LEFT JOIN  itdp.domain_status AS ds ON upper(d.registrationstatus) =upper(ds.name)
LEFT JOIN itdp.domain_error_records der ON der.source_domain_id =d.domainnameid 
WHERE  d.tld='" + @[$Package::TLD]+"' 
AND der.source_domain_id IS NULL )"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                  SQLTask:SqlStatementSource="DROP TABLE IF EXISTS itdp.domain_itemp_opensrs ;&#xA;--set timezone to 'UTC';&#xA;CREATE TABLE IF NOT EXISTS  itdp.domain_itemp_opensrs AS &#xA;(SELECT d.domainnameid, d.tld, CASE WHEN d.renew='Y' THEN TRUE ELSE FALSE END ::boolean AS auto_renew ,&#xA;    1 as regperiod,  d.slddottld,  d.roid, d.authinfo,ds.id  AS itdp_status_id,&#xA;    &#xA;&#x9;COALESCE(d.creationdate_NSI AT TIME ZONE 'UTC', (d.creationdate + interval '4 hour') AT time zone 'UTC')  as  creationdate1 ,&#xA; &#x9;expdate AT TIME ZONE 'UTC'  as  expdate1,&#xA; &#x9;expdate AT TIME ZONE 'UTC'  as  expdate2 ,&#xA; &#x9;(UPDATEDATE + interval '4 hour') AT time zone 'UTC'as  UPDATEDATE1 ,&#xA; &#x9;(deldate + interval '4 hour') AT time zone 'UTC'as deldate1,&#xA; &#x9;(transferindate + interval '4 hour') AT time zone 'UTC' as transferindate1 ,&#xA; &#x9;&#xA; &#x9;CASE WHEN LEFT(d.slddottld,4)='xn--' THEN NULL ELSE d.slddottld END   AS uname1,&#xA; &#x9;d.EncodingType as LANGUAGE&#xA; &#x9;&#xA;FROM dm_opensrs.domainname d&#xA;LEFT JOIN  itdp.domain_status AS ds ON upper(d.registrationstatus) =upper(ds.name)&#xA;LEFT JOIN itdp.domain_error_records der ON der.source_domain_id =d.domainnameid &#xA;WHERE  d.tld='in' &#xA;AND der.source_domain_id IS NULL )" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Mark domain with min_nameservers problem"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{87132C59-9DFF-429C-AFCC-F3FE5714255A}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Mark domain with min_nameservers problem"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
	WITH cte AS 
		(SELECT get_tld_setting(p_key =&gt; 'tld.dns.allowed_nameserver_count',	p_tld_id=&gt;vat.tld_id,    p_tenant_id=&gt;vat.tenant_id) AS range_nameservers
		FROM public.v_accreditation_tld vat
		WHERE vat.tenant_name ='"+@[$Package::Tenant]+"' and tld_name ='"+ @[$Package::TLD] +"'),   
	cte1 AS 
		(SELECT count(h.itdp_domain_id) AS number_hosts, d.id AS domain_id, min(range_nameservers) AS min_s, min(range_nameservers)::int4range
		FROM itdp.domain d
		LEFT JOIN itdp.host h ON  h.tld= '"+ @[$Package::TLD] +"' and h.dm_source = '"+@[$Package::Tenant]+"' and d.id=h.itdp_domain_id 
		, cte 		
		WHERE d.tld= '"+ @[$Package::TLD] +"' and d.dm_source = '"+@[$Package::Tenant]+"'
		GROUP BY d.id
		HAVING NOT(count(h.itdp_domain_id)::int &lt;@ 	(min(range_nameservers))::int4range)
		)
		
	UPDATE itdp.DOMAIN d SET TDP_min_namesrvers_issue=TRUE
		FROM CTE1 h 
		WHERE h.domain_id=d.id and d.tld= '"+ @[$Package::TLD] +"' and d.dm_source = '"+@[$Package::Tenant]+"' ;		
	    
	ANALYSE itdp.DOMAIN ;	
COMMIT;	"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;&#x9;WITH cte AS &#xA;&#x9;&#x9;(SELECT get_tld_setting(p_key =&gt; 'tld.dns.allowed_nameserver_count',&#x9;p_tld_id=&gt;vat.tld_id,    p_tenant_id=&gt;vat.tenant_id) AS range_nameservers&#xA;&#x9;&#x9;FROM public.v_accreditation_tld vat&#xA;&#x9;&#x9;WHERE vat.tenant_name ='opensrs' and tld_name ='in'),   &#xA;&#x9;cte1 AS &#xA;&#x9;&#x9;(SELECT count(h.itdp_domain_id) AS number_hosts, d.id AS domain_id, min(range_nameservers) AS min_s, min(range_nameservers)::int4range&#xA;&#x9;&#x9;FROM itdp.domain d&#xA;&#x9;&#x9;LEFT JOIN itdp.host h ON  h.tld= 'in' and h.dm_source = 'opensrs' and d.id=h.itdp_domain_id &#xA;&#x9;&#x9;, cte &#x9;&#x9;&#xA;&#x9;&#x9;WHERE d.tld= 'in' and d.dm_source = 'opensrs'&#xA;&#x9;&#x9;GROUP BY d.id&#xA;&#x9;&#x9;HAVING NOT(count(h.itdp_domain_id)::int &lt;@ &#x9;(min(range_nameservers))::int4range)&#xA;&#x9;&#x9;)&#xA;&#x9;&#x9;&#xA;&#x9;UPDATE itdp.DOMAIN d SET TDP_min_namesrvers_issue=TRUE&#xA;&#x9;&#x9;FROM CTE1 h &#xA;&#x9;&#x9;WHERE h.domain_id=d.id and d.tld= 'in' and d.dm_source = 'opensrs' ;&#x9;&#x9;&#xA;&#x9;    &#xA;&#x9;ANALYSE itdp.DOMAIN ;&#x9;&#xA;COMMIT;&#x9;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Populate itdp-domain"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{3677B88C-C31C-41C6-9D52-82519747AB7C}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Populate itdp-domain"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"
DO $$
 DECLARE    _sql text;  
BEGIN
SET work_mem TO '1900MB';

	IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
			DROP TABLE IF EXISTS itdp.temp_list_constraints;	
			DROP TABLE IF EXISTS itdp.temp_list_index;
		--save list of CONSTRAINTS 
		CREATE TABLE itdp.temp_list_constraints
			AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname
			FROM pg_constraint
			INNER JOIN pg_class ON conrelid=pg_class.oid
			INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            
			WHERE relname = 'domain_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"'  AND nspname='itdp' AND contype&lt;&gt;'p');
		 
		--DROP constraints
		SELECT string_agg('ALTER TABLE itdp.domain_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"  DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint	
			INNER JOIN pg_class ON conrelid=pg_class.oid
			INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace 								
		 	WHERE relname = 'domain_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"'  AND nspname='itdp' AND contype&lt;&gt;'p'  INTO _sql;
		IF _sql IS NOT NULL THEN                  
	        EXECUTE _sql;
	    END IF;   

	--save list of indexes		
	CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'itdp' AND TABLEname='domain_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"');
	
	 -- drop  indexes --   
		 SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')
			   FROM   pg_index  i   
			   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'
			   WHERE  i.indrelid = 'itdp.domain_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"'::regclass AND    d.objid IS NULL   INTO _sql;
		IF _sql IS NOT NULL THEN                  
	    	    EXECUTE _sql;
	    END IF;	
   
	END IF;
	
	INSERT INTO itdp.domain (tld, dm_source, source_domain_id,  name, auth_info, roid,
		 ry_created_date, ry_expiry_date, ry_transfered_date, deleted_date,  expiry_date,
		 status_id, auto_renew, registration_period,  uname, language,ry_updated_date  )	
	SELECT   tld,'"+ @[$Package::Tenant] +"' as  dm_source, domainnameid,slddottld, authinfo,roid,
		 creationdate1,expdate1,transferindate1,deldate1,expdate1,
		itdp_status_id,auto_renew, regperiod, uname1,language,UPDATEDATE1	
		FROM itdp.domain_itemp_opensrs d;
	
	IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
			-- recreate constraints	 
	     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN 
			 EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);
		 END IF;			
		 --recreate indexes
	 	IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN 
			EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);
		END IF;		
	END IF;
ANALYSE itdp.domain;
COMMIT;  
END$$"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                  SQLTask:SqlStatementSource="&#xA;DO $$&#xA; DECLARE    _sql text;  &#xA;BEGIN&#xA;SET work_mem TO '1900MB';&#xA;&#xA;&#x9;IF  'in' in ('com' ,'net') THEN&#xA;&#x9;&#x9;&#x9;DROP TABLE IF EXISTS itdp.temp_list_constraints;&#x9;&#xA;&#x9;&#x9;&#x9;DROP TABLE IF EXISTS itdp.temp_list_index;&#xA;&#x9;&#x9;--save list of CONSTRAINTS &#xA;&#x9;&#x9;CREATE TABLE itdp.temp_list_constraints&#xA;&#x9;&#x9;&#x9;AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname&#xA;&#x9;&#x9;&#x9;FROM pg_constraint&#xA;&#x9;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            &#xA;&#x9;&#x9;&#x9;WHERE relname = 'domain_opensrs_in'  AND nspname='itdp' AND contype&lt;&gt;'p');&#xA;&#x9;&#x9; &#xA;&#x9;&#x9;--DROP constraints&#xA;&#x9;&#x9;SELECT string_agg('ALTER TABLE itdp.domain_opensrs_in  DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint&#x9;&#xA;&#x9;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9; &#x9;WHERE relname = 'domain_opensrs_in'  AND nspname='itdp' AND contype&lt;&gt;'p'  INTO _sql;&#xA;&#x9;&#x9;IF _sql IS NOT NULL THEN                  &#xA;&#x9;        EXECUTE _sql;&#xA;&#x9;    END IF;   &#xA;&#xA;&#x9;--save list of indexes&#x9;&#x9;&#xA;&#x9;CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'itdp' AND TABLEname='domain_opensrs_in');&#xA;&#x9;&#xA;&#x9; -- drop  indexes --   &#xA;&#x9;&#x9; SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')&#xA;&#x9;&#x9;&#x9;   FROM   pg_index  i   &#xA;&#x9;&#x9;&#x9;   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'&#xA;&#x9;&#x9;&#x9;   WHERE  i.indrelid = 'itdp.domain_opensrs_in'::regclass AND    d.objid IS NULL   INTO _sql;&#xA;&#x9;&#x9;IF _sql IS NOT NULL THEN                  &#xA;&#x9;    &#x9;    EXECUTE _sql;&#xA;&#x9;    END IF;&#x9;&#xA;   &#xA;&#x9;END IF;&#xA;&#x9;&#xA;&#x9;INSERT INTO itdp.domain (tld, dm_source, source_domain_id,  name, auth_info, roid,&#xA;&#x9;&#x9; ry_created_date, ry_expiry_date, ry_transfered_date, deleted_date,  expiry_date,&#xA;&#x9;&#x9; status_id, auto_renew, registration_period,  uname, language,ry_updated_date  )&#x9;&#xA;&#x9;SELECT   tld,'opensrs' as  dm_source, domainnameid,slddottld, authinfo,roid,&#xA;&#x9;&#x9; creationdate1,expdate1,transferindate1,deldate1,expdate1,&#xA;&#x9;&#x9;itdp_status_id,auto_renew, regperiod, uname1,language,UPDATEDATE1&#x9;&#xA;&#x9;&#x9;FROM itdp.domain_itemp_opensrs d;&#xA;&#x9;&#xA;&#x9;IF  'in' in ('com' ,'net') THEN&#xA;&#x9;&#x9;&#x9;-- recreate constraints&#x9; &#xA;&#x9;     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN &#xA;&#x9;&#x9;&#x9; EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);&#xA;&#x9;&#x9; END IF;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9; --recreate indexes&#xA;&#x9; &#x9;IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN &#xA;&#x9;&#x9;&#x9;EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);&#xA;&#x9;&#x9;END IF;&#x9;&#x9;&#xA;&#x9;END IF;&#xA;ANALYSE itdp.domain;&#xA;COMMIT;  &#xA;END$$" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domains with expdate null to domain_error"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{6FABCEB2-20F2-4C52-B8BC-40E35358D7BC}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Transfer domains with expdate null to domain_error"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
INSERT INTO itdp.domain_error_records
(tld, source_domain_id, name, auth_info, roid, ry_created_date, ry_expiry_date,  expiry_date, 
 auto_renew, registration_period, status_id,  errordescription, dm_source)

SELECT d.tld, d.domainnameid,d.slddottld, d.authinfo, d.roid, d.creationdate , expdate,expdate,
CASE WHEN lower(d.renew)='yes' THEN TRUE ELSE FALSE END , d.regperiod, ds.id  AS itdp_status_id,'expiry_date IS NULL',
'"+ @[$Package::Tenant] +"' as  dm_source
FROM dm_opensrs.domainname d
LEFT JOIN  itdp.domain_status AS ds ON upper(d.registrationstatus) =upper(ds.name)
WHERE  itdp_domain_id IS NULL AND UPPER(registrationstatus)  in ('"+ @[$Project::ITDP_domain_statuses] +"') 
AND expdate IS NULL 
AND  tld='"+ @[$Package::TLD] +"';
COMMIT;
"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;INSERT INTO itdp.domain_error_records&#xA;(tld, source_domain_id, name, auth_info, roid, ry_created_date, ry_expiry_date,  expiry_date, &#xA; auto_renew, registration_period, status_id,  errordescription, dm_source)&#xA;&#xA;SELECT d.tld, d.domainnameid,d.slddottld, d.authinfo, d.roid, d.creationdate , expdate,expdate,&#xA;CASE WHEN lower(d.renew)='yes' THEN TRUE ELSE FALSE END , d.regperiod, ds.id  AS itdp_status_id,'expiry_date IS NULL',&#xA;'opensrs' as  dm_source&#xA;FROM dm_opensrs.domainname d&#xA;LEFT JOIN  itdp.domain_status AS ds ON upper(d.registrationstatus) =upper(ds.name)&#xA;WHERE  itdp_domain_id IS NULL AND UPPER(registrationstatus)  in ('REGISTERED', 'EXPIRED', 'RGP', 'EXTENDED RGP', ' RGP DEACTIVATED', 'IMMINENT DELETE') &#xA;AND expdate IS NULL &#xA;AND  tld='in';&#xA;COMMIT;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host  for domains migrated without errors to itdp"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{6039509E-4363-4C73-A6FE-D1887F366B5A}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Transfer host  for domains migrated without errors to itdp"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"
BEGIN;
ANALYSE itdp.domain;
INSERT INTO itdp.host
(tld, source_host_id, source_domain_id, itdp_domain_id, name, dm_source)
SELECT n.tld, n.source_nameserver_id, n.domainnameid, d.id AS itdp_domain_id1,n.name,'"+@[$Package::Tenant]+"' as  dm_source
FROM dm_opensrs.nameservers n
JOIN  itdp.domain d ON  d.source_domain_id = n.domainnameid and d.tld=n.tld and d.dm_source='"+ @[$Package::Tenant] +"'
WHERE  n.itdp_host_id  IS NULL AND  n.tld ='"+ @[$Package::TLD] +"' ;

ANALYSE itdp.host;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                  SQLTask:SqlStatementSource="&#xA;BEGIN;&#xA;ANALYSE itdp.domain;&#xA;INSERT INTO itdp.host&#xA;(tld, source_host_id, source_domain_id, itdp_domain_id, name, dm_source)&#xA;SELECT n.tld, n.source_nameserver_id, n.domainnameid, d.id AS itdp_domain_id1,n.name,'opensrs' as  dm_source&#xA;FROM dm_opensrs.nameservers n&#xA;JOIN  itdp.domain d ON  d.source_domain_id = n.domainnameid and d.tld=n.tld and d.dm_source='opensrs'&#xA;WHERE  n.itdp_host_id  IS NULL AND  n.tld ='in' ;&#xA;&#xA;ANALYSE itdp.host;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host_addr"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{b80ae1c9-e039-42fb-99aa-88028e368ce1}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Transfer host_addr"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
ANALYSE itdp.host;
INSERT INTO itdp.host_addr
(tld, source_host_id,itdp_host_id, address, dm_source)
SELECT n.tld, n.source_nameserver_id, h.id,n.ip::inet, '"+@[$Package::Tenant]+"' as  dm_source
FROM dm_opensrs.nameservers n
JOIN  itdp.host h ON  h.source_host_id = n.source_nameserver_id and h.tld=n.tld and h.dm_source='"+ @[$Package::Tenant] +"'
WHERE n.itdp_host_id  IS NULL AND  
n.ip IS NOT NULL AND n.tld  ='"+ @[$Package::TLD] +"' 
UNION ALL 
SELECT n.tld, n.source_nameserver_id, h.id,n.ipv6::inet, '"+@[$Package::Tenant]+"' as  dm_source
FROM dm_opensrs.nameservers n
JOIN  itdp.host h ON  h.source_host_id = n.source_nameserver_id and h.tld=n.tld and h.dm_source='"+ @[$Package::Tenant] +"'
WHERE n.itdp_host_id  IS NULL AND  
n.ipv6 IS NOT NULL AND n.tld  ='"+ @[$Package::TLD] +"' ;

ANALYSE itdp.host_addr;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;ANALYSE itdp.host;&#xA;INSERT INTO itdp.host_addr&#xA;(tld, source_host_id,itdp_host_id, address, dm_source)&#xA;SELECT n.tld, n.source_nameserver_id, h.id,n.ip::inet, 'opensrs' as  dm_source&#xA;FROM dm_opensrs.nameservers n&#xA;JOIN  itdp.host h ON  h.source_host_id = n.source_nameserver_id and h.tld=n.tld and h.dm_source='opensrs'&#xA;WHERE n.itdp_host_id  IS NULL AND  &#xA;n.ip IS NOT NULL AND n.tld  ='in' &#xA;UNION ALL &#xA;SELECT n.tld, n.source_nameserver_id, h.id,n.ipv6::inet, 'opensrs' as  dm_source&#xA;FROM dm_opensrs.nameservers n&#xA;JOIN  itdp.host h ON  h.source_host_id = n.source_nameserver_id and h.tld=n.tld and h.dm_source='opensrs'&#xA;WHERE n.itdp_host_id  IS NULL AND  &#xA;n.ipv6 IS NOT NULL AND n.tld  ='in' ;&#xA;&#xA;ANALYSE itdp.host_addr;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Truncate itdp_error_domain, error_host tables"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{2BB9EC71-0A5C-42C2-8B7D-638F0F963574}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Truncate itdp_error_domain, error_host tables"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
 

	
	DELETE FROM itdp.domain_error_records WHERE TLD = '" + @[$Package::TLD] +"' AND dm_source = '"+ @[$Package::Tenant] +"';
	
	
DELETE FROM itdp.host_error_records WHERE TLD = '" + @[$Package::TLD] +"'  AND dm_source = '"+ @[$Package::Tenant] +"';
	
 


COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA; &#xA;&#xA;&#x9;&#xA;&#x9;DELETE FROM itdp.domain_error_records WHERE TLD = 'in' AND dm_source = 'opensrs';&#xA;&#x9;&#xA;&#x9;&#xA;DELETE FROM itdp.host_error_records WHERE TLD = 'in'  AND dm_source = 'opensrs';&#xA;&#x9;&#xA; &#xA;&#xA;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{7817EB3F-7D21-47EE-8FA4-E303A7A0644A}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Truncate itdp_error_domain, error_host tables"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domains with expdate null to domain_error" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{3B986B6A-E191-4A51-AD76-4C97A2911056}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host  for domains migrated without errors to itdp"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Mark domain with min_nameservers problem" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 10]"
              DTS:CreationName=""
              DTS:DTSID="{254B9481-1480-42D7-AA79-1D987BED044A}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domains with expdate null to domain_error"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 10"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Create itdp_domain_itemp" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 11]"
              DTS:CreationName=""
              DTS:DTSID="{D760DA99-2D19-4046-BB40-0A70A79845F5}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Populate itdp-domain"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 11"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Add host error for not migrated domains" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{F4412CDF-53B7-4461-8243-597DB3D5FF41}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Truncate itdp_error_domain, error_host tables"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Create itdp_domain_itemp" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{55A4B27F-03ED-4997-B9F9-10CC91FB997C}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Add host error for not migrated domains"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host  for domains migrated without errors to itdp" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{92DAD5E1-69B7-47E6-9244-1A5DC355578A}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Mark domain with min_nameservers problem"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host_addr" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 8]"
              DTS:CreationName=""
              DTS:DTSID="{70A4F939-53C1-43FE-B54D-8A4670129D4E}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Create itdp_domain_itemp"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 8"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Populate itdp-domain" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{FF5CC6DE-3839-43C8-85FE-8742A1981EA6}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="02_2 contact">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Add contact_error for not migrated domains"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{5C347761-66F5-49AC-A6A0-2236C1AE918F}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Add contact_error for not migrated domains"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
	INSERT INTO itdp.contact_error_records (tld, source_contact_id, source_domain_id,  type_id,  email, phone, fax, country,  
		 tdp_data_source, errordescription,dm_source, is_private)
	SELECT distinct c.tld, c.id, c.domainnameid, (CASE WHEN c.organization IS NULL
		THEN public.tc_id_from_name('itdp.contact_type', 'individual') 
		ELSE public.tc_id_from_name('itdp.contact_type', 'organization') END )  AS tdp_contact_type, 
		LOWER(c.email_address) AS tdp_email, c.phone_number, c.fax_number,COALESCE(cn.alpha2,mcn.alpha2,'US') AS tdp_country,  
  	     '"+@[$Package::Tenant]+"' AS tdp_data_source,  'domain was not migrated', '"+@[$Package::Tenant]+"' as  dm_source, c.is_private
	FROM  dm_opensrs.contact c
	JOIN  itdp.domain_error_records der   ON  der.source_domain_id = c.DomainNameID 
	LEFT JOIN itdp.contact_error_records cer   ON  cer.source_contact_id =c.id
	LEFT JOIN itdp.country cn ON cn.alpha2 = UPPER(c.country_code) 
	LEFT JOIN dm_opensrs.map_country_enom_itdp mcn ON mcn.enom_alpha2  = UPPER(c.country_code) 
	WHERE cer.id IS NULL AND   c.tld  = '"+ @[$Package::TLD] +"';
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;&#x9;INSERT INTO itdp.contact_error_records (tld, source_contact_id, source_domain_id,  type_id,  email, phone, fax, country,  &#xA;&#x9;&#x9; tdp_data_source, errordescription,dm_source, is_private)&#xA;&#x9;SELECT distinct c.tld, c.id, c.domainnameid, (CASE WHEN c.organization IS NULL&#xA;&#x9;&#x9;THEN public.tc_id_from_name('itdp.contact_type', 'individual') &#xA;&#x9;&#x9;ELSE public.tc_id_from_name('itdp.contact_type', 'organization') END )  AS tdp_contact_type, &#xA;&#x9;&#x9;LOWER(c.email_address) AS tdp_email, c.phone_number, c.fax_number,COALESCE(cn.alpha2,mcn.alpha2,'US') AS tdp_country,  &#xA;  &#x9;     'opensrs' AS tdp_data_source,  'domain was not migrated', 'opensrs' as  dm_source, c.is_private&#xA;&#x9;FROM  dm_opensrs.contact c&#xA;&#x9;JOIN  itdp.domain_error_records der   ON  der.source_domain_id = c.DomainNameID &#xA;&#x9;LEFT JOIN itdp.contact_error_records cer   ON  cer.source_contact_id =c.id&#xA;&#x9;LEFT JOIN itdp.country cn ON cn.alpha2 = UPPER(c.country_code) &#xA;&#x9;LEFT JOIN dm_opensrs.map_country_enom_itdp mcn ON mcn.enom_alpha2  = UPPER(c.country_code) &#xA;&#x9;WHERE cer.id IS NULL AND   c.tld  = 'in';&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Add contact_error for wrong email"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{7A9DA2C7-2647-4C8A-932B-448061B761DB}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Add contact_error for wrong email"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN ;
INSERT INTO itdp.contact_error_records
(tld, source_contact_id, source_domain_id, itdp_domain_id,
type_id,  email, phone, fax, 
country,  tdp_contact_country_issue, tdp_data_source, errordescription,dm_source, is_private)

SELECT c.tld,c.id,c.domainnameid , d.id AS itdp_domain_id1, 
(CASE WHEN c.organization IS NULL
		THEN public.tc_id_from_name('itdp.contact_type', 'individual') 
		ELSE public.tc_id_from_name('itdp.contact_type', 'organization') END )::uuid AS TDP_contact_type,
		LOWER(c.email_address)::varchar(320) AS TDP_email,c.phone_number,  c.fax_number,   
	
	COALESCE(cn.alpha2,mcn.alpha2,'US')::varchar(2) AS TDP_country,	
	(CASE WHEN COALESCE(cn.alpha2,mcn.alpha2) IS NULL THEN  TRUE  ELSE FALSE  END)::boolean AS TDP_contact_country_issue ,
	'"+@[$Package::Tenant]+"' ::varchar(10) AS TDP_data_source, 	'Wrong email'	AS errordescription, '"+@[$Package::Tenant]+"' as  dm_source, c.is_private
   
FROM dm_opensrs.contact c
JOIN  itdp.domain d  ON d.source_domain_id = c.domainnameid AND d.TLD  = '"+ @[$Package::TLD] +"' AND d.dm_source='"+ @[$Package::Tenant] +"'
LEFT JOIN itdp.country cn ON cn.alpha2 = UPPER(c.country_code) 
LEFT JOIN dm_opensrs.map_country_enom_itdp mcn ON mcn.enom_alpha2  = UPPER(c.country_code)

WHERE  c.itdp_contact_id IS NULL and 
c.tld = '"+ @[$Package::TLD] +"' 
AND  ("+  @[$Project::Email_check]  + ")   ;
COMMIT;
"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                  SQLTask:SqlStatementSource="BEGIN ;&#xA;INSERT INTO itdp.contact_error_records&#xA;(tld, source_contact_id, source_domain_id, itdp_domain_id,&#xA;type_id,  email, phone, fax, &#xA;country,  tdp_contact_country_issue, tdp_data_source, errordescription,dm_source, is_private)&#xA;&#xA;SELECT c.tld,c.id,c.domainnameid , d.id AS itdp_domain_id1, &#xA;(CASE WHEN c.organization IS NULL&#xA;&#x9;&#x9;THEN public.tc_id_from_name('itdp.contact_type', 'individual') &#xA;&#x9;&#x9;ELSE public.tc_id_from_name('itdp.contact_type', 'organization') END )::uuid AS TDP_contact_type,&#xA;&#x9;&#x9;LOWER(c.email_address)::varchar(320) AS TDP_email,c.phone_number,  c.fax_number,   &#xA;&#x9;&#xA;&#x9;COALESCE(cn.alpha2,mcn.alpha2,'US')::varchar(2) AS TDP_country,&#x9;&#xA;&#x9;(CASE WHEN COALESCE(cn.alpha2,mcn.alpha2) IS NULL THEN  TRUE  ELSE FALSE  END)::boolean AS TDP_contact_country_issue ,&#xA;&#x9;'opensrs' ::varchar(10) AS TDP_data_source, &#x9;'Wrong email'&#x9;AS errordescription, 'opensrs' as  dm_source, c.is_private&#xA;   &#xA;FROM dm_opensrs.contact c&#xA;JOIN  itdp.domain d  ON d.source_domain_id = c.domainnameid AND d.TLD  = 'in' AND d.dm_source='opensrs'&#xA;LEFT JOIN itdp.country cn ON cn.alpha2 = UPPER(c.country_code) &#xA;LEFT JOIN dm_opensrs.map_country_enom_itdp mcn ON mcn.enom_alpha2  = UPPER(c.country_code)&#xA;&#xA;WHERE  c.itdp_contact_id IS NULL and &#xA;c.tld = 'in' &#xA;AND  (NOT( split_part(LOWER(c.email_address), '@', 1) ~ '^[-_a-z0-9.+^\$]{1,}$'  AND LENGTH(split_part(LOWER(c.email_address), '@', 1)) &lt;= 64     AND split_part(LOWER(c.email_address), '@', 2) ~ '^[a-z0-9][-a-z0-9]{0,62}(\.[a-z0-9][-a-z0-9]{0,62})+$'    AND LENGTH(split_part(LOWER(c.email_address), '@', 2)) &lt; 255     AND split_part(LOWER(c.email_address), '@', 3) = ''))   ;&#xA;COMMIT;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact"
              DTS:CreationName="STOCK:SEQUENCE"
              DTS:Description="Sequence Container"
              DTS:DTSID="{2444E5CB-A69C-4C9A-89D6-7A69B0AEAA5D}"
              DTS:ExecutableType="STOCK:SEQUENCE"
              DTS:LocaleID="-1"
              DTS:ObjectName="contact">
              <DTS:Variables />
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact\Create contact_itemp"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{D9913539-CE90-4C9F-8B16-4DACB629FA2D}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Create contact_itemp"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="0">
                  <DTS:Variables />
                  <DTS:PropertyExpression
                    DTS:Name="SqlStatementSource">"
DROP TABLE IF EXISTS itdp.contact_itemp_opensrs;    

CREATE unlogged TABLE itdp.contact_itemp_opensrs  AS 
(SELECT d.id AS itdp_domain_id1, c.domainnameid ,
	c.id,  c.first_name, c.last_name,  c.organization,
	c.address2, c.address3,  c.state, c.postal_code, c.phone_number,  c.fax_number,   c.tld,c.npd,
	COALESCE(c.city,'Unknown City')::varchar(120) AS TDP_city,
	COALESCE(c.address1,'Unknown Address1')::varchar(255) AS TDP_address1,
	COALESCE(cn.alpha2,mcn.alpha2,'US')::varchar(2) AS TDP_country,
	'"+ @[$Package::Tenant] +"' ::varchar(10) AS TDP_data_source,
	(CASE WHEN ( is_null_or_ascii(c.first_name) AND is_null_or_ascii(c.last_name) AND is_null_or_ascii(c.organization)
		AND is_null_or_ascii(c.address1) AND is_null_or_ascii(c.address2) AND is_null_or_ascii(c.address3) AND is_null_or_ascii(c.city)
		AND is_null_or_ascii(c.postal_code) AND is_null_or_ascii(c.state) )
		THEN True ELSE False END)::boolean 
			AS TDP_is_international,
	(CASE WHEN COALESCE(cn.alpha2,mcn.alpha2) IS NULL THEN  TRUE  ELSE FALSE  END)::boolean AS TDP_contact_country_issue ,
	(CASE WHEN c.organization IS NULL
		THEN public.tc_id_from_name('itdp.contact_type', 'individual') 
		ELSE public.tc_id_from_name('itdp.contact_type', 'organization') END )::uuid AS TDP_contact_type,
	LOWER(c.email_address)::varchar(320) AS TDP_email,
    c.c_type , gen_random_uuid()::uuid AS contact_id, c.is_private, c.handl as handle

FROM dm_opensrs.contact c
JOIN  itdp.domain d  ON d.source_domain_id = c.domainnameid AND d.TLD  = '"+ @[$Package::TLD] +"' AND dm_source='"+ @[$Package::Tenant] +"'
LEFT JOIN itdp.contact_error_records cer ON cer.source_contact_id=c.id
LEFT JOIN itdp.country cn ON cn.alpha2 = TRIM(UPPER(c.country_code))
LEFT JOIN dm_opensrs.map_country_enom_itdp mcn ON mcn.enom_alpha2  = TRIM(UPPER(c.country_code))
WHERE  c.itdp_contact_id IS NULL   AND cer.source_contact_id IS NULL 
AND c.tld = '"+ @[$Package::TLD] +"');"</DTS:PropertyExpression>
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                      SQLTask:SqlStatementSource="&#xA;DROP TABLE IF EXISTS itdp.contact_itemp_opensrs;    &#xA;&#xA;CREATE unlogged TABLE itdp.contact_itemp_opensrs  AS &#xA;(SELECT d.id AS itdp_domain_id1, c.domainnameid ,&#xA;&#x9;c.id,  c.first_name, c.last_name,  c.organization,&#xA;&#x9;c.address2, c.address3,  c.state, c.postal_code, c.phone_number,  c.fax_number,   c.tld,c.npd,&#xA;&#x9;COALESCE(c.city,'Unknown City')::varchar(120) AS TDP_city,&#xA;&#x9;COALESCE(c.address1,'Unknown Address1')::varchar(255) AS TDP_address1,&#xA;&#x9;COALESCE(cn.alpha2,mcn.alpha2,'US')::varchar(2) AS TDP_country,&#xA;&#x9;'opensrs' ::varchar(10) AS TDP_data_source,&#xA;&#x9;(CASE WHEN ( is_null_or_ascii(c.first_name) AND is_null_or_ascii(c.last_name) AND is_null_or_ascii(c.organization)&#xA;&#x9;&#x9;AND is_null_or_ascii(c.address1) AND is_null_or_ascii(c.address2) AND is_null_or_ascii(c.address3) AND is_null_or_ascii(c.city)&#xA;&#x9;&#x9;AND is_null_or_ascii(c.postal_code) AND is_null_or_ascii(c.state) )&#xA;&#x9;&#x9;THEN True ELSE False END)::boolean &#xA;&#x9;&#x9;&#x9;AS TDP_is_international,&#xA;&#x9;(CASE WHEN COALESCE(cn.alpha2,mcn.alpha2) IS NULL THEN  TRUE  ELSE FALSE  END)::boolean AS TDP_contact_country_issue ,&#xA;&#x9;(CASE WHEN c.organization IS NULL&#xA;&#x9;&#x9;THEN public.tc_id_from_name('itdp.contact_type', 'individual') &#xA;&#x9;&#x9;ELSE public.tc_id_from_name('itdp.contact_type', 'organization') END )::uuid AS TDP_contact_type,&#xA;&#x9;LOWER(c.email_address)::varchar(320) AS TDP_email,&#xA;    c.c_type , gen_random_uuid()::uuid AS contact_id, c.is_private, c.handl as handle&#xA;&#xA;FROM dm_opensrs.contact c&#xA;JOIN  itdp.domain d  ON d.source_domain_id = c.domainnameid AND d.TLD  = 'in' AND dm_source='opensrs'&#xA;LEFT JOIN itdp.contact_error_records cer ON cer.source_contact_id=c.id&#xA;LEFT JOIN itdp.country cn ON cn.alpha2 = TRIM(UPPER(c.country_code))&#xA;LEFT JOIN dm_opensrs.map_country_enom_itdp mcn ON mcn.enom_alpha2  = TRIM(UPPER(c.country_code))&#xA;WHERE  c.itdp_contact_id IS NULL   AND cer.source_contact_id IS NULL &#xA;AND c.tld = 'in');" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact\Populate contact_postal"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{862920D1-F149-4572-9035-3B7ECADC11A9}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Populate contact_postal"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="0">
                  <DTS:Variables />
                  <DTS:PropertyExpression
                    DTS:Name="SqlStatementSource">"
DO $$
 DECLARE    _sql text;  
BEGIN
SET work_mem TO '1900MB';

	IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
			DROP TABLE IF EXISTS itdp.temp_list_constraints;	
		--save list of CONSTRAINTS 
		CREATE TABLE itdp.temp_list_constraints
			AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname
			FROM pg_constraint
			INNER JOIN pg_class ON conrelid=pg_class.oid
			INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            
			WHERE relname = 'contact_postal_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"'  AND nspname='itdp' AND contype&lt;&gt;'p');
		 
		--DROP constraints
		SELECT string_agg('ALTER TABLE itdp.contact_postal_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"  DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint	
			INNER JOIN pg_class ON conrelid=pg_class.oid
			INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace 								
		 	WHERE relname = 'contact_postal_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"'  AND nspname='itdp' AND contype&lt;&gt;'p'  INTO _sql;
		IF _sql IS NOT NULL THEN                  
	        EXECUTE _sql;
	    END IF;   
   
	END IF;
	
	INSERT INTO itdp.contact_postal (tld, source_contact_id, contact_id, is_international,
	first_name, last_name, org_name, address1, address2, address3, city, postal_code, state,dm_source)
	
	SELECT  tld, id, contact_id, tdp_is_international,
		first_name, last_name, organization,tdp_address1,address2, address3,
		tdp_city,postal_code,state,'"+@[$Package::Tenant]+"' as  dm_source		
	FROM itdp.contact_itemp_opensrs c;
	
	IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
		-- recreate constraints	 
     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN 
		 EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);
	 END IF;			
		
	END IF;
ANALYSE itdp.contact_postal;
COMMIT;  

END $$;"</DTS:PropertyExpression>
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                      SQLTask:SqlStatementSource="&#xA;DO $$&#xA; DECLARE    _sql text;  &#xA;BEGIN&#xA;SET work_mem TO '1900MB';&#xA;&#xA;&#x9;IF  'in' in ('com' ,'net') THEN&#xA;&#x9;&#x9;&#x9;DROP TABLE IF EXISTS itdp.temp_list_constraints;&#x9;&#xA;&#x9;&#x9;--save list of CONSTRAINTS &#xA;&#x9;&#x9;CREATE TABLE itdp.temp_list_constraints&#xA;&#x9;&#x9;&#x9;AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname&#xA;&#x9;&#x9;&#x9;FROM pg_constraint&#xA;&#x9;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            &#xA;&#x9;&#x9;&#x9;WHERE relname = 'contact_postal_opensrs_in'  AND nspname='itdp' AND contype&lt;&gt;'p');&#xA;&#x9;&#x9; &#xA;&#x9;&#x9;--DROP constraints&#xA;&#x9;&#x9;SELECT string_agg('ALTER TABLE itdp.contact_postal_opensrs_in  DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint&#x9;&#xA;&#x9;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9; &#x9;WHERE relname = 'contact_postal_opensrs_in'  AND nspname='itdp' AND contype&lt;&gt;'p'  INTO _sql;&#xA;&#x9;&#x9;IF _sql IS NOT NULL THEN                  &#xA;&#x9;        EXECUTE _sql;&#xA;&#x9;    END IF;   &#xA;   &#xA;&#x9;END IF;&#xA;&#x9;&#xA;&#x9;INSERT INTO itdp.contact_postal (tld, source_contact_id, contact_id, is_international,&#xA;&#x9;first_name, last_name, org_name, address1, address2, address3, city, postal_code, state,dm_source)&#xA;&#x9;&#xA;&#x9;SELECT  tld, id, contact_id, tdp_is_international,&#xA;&#x9;&#x9;first_name, last_name, organization,tdp_address1,address2, address3,&#xA;&#x9;&#x9;tdp_city,postal_code,state,'opensrs' as  dm_source&#x9;&#x9;&#xA;&#x9;FROM itdp.contact_itemp_opensrs c;&#xA;&#x9;&#xA;&#x9;IF  'in' in ('com' ,'net') THEN&#xA;&#x9;&#x9;-- recreate constraints&#x9; &#xA;     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN &#xA;&#x9;&#x9; EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);&#xA;&#x9; END IF;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;END IF;&#xA;ANALYSE itdp.contact_postal;&#xA;COMMIT;  &#xA;&#xA;END $$;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact\Populate itdp_contact"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{79514BEA-7AE4-4EE3-B272-1FDAAB573F58}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Populate itdp_contact"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="0">
                  <DTS:Variables />
                  <DTS:PropertyExpression
                    DTS:Name="SqlStatementSource">"DO $$
  DECLARE    _sql text;  
BEGIN
SET work_mem TO '1900MB';

-- contact


IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	DROP TABLE IF EXISTS itdp.temp_list_constraints;
	DROP TABLE IF EXISTS itdp.temp_list_index;
	--save list of CONSTRAINTS 
	CREATE TABLE itdp.temp_list_constraints
		AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname
		FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            
		WHERE relname ='contact_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"' AND nspname='itdp' AND contype&lt;&gt;'p');          
		
	--save list of indexes		
	CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'itdp' AND TABLEname='contact_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"');
		
	--DROP constraints
	SELECT string_agg('ALTER TABLE itdp.contact_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+" DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint	
	 	INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            
		WHERE relname ='contact_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"' AND nspname='itdp' AND contype&lt;&gt;'p'    INTO _sql;
	IF _sql IS NOT NULL THEN                  
        EXECUTE _sql;
    END IF;   

    -- drop  indexes --   
	--I need to detach the partition, drop the indexnfor 1 partition, load into the partition, re-create the index and re-attach the partition.
    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')
		   FROM   pg_index  i   
		   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'
		   WHERE  i.indrelid = 'itdp.contact_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"'::regclass AND    d.objid IS NULL   INTO _sql;
	IF _sql IS NOT NULL THEN                  
    	    EXECUTE _sql;
    END IF;
END IF;

INSERT INTO itdp.contact (tld, source_contact_id, source_domain_id, id, itdp_domain_id, 
	type_id,  email, phone, fax, country,  tdp_contact_country_issue, tdp_data_source, 
	placeholder, domain_contact_type_name,dm_source, is_private,handle)
	
	SELECT  tld, id, domainnameid, contact_id, itdp_domain_id1,
		tdp_contact_type, tdp_email, phone_number, fax_number, tdp_country, tdp_contact_country_issue, tdp_data_source,
		npd, c_type	, '"+@[$Package::Tenant]+"' as  dm_source, is_private,handle
	FROM itdp.contact_itemp_opensrs c;

IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	-- recreate constraints	 
     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN 
		 EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);
	 END IF;	
	--recreate indexes
 	IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN 
		EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);
	END IF;	
	
END IF;
ANALYSE itdp.contact;
COMMIT;
END $$;"</DTS:PropertyExpression>
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                      SQLTask:SqlStatementSource="DO $$&#xA;  DECLARE    _sql text;  &#xA;BEGIN&#xA;SET work_mem TO '1900MB';&#xA;&#xA;-- contact&#xA;&#xA;&#xA;IF  'in' in ('com' ,'net') THEN&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_constraints;&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_index;&#xA;&#x9;--save list of CONSTRAINTS &#xA;&#x9;CREATE TABLE itdp.temp_list_constraints&#xA;&#x9;&#x9;AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname&#xA;&#x9;&#x9;FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            &#xA;&#x9;&#x9;WHERE relname ='contact_opensrs_in' AND nspname='itdp' AND contype&lt;&gt;'p');          &#xA;&#x9;&#x9;&#xA;&#x9;--save list of indexes&#x9;&#x9;&#xA;&#x9;CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'itdp' AND TABLEname='contact_opensrs_in');&#xA;&#x9;&#x9;&#xA;&#x9;--DROP constraints&#xA;&#x9;SELECT string_agg('ALTER TABLE itdp.contact_opensrs_in DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint&#x9;&#xA;&#x9; &#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            &#xA;&#x9;&#x9;WHERE relname ='contact_opensrs_in' AND nspname='itdp' AND contype&lt;&gt;'p'    INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;        EXECUTE _sql;&#xA;    END IF;   &#xA;&#xA;    -- drop  indexes --   &#xA;&#x9;--I need to detach the partition, drop the indexnfor 1 partition, load into the partition, re-create the index and re-attach the partition.&#xA;    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')&#xA;&#x9;&#x9;   FROM   pg_index  i   &#xA;&#x9;&#x9;   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'&#xA;&#x9;&#x9;   WHERE  i.indrelid = 'itdp.contact_opensrs_in'::regclass AND    d.objid IS NULL   INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;    &#x9;    EXECUTE _sql;&#xA;    END IF;&#xA;END IF;&#xA;&#xA;INSERT INTO itdp.contact (tld, source_contact_id, source_domain_id, id, itdp_domain_id, &#xA;&#x9;type_id,  email, phone, fax, country,  tdp_contact_country_issue, tdp_data_source, &#xA;&#x9;placeholder, domain_contact_type_name,dm_source, is_private,handle)&#xA;&#x9;&#xA;&#x9;SELECT  tld, id, domainnameid, contact_id, itdp_domain_id1,&#xA;&#x9;&#x9;tdp_contact_type, tdp_email, phone_number, fax_number, tdp_country, tdp_contact_country_issue, tdp_data_source,&#xA;&#x9;&#x9;npd, c_type&#x9;, 'opensrs' as  dm_source, is_private,handle&#xA;&#x9;FROM itdp.contact_itemp_opensrs c;&#xA;&#xA;IF  'in' in ('com' ,'net') THEN&#xA;&#x9;-- recreate constraints&#x9; &#xA;     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN &#xA;&#x9;&#x9; EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);&#xA;&#x9; END IF;&#x9;&#xA;&#x9;--recreate indexes&#xA; &#x9;IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN &#xA;&#x9;&#x9;EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);&#xA;&#x9;END IF;&#x9;&#xA;&#x9;&#xA;END IF;&#xA;ANALYSE itdp.contact;&#xA;COMMIT;&#xA;END $$;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
              <DTS:PrecedenceConstraints>
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact.PrecedenceConstraints[Constraint]"
                  DTS:CreationName=""
                  DTS:DTSID="{F8DCF3FB-E48F-43F7-A64B-D97ABDACF43C}"
                  DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact\Create contact_itemp"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint"
                  DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact\Populate itdp_contact" />
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact.PrecedenceConstraints[Constraint 1]"
                  DTS:CreationName=""
                  DTS:DTSID="{B2352DD5-EB4C-4BFB-90CD-7193B2AD882B}"
                  DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact\Populate itdp_contact"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint 1"
                  DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact\Populate contact_postal" />
              </DTS:PrecedenceConstraints>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Truncate  contact_error_records,contact_postal_error_records"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{0C8F66DF-73E7-4C2A-8A6E-E73B44DCAF0C}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Truncate  contact_error_records,contact_postal_error_records"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
 


	DELETE FROM itdp.contact_error_records WHERE TLD = '" + @[$Package::TLD] +"' AND dm_source = '"+ @[$Package::Tenant] +"'; 
	

	DELETE FROM itdp.contact_postal_error_records WHERE TLD = '" + @[$Package::TLD] +"' AND dm_source = '"+ @[$Package::Tenant] +"';
 


COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA; &#xA;&#xA;&#xA;&#x9;DELETE FROM itdp.contact_error_records WHERE TLD = 'in' AND dm_source = 'opensrs'; &#xA;&#x9;&#xA;&#xA;&#x9;DELETE FROM itdp.contact_postal_error_records WHERE TLD = 'in' AND dm_source = 'opensrs';&#xA; &#xA;&#xA;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{55692E0F-20D3-4F64-ABF0-913679494B13}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Truncate  contact_error_records,contact_postal_error_records"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Add contact_error for not migrated domains" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{51D06075-1D1E-4DF6-9D53-1B48064123C6}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Add contact_error for wrong email"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{5D617766-D4BA-4B39-B7F4-42C04B232C53}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Add contact_error for not migrated domains"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Add contact_error for wrong email" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{3FD7240A-C2D9-4ECC-86B9-1F83E0BF6AB0}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="02_3 populate domain_host and domain_contact">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\move contact records with bad domain to contact error"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{FB665301-1E59-4C80-BB04-B29DB3D92021}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="move contact records with bad domain to contact error"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
-- move itdp.contact with wrong domain to contact_error
	INSERT INTO itdp.contact_error_records (tld, source_contact_id, source_domain_id, id, itdp_domain_id, type_id, title,
		 org_reg, org_vat, org_duns,  email, phone, fax, country, language, tdp_contact_country_issue,
		 tdp_data_source, errordescription,dm_source, is_private)
	SELECT distinct c.tld, c.source_contact_id, c.source_domain_id, c.id, c.itdp_domain_id, c.type_id, c.title, c.org_reg,
		c.org_vat, c.org_duns, c.email, c.phone, c.fax, c.country, c.language, c.tdp_contact_country_issue, 
  	    c.tdp_data_source,  der.errordescription,c.dm_source, c.is_private
	FROM  itdp.contact c
	JOIN  itdp.domain_error_records der  ON  der.id=c.itdp_domain_id
	WHERE c.tld = '"+ @[$Package::TLD] +"' and c.dm_source = '"+@[$Package::Tenant]+"' ;

-- delete from itdp.contact_postal
	DELETE FROM itdp.contact_postal c
	WHERE c.contact_id IN (SELECT id FROM itdp.contact_error_records  WHERE tld  = '"+ @[$Package::TLD] +"' and dm_source = '"+@[$Package::Tenant]+"')
	AND   c.tld  =  '"+ @[$Package::TLD] +"' and c.dm_source = '"+@[$Package::Tenant]+"' ;	
-- delete from itdp.contact
	DELETE FROM itdp.contact c
	WHERE c.id  IN (SELECT id FROM itdp.contact_error_records  WHERE tld  = '"+ @[$Package::TLD] +"' and dm_source = '"+@[$Package::Tenant]+"')
	AND   c.tld  =  '"+ @[$Package::TLD] +"' and c.dm_source = '"+@[$Package::Tenant]+"';	
analyse itdp.contact;
analyse itdp.contact_postal;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;-- move itdp.contact with wrong domain to contact_error&#xA;&#x9;INSERT INTO itdp.contact_error_records (tld, source_contact_id, source_domain_id, id, itdp_domain_id, type_id, title,&#xA;&#x9;&#x9; org_reg, org_vat, org_duns,  email, phone, fax, country, language, tdp_contact_country_issue,&#xA;&#x9;&#x9; tdp_data_source, errordescription,dm_source, is_private)&#xA;&#x9;SELECT distinct c.tld, c.source_contact_id, c.source_domain_id, c.id, c.itdp_domain_id, c.type_id, c.title, c.org_reg,&#xA;&#x9;&#x9;c.org_vat, c.org_duns, c.email, c.phone, c.fax, c.country, c.language, c.tdp_contact_country_issue, &#xA;  &#x9;    c.tdp_data_source,  der.errordescription,c.dm_source, c.is_private&#xA;&#x9;FROM  itdp.contact c&#xA;&#x9;JOIN  itdp.domain_error_records der  ON  der.id=c.itdp_domain_id&#xA;&#x9;WHERE c.tld = 'in' and c.dm_source = 'opensrs' ;&#xA;&#xA;-- delete from itdp.contact_postal&#xA;&#x9;DELETE FROM itdp.contact_postal c&#xA;&#x9;WHERE c.contact_id IN (SELECT id FROM itdp.contact_error_records  WHERE tld  = 'in' and dm_source = 'opensrs')&#xA;&#x9;AND   c.tld  =  'in' and c.dm_source = 'opensrs' ;&#x9;&#xA;-- delete from itdp.contact&#xA;&#x9;DELETE FROM itdp.contact c&#xA;&#x9;WHERE c.id  IN (SELECT id FROM itdp.contact_error_records  WHERE tld  = 'in' and dm_source = 'opensrs')&#xA;&#x9;AND   c.tld  =  'in' and c.dm_source = 'opensrs';&#x9;&#xA;analyse itdp.contact;&#xA;analyse itdp.contact_postal;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move host with domain error to host error table"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{5DAE9BB9-C9AD-4D9E-B5D0-AB19C0105306}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Move host with domain error to host error table"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
	INSERT INTO itdp.host_error_records  (tld, source_host_id, source_domain_id, id, itdp_domain_id, tenant_customer_id, name,   errordescription,dm_source)
	SELECT DISTINCT  h.tld,h.source_host_id, h.source_domain_id,h.id, h.itdp_domain_id, h.tenant_customer_id, h.name,  der.errordescription,h.dm_source
	FROM  itdp.host h 
	JOIN  itdp.domain_error_records der   ON  der.source_domain_id = h.source_domain_id 
	WHERE   h.tld  = '"+ @[$Package::TLD] +"' and  h.dm_source = '"+@[$Package::Tenant]+"' ;


-- delete from itdp.host 
	
DELETE FROM itdp.host h
	WHERE h.source_domain_id  IN (SELECT source_domain_id FROM itdp.host_error_records 
 WHERE  tld = '"+ @[$Package::TLD] +"' and dm_source = '"+@[$Package::Tenant]+"'  ) 
		AND h.tld = '"+ @[$Package::TLD] +"'  and h.dm_source = '"+@[$Package::Tenant]+"' ;
COMMIT ;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;&#x9;INSERT INTO itdp.host_error_records  (tld, source_host_id, source_domain_id, id, itdp_domain_id, tenant_customer_id, name,   errordescription,dm_source)&#xA;&#x9;SELECT DISTINCT  h.tld,h.source_host_id, h.source_domain_id,h.id, h.itdp_domain_id, h.tenant_customer_id, h.name,  der.errordescription,h.dm_source&#xA;&#x9;FROM  itdp.host h &#xA;&#x9;JOIN  itdp.domain_error_records der   ON  der.source_domain_id = h.source_domain_id &#xA;&#x9;WHERE   h.tld  = 'in' and  h.dm_source = 'opensrs' ;&#xA;&#xA;&#xA;-- delete from itdp.host &#xA;&#x9;&#xA;DELETE FROM itdp.host h&#xA;&#x9;WHERE h.source_domain_id  IN (SELECT source_domain_id FROM itdp.host_error_records &#xA; WHERE  tld = 'in' and dm_source = 'opensrs'  ) &#xA;&#x9;&#x9;AND h.tld = 'in'  and h.dm_source = 'opensrs' ;&#xA;COMMIT ;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move to domain error table domains with contact error"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{E1FD0130-074A-40C5-992C-D1DCEA6B2B2A}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Move to domain error table domains with contact error"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
--- move to domain error table domains with contact error
	INSERT INTO itdp.domain_error_records (tld, source_domain_id, id, tenant_customer_id, accreditation_tld_id, name, auth_info, roid,
	ry_created_date, ry_expiry_date, ry_updated_date, ry_transfered_date, deleted_date, expiry_date,
status_id, auto_renew, errordescription,dm_source)
	SELECT distinct d.tld, d.source_domain_id, d.id, d.tenant_customer_id, d.accreditation_tld_id, d.name, d.auth_info, d.roid, 
	d.ry_created_date, d.ry_expiry_date, d.ry_updated_date, d.ry_transfered_date, d.deleted_date, d.expiry_date,
d.status_id, d.auto_renew, 'contact_error' ,d.dm_source
	FROM  itdp.domain d 
    JOIN  dm_opensrs.contact c ON  d.source_domain_id=c.domainnameid 
    JOIN  itdp.contact_error_records cer  ON  cer.source_contact_id = c.id
     WHERE  d.tld ='"+@[$Package::TLD]+"' AND d.dm_source = '"+@[$Package::Tenant]+"';

-- delete from itdp.domain
	DELETE FROM itdp.domain d	
	WHERE d.source_domain_id  IN (SELECT source_domain_id FROM itdp.domain_error_records  WHERE  tld = '"+@[$Package::TLD]+"' AND dm_source = '"+@[$Package::Tenant]+"' )
	 AND   d.tld  = '"+ @[$Package::TLD] +"' AND d.dm_source = '"+@[$Package::Tenant]+"';	
Analyse itdp.domain;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;--- move to domain error table domains with contact error&#xA;&#x9;INSERT INTO itdp.domain_error_records (tld, source_domain_id, id, tenant_customer_id, accreditation_tld_id, name, auth_info, roid,&#xA;&#x9;ry_created_date, ry_expiry_date, ry_updated_date, ry_transfered_date, deleted_date, expiry_date,&#xA;status_id, auto_renew, errordescription,dm_source)&#xA;&#x9;SELECT distinct d.tld, d.source_domain_id, d.id, d.tenant_customer_id, d.accreditation_tld_id, d.name, d.auth_info, d.roid, &#xA;&#x9;d.ry_created_date, d.ry_expiry_date, d.ry_updated_date, d.ry_transfered_date, d.deleted_date, d.expiry_date,&#xA;d.status_id, d.auto_renew, 'contact_error' ,d.dm_source&#xA;&#x9;FROM  itdp.domain d &#xA;    JOIN  dm_opensrs.contact c ON  d.source_domain_id=c.domainnameid &#xA;    JOIN  itdp.contact_error_records cer  ON  cer.source_contact_id = c.id&#xA;     WHERE  d.tld ='in' AND d.dm_source = 'opensrs';&#xA;&#xA;-- delete from itdp.domain&#xA;&#x9;DELETE FROM itdp.domain d&#x9;&#xA;&#x9;WHERE d.source_domain_id  IN (SELECT source_domain_id FROM itdp.domain_error_records  WHERE  tld = 'in' AND dm_source = 'opensrs' )&#xA;&#x9; AND   d.tld  = 'in' AND d.dm_source = 'opensrs';&#x9;&#xA;Analyse itdp.domain;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move to domain error table domains without contact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{43707D1B-E0D6-49F1-B154-B0C08AC1475E}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Move to domain error table domains without contact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
--- move to domain error domains without contact
	INSERT INTO itdp.domain_error_records (tld, source_domain_id, id, tenant_customer_id, accreditation_tld_id, name, auth_info, roid,
	ry_created_date, ry_expiry_date, ry_updated_date, ry_transfered_date, deleted_date, expiry_date,
status_id, auto_renew, errordescription,dm_source)
	SELECT distinct d.tld, d.source_domain_id, d.id, d.tenant_customer_id, d.accreditation_tld_id, d.name, d.auth_info, d.roid, 
	d.ry_created_date, d.ry_expiry_date, d.ry_updated_date, d.ry_transfered_date, d.deleted_date, d.expiry_date,
d.status_id, d.auto_renew, 'domain without contact' ,d.dm_source
	FROM  itdp.domain d 
	JOIN itdp.tld t ON t.tld_name =d.tld 
	LEFT JOIN dm_opensrs.contact c on d.source_domain_id=c.domainnameid and c.tld='"+@[$Package::TLD]+"'
	WHERE  d.tld ='"+@[$Package::TLD]+"'  AND d.dm_source = '"+@[$Package::Tenant]+"'  AND c.domainnameid IS NULL AND NOT(t.is_thin) ;


-- delete from itdp.domain
	DELETE FROM itdp.domain d	
	WHERE d.source_domain_id  IN (SELECT source_domain_id FROM itdp.domain_error_records  WHERE tld = '"+@[$Package::TLD]+"' AND dm_source = '"+@[$Package::Tenant]+"' )
		AND d.tld = '"+@[$Package::TLD]+"' and d.dm_source = '"+@[$Package::Tenant]+"' ;	
ANALYSE itdp.domain;
ANALYSE itdp.domain_error_records;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;--- move to domain error domains without contact&#xA;&#x9;INSERT INTO itdp.domain_error_records (tld, source_domain_id, id, tenant_customer_id, accreditation_tld_id, name, auth_info, roid,&#xA;&#x9;ry_created_date, ry_expiry_date, ry_updated_date, ry_transfered_date, deleted_date, expiry_date,&#xA;status_id, auto_renew, errordescription,dm_source)&#xA;&#x9;SELECT distinct d.tld, d.source_domain_id, d.id, d.tenant_customer_id, d.accreditation_tld_id, d.name, d.auth_info, d.roid, &#xA;&#x9;d.ry_created_date, d.ry_expiry_date, d.ry_updated_date, d.ry_transfered_date, d.deleted_date, d.expiry_date,&#xA;d.status_id, d.auto_renew, 'domain without contact' ,d.dm_source&#xA;&#x9;FROM  itdp.domain d &#xA;&#x9;JOIN itdp.tld t ON t.tld_name =d.tld &#xA;&#x9;LEFT JOIN dm_opensrs.contact c on d.source_domain_id=c.domainnameid and c.tld='in'&#xA;&#x9;WHERE  d.tld ='in'  AND d.dm_source = 'opensrs'  AND c.domainnameid IS NULL AND NOT(t.is_thin) ;&#xA;&#xA;&#xA;-- delete from itdp.domain&#xA;&#x9;DELETE FROM itdp.domain d&#x9;&#xA;&#x9;WHERE d.source_domain_id  IN (SELECT source_domain_id FROM itdp.domain_error_records  WHERE tld = 'in' AND dm_source = 'opensrs' )&#xA;&#x9;&#x9;AND d.tld = 'in' and d.dm_source = 'opensrs' ;&#x9;&#xA;ANALYSE itdp.domain;&#xA;ANALYSE itdp.domain_error_records;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Populate domain_lock"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{7B2C8815-36B5-477F-9687-2C8753587B71}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Populate domain_lock"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
   -- hold
        INSERT INTO itdp.domain_lock (dm_source, tld, domain_id, type_id, is_internal) 
	    SELECT  d.dm_source, d.tld, d.id, ilt.id ,FALSE
  FROM itdp.domain d        
        JOIN  dm_opensrs.domainname  dn ON dn.domainnameid = d.source_domain_id        
        LEFT JOIN itdp.lock_type ilt ON ilt.name = 'hold'   
		LEFT JOIN itdp.domain_lock dl ON dl.domain_id = d.id AND dl.type_id = ilt.id        
        WHERE dn.lock_hold = '1' AND dl.domain_id IS NULL 
		AND d.TLD = '"+ @[$Package::TLD] + "' AND d.dm_source = '"+@[$Package::Tenant]+"' ;
--transfer
	    INSERT INTO itdp.domain_lock (dm_source, tld, domain_id, type_id, is_internal) 
	    SELECT  d.dm_source, d.tld, d.id, ilt.id ,FALSE
  FROM itdp.domain d        
        JOIN  dm_opensrs.domainname  dn ON dn.domainnameid = d.source_domain_id        
        LEFT JOIN itdp.lock_type ilt ON ilt.name = 'transfer'   
		LEFT JOIN itdp.domain_lock dl ON dl.domain_id = d.id AND dl.type_id = ilt.id        
        WHERE dn.lock_transfer = '1' AND dl.domain_id IS NULL 
		AND d.TLD = '"+ @[$Package::TLD] + "' AND d.dm_source = '"+@[$Package::Tenant]+"' ;
	
--update	
        INSERT INTO itdp.domain_lock (dm_source, tld, domain_id, type_id, is_internal) 
	    SELECT  d.dm_source, d.tld, d.id, ilt.id ,FALSE
  FROM itdp.domain d        
        JOIN  dm_opensrs.domainname  dn ON dn.domainnameid = d.source_domain_id        
        LEFT JOIN itdp.lock_type ilt ON ilt.name = 'update'   
		LEFT JOIN itdp.domain_lock dl ON dl.domain_id = d.id AND dl.type_id = ilt.id        
        WHERE dn.lock_update = '1' AND dl.domain_id IS NULL 
		AND d.TLD = '"+ @[$Package::TLD] + "' AND d.dm_source = '"+@[$Package::Tenant]+"' ;
	
--delete	
        INSERT INTO itdp.domain_lock (dm_source, tld, domain_id, type_id, is_internal) 
	    SELECT  d.dm_source, d.tld, d.id, ilt.id ,FALSE
  FROM itdp.domain d        
        JOIN  dm_opensrs.domainname  dn ON dn.domainnameid = d.source_domain_id        
        LEFT JOIN itdp.lock_type ilt ON ilt.name = 'delete'   
		LEFT JOIN itdp.domain_lock dl ON dl.domain_id = d.id AND dl.type_id = ilt.id        
        WHERE dn.lock_delete = '1' AND dl.domain_id IS NULL 
		AND d.TLD = '"+ @[$Package::TLD] + "' AND d.dm_source = '"+@[$Package::Tenant]+"' ; 
ANALYSE itdp.domain_lock;
COMMIT; "</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;   -- hold&#xA;        INSERT INTO itdp.domain_lock (dm_source, tld, domain_id, type_id, is_internal) &#xA;&#x9;    SELECT  d.dm_source, d.tld, d.id, ilt.id ,FALSE&#xA;  FROM itdp.domain d        &#xA;        JOIN  dm_opensrs.domainname  dn ON dn.domainnameid = d.source_domain_id        &#xA;        LEFT JOIN itdp.lock_type ilt ON ilt.name = 'hold'   &#xA;&#x9;&#x9;LEFT JOIN itdp.domain_lock dl ON dl.domain_id = d.id AND dl.type_id = ilt.id        &#xA;        WHERE dn.lock_hold = '1' AND dl.domain_id IS NULL &#xA;&#x9;&#x9;AND d.TLD = 'in' AND d.dm_source = 'opensrs' ;&#xA;--transfer&#xA;&#x9;    INSERT INTO itdp.domain_lock (dm_source, tld, domain_id, type_id, is_internal) &#xA;&#x9;    SELECT  d.dm_source, d.tld, d.id, ilt.id ,FALSE&#xA;  FROM itdp.domain d        &#xA;        JOIN  dm_opensrs.domainname  dn ON dn.domainnameid = d.source_domain_id        &#xA;        LEFT JOIN itdp.lock_type ilt ON ilt.name = 'transfer'   &#xA;&#x9;&#x9;LEFT JOIN itdp.domain_lock dl ON dl.domain_id = d.id AND dl.type_id = ilt.id        &#xA;        WHERE dn.lock_transfer = '1' AND dl.domain_id IS NULL &#xA;&#x9;&#x9;AND d.TLD = 'in' AND d.dm_source = 'opensrs' ;&#xA;&#x9;&#xA;--update&#x9;&#xA;        INSERT INTO itdp.domain_lock (dm_source, tld, domain_id, type_id, is_internal) &#xA;&#x9;    SELECT  d.dm_source, d.tld, d.id, ilt.id ,FALSE&#xA;  FROM itdp.domain d        &#xA;        JOIN  dm_opensrs.domainname  dn ON dn.domainnameid = d.source_domain_id        &#xA;        LEFT JOIN itdp.lock_type ilt ON ilt.name = 'update'   &#xA;&#x9;&#x9;LEFT JOIN itdp.domain_lock dl ON dl.domain_id = d.id AND dl.type_id = ilt.id        &#xA;        WHERE dn.lock_update = '1' AND dl.domain_id IS NULL &#xA;&#x9;&#x9;AND d.TLD = 'in' AND d.dm_source = 'opensrs' ;&#xA;&#x9;&#xA;--delete&#x9;&#xA;        INSERT INTO itdp.domain_lock (dm_source, tld, domain_id, type_id, is_internal) &#xA;&#x9;    SELECT  d.dm_source, d.tld, d.id, ilt.id ,FALSE&#xA;  FROM itdp.domain d        &#xA;        JOIN  dm_opensrs.domainname  dn ON dn.domainnameid = d.source_domain_id        &#xA;        LEFT JOIN itdp.lock_type ilt ON ilt.name = 'delete'   &#xA;&#x9;&#x9;LEFT JOIN itdp.domain_lock dl ON dl.domain_id = d.id AND dl.type_id = ilt.id        &#xA;        WHERE dn.lock_delete = '1' AND dl.domain_id IS NULL &#xA;&#x9;&#x9;AND d.TLD = 'in' AND d.dm_source = 'opensrs' ; &#xA;ANALYSE itdp.domain_lock;&#xA;COMMIT; " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Return ITDP_PKs to dm_enom_contact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{72A0F4B1-4393-4EF8-ABE2-5BC7E1DD576E}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Return ITDP_PKs to dm_enom_contact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN ;   
    
     UPDATE dm_opensrs.contact cc SET itdp_contact_id =c.id 
	 FROM   itdp.contact c
     WHERE  cc.id =c.source_contact_id  AND itdp_contact_id IS NULL  
	 AND c.TLD= '"+ @[$Package::TLD]+"'  and  c.dm_source = '"+@[$Package::Tenant]+"' ;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                  SQLTask:SqlStatementSource="BEGIN ;   &#xA;    &#xA;     UPDATE dm_opensrs.contact cc SET itdp_contact_id =c.id &#xA;&#x9; FROM   itdp.contact c&#xA;     WHERE  cc.id =c.source_contact_id  AND itdp_contact_id IS NULL  &#xA;&#x9; AND c.TLD= 'in'  and  c.dm_source = 'opensrs' ;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Return ITDP_PKs to dm_enom_domainname"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{EB77BFE5-9F80-4ADA-9EF8-1FBF930222C2}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Return ITDP_PKs to dm_enom_domainname"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN ; 
ANALYSE dm_opensrs.domainname;
ANALYSE itdp.domain;

     UPDATE dm_opensrs.domainname dn SET itdp_domain_id =d.id
     FROM   itdp.domain d
     WHERE  d.dm_source = '"+@[$Package::Tenant]+"' and d.tld= '"+ @[$Package::TLD]  +"'  and dn.domainnameid =d.source_domain_id 
 AND itdp_domain_id IS NULL AND dn.TLD = '"+ @[$Package::TLD]+"'  ;
  
 COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                  SQLTask:SqlStatementSource="BEGIN ; &#xA;ANALYSE dm_opensrs.domainname;&#xA;ANALYSE itdp.domain;&#xA;&#xA;     UPDATE dm_opensrs.domainname dn SET itdp_domain_id =d.id&#xA;     FROM   itdp.domain d&#xA;     WHERE  d.dm_source = 'opensrs' and d.tld= 'in'  and dn.domainnameid =d.source_domain_id &#xA; AND itdp_domain_id IS NULL AND dn.TLD = 'in'  ;&#xA;  &#xA; COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Return ITDP_PKs to dm_enom_namesersvers"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{7278F2A4-6CAC-4286-804A-47DF8086CA75}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Return ITDP_PKs to dm_enom_namesersvers"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN ;    
	ANALYSE dm_opensrs.nameservers;
	ANALYSE itdp.host;
     UPDATE dm_opensrs.nameservers n SET itdp_host_id =h.id, itdp_domain_id =h.itdp_domain_id
     FROM   itdp.host h
     WHERE n.TLD= '"+ @[$Package::TLD]+"' and 
 h.dm_source = '"+@[$Package::Tenant]+"' and h.TLD= '"+ @[$Package::TLD]+"'  and 
 n.source_nameserver_id =h.source_host_id  AND itdp_host_id IS NULL     ; 
  
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
                  SQLTask:SqlStatementSource="BEGIN ;    &#xA;&#x9;ANALYSE dm_opensrs.nameservers;&#xA;&#x9;ANALYSE itdp.host;&#xA;     UPDATE dm_opensrs.nameservers n SET itdp_host_id =h.id, itdp_domain_id =h.itdp_domain_id&#xA;     FROM   itdp.host h&#xA;     WHERE n.TLD= 'in' and &#xA; h.dm_source = 'opensrs' and h.TLD= 'in'  and &#xA; n.source_nameserver_id =h.source_host_id  AND itdp_host_id IS NULL     ; &#xA;  &#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{70ECB769-5117-475C-9A8E-4C9C54DD6CA9}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move to domain error table domains without contact"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move to domain error table domains with contact error" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{030F2D4A-F1A4-49AB-A210-F1312188FF31}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move to domain error table domains with contact error"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Populate domain_lock" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{9493F649-B7DE-46D0-B0F7-8B754AF1E52F}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Populate domain_lock"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Return ITDP_PKs to dm_enom_domainname" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{CB13CD57-8DB1-4ACE-98EA-912DA95978CB}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move host with domain error to host error table"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Return ITDP_PKs to dm_enom_namesersvers" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{DED0F53D-7381-4912-B23B-96998ECB4BE7}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move to domain error table domains with contact error"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\move contact records with bad domain to contact error" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{A11B145B-DE5D-4B77-A224-826E97E1DFA5}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move to domain error table domains with contact error"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move host with domain error to host error table" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 6]"
              DTS:CreationName=""
              DTS:DTSID="{713636E8-EC6B-4E8D-A82A-E250FE42509C}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\move contact records with bad domain to contact error"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 6"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Return ITDP_PKs to dm_enom_contact" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\dm_log - extract_transfer_end"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{AD59CCF3-7430-437E-B325-40CDC44A450D}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="dm_log - extract_transfer_end"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"UPDATE  itdp.dm_log dl
SET end_date_extract=now(),
	status='Itdp transfer started',
	result_domain.dm_enom = (SELECT count(*) FROM dm_opensrs.domainname WHERE tld='"+ @[$Package::TLD] +"' ),
    result_host.dm_enom=(SELECT count(*) FROM dm_opensrs.nameservers n   JOIN dm_opensrs.domainname d ON d.domainnameid=n.domainnameid  WHERE d.tld='"+ @[$Package::TLD] +"' ),
	result_contact.dm_enom=(SELECT count(*) FROM dm_opensrs.contact WHERE tld='"+ @[$Package::TLD] +"' )
WHERE dl.id = "+ (DT_WSTR, 5) @[User::dm_log_id] +" and dl.dm_source=
'"+ @[$Package::Tenant] +"' and dl.tld='"+ @[$Package::TLD] +"';"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2DC04CA4-3A3F-493B-AA09-274CFEDF0DB2}"
              SQLTask:SqlStatementSource="UPDATE  itdp.dm_log dl&#xA;SET end_date_extract=now(),&#xA;&#x9;status='Itdp transfer started',&#xA;&#x9;result_domain.dm_enom = (SELECT count(*) FROM dm_opensrs.domainname WHERE tld='in' ),&#xA;    result_host.dm_enom=(SELECT count(*) FROM dm_opensrs.nameservers n   JOIN dm_opensrs.domainname d ON d.domainnameid=n.domainnameid  WHERE d.tld='in' ),&#xA;&#x9;result_contact.dm_enom=(SELECT count(*) FROM dm_opensrs.contact WHERE tld='in' )&#xA;WHERE dl.id = 1 and dl.dm_source=&#xA;'opensrs' and dl.tld='in';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\dm_log - itdp_transfer_end"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{D775A677-40CB-4D9B-86B9-C0DD2F46D586}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="dm_log - itdp_transfer_end"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"UPDATE  itdp.dm_log dl
SET end_date_itdp_transfer=now(),
	status='Tdp transfer started',
	result_domain.itdp = (SELECT count(*) FROM itdp.domain WHERE tld='"+ @[$Package::TLD] +"'  AND dm_source='"+ @[$Package::Tenant] +"'),
	result_domain.error = (SELECT count(*) FROM itdp.domain_error_records WHERE tld='"+ @[$Package::TLD] +"' AND dm_source='"+ @[$Package::Tenant] +"' ),
	result_host.itdp=(SELECT count(*) FROM itdp.host WHERE tld='"+ @[$Package::TLD] +"' AND dm_source='"+ @[$Package::Tenant] +"' ),
	result_host.error=(SELECT count(*) FROM itdp.host_error_records WHERE tld='"+ @[$Package::TLD] +"' AND dm_source='"+ @[$Package::Tenant] +"' ),
	result_contact.itdp=(SELECT count(*) FROM itdp.contact WHERE tld='"+ @[$Package::TLD] +"' AND dm_source='"+ @[$Package::Tenant] +"' ),
	result_contact.error=(SELECT count(*) FROM itdp.contact_error_records WHERE tld='"+ @[$Package::TLD] +"' AND dm_source='"+ @[$Package::Tenant] +"' ),	
	result_domain.dm_enom_itdp_pk = (SELECT count(*) FROM dm_opensrs.domainname 
		WHERE  itdp_domain_id is not null and tld='"+ @[$Package::TLD] +"' ),
	result_host.dm_enom_itdp_pk=(SELECT count(*) FROM dm_opensrs.nameservers n 		
		 WHERE n.itdp_host_id is not null and  tld='"+ @[$Package::TLD] +"' ),
	result_contact.dm_enom_itdp_pk=(SELECT count(*) FROM dm_opensrs.contact WHERE itdp_contact_id is not null and tld='"+ @[$Package::TLD] +"' )	
WHERE dl.id = "+ (DT_WSTR, 5) @[User::dm_log_id] +" and dl.dm_source=
'"+ @[$Package::Tenant] +"' and dl.tld='"+ @[$Package::TLD] +"';"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2DC04CA4-3A3F-493B-AA09-274CFEDF0DB2}"
              SQLTask:SqlStatementSource="UPDATE  itdp.dm_log dl&#xA;SET end_date_itdp_transfer=now(),&#xA;&#x9;status='Tdp transfer started',&#xA;&#x9;result_domain.itdp = (SELECT count(*) FROM itdp.domain WHERE tld='in'  AND dm_source='opensrs'),&#xA;&#x9;result_domain.error = (SELECT count(*) FROM itdp.domain_error_records WHERE tld='in' AND dm_source='opensrs' ),&#xA;&#x9;result_host.itdp=(SELECT count(*) FROM itdp.host WHERE tld='in' AND dm_source='opensrs' ),&#xA;&#x9;result_host.error=(SELECT count(*) FROM itdp.host_error_records WHERE tld='in' AND dm_source='opensrs' ),&#xA;&#x9;result_contact.itdp=(SELECT count(*) FROM itdp.contact WHERE tld='in' AND dm_source='opensrs' ),&#xA;&#x9;result_contact.error=(SELECT count(*) FROM itdp.contact_error_records WHERE tld='in' AND dm_source='opensrs' ),&#x9;&#xA;&#x9;result_domain.dm_enom_itdp_pk = (SELECT count(*) FROM dm_opensrs.domainname &#xA;&#x9;&#x9;WHERE  itdp_domain_id is not null and tld='in' ),&#xA;&#x9;result_host.dm_enom_itdp_pk=(SELECT count(*) FROM dm_opensrs.nameservers n &#x9;&#x9;&#xA;&#x9;&#x9; WHERE n.itdp_host_id is not null and  tld='in' ),&#xA;&#x9;result_contact.dm_enom_itdp_pk=(SELECT count(*) FROM dm_opensrs.contact WHERE itdp_contact_id is not null and tld='in' )&#x9;&#xA;WHERE dl.id = 1 and dl.dm_source=&#xA;'opensrs' and dl.tld='in';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{FF87964B-7FD6-4E50-BEC5-9DA592BA8B35}"
          DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{19482AB0-6C16-498D-A6E5-7477B2D89998}"
          DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{9ECCE8EC-D4DD-4099-92C8-124CFE5E524E}"
          DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\dm_log - itdp_transfer_end" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{426F203B-E34C-4D75-8F75-E56EE4D3D610}"
          DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\dm_log - extract_transfer_end"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create partition in ITDP for tenant and tld"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{4BFD0B12-D8ED-45CE-928B-0DC8373F96B7}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create partition in ITDP for tenant and tld"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:PropertyExpression
        DTS:Name="SqlStatementSource">"
-- domain
CREATE TABLE IF NOT EXISTS   itdp.domain_"+ @[$Package::Tenant] +"  PARTITION OF itdp.DOMAIN
    FOR VALUES IN ('"+ @[$Package::Tenant] +"')
   PARTITION BY LIST (tld);
  
CREATE TABLE IF NOT EXISTS  itdp.domain_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"  PARTITION OF itdp.domain_"+ @[$Package::Tenant] +"
    FOR VALUES IN ('"+ @[$Package::TLD] +"');  

CREATE INDEX  IF NOT EXISTS domain_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_source_domain_id_idx ON itdp.domain_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"  USING btree (source_domain_id);

DO $$
BEGIN 
	if not exists (select conname    FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         
        WHERE relname = 'domain_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"' AND nspname='itdp'  and conname = 'domain_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_name_key') then
     	ALTER TABLE itdp.domain_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"   ADD CONSTRAINT domain_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_name_key UNIQUE (name);
    end if;
	if not exists (select conname    FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         
        WHERE relname = 'domain_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"' AND nspname='itdp'  and conname = 'domain_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_status_id_fkey') then
     	ALTER TABLE itdp.domain_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"   ADD 	CONSTRAINT domain_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_status_id_fkey FOREIGN KEY (status_id) REFERENCES itdp.domain_status(id);
    end if;	
END$$  ;

-------------------------------------------------------------------------------------------------------    
-- host    
CREATE TABLE IF NOT EXISTS   itdp.host_"+ @[$Package::Tenant] +" PARTITION OF itdp.host
   FOR VALUES IN ('"+ @[$Package::Tenant] +"')
   PARTITION BY LIST (tld);
  
CREATE TABLE IF NOT EXISTS  itdp.host_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"  PARTITION OF itdp.host_"+ @[$Package::Tenant] +"
    FOR VALUES IN ('"+ @[$Package::TLD] +"'); 

CREATE INDEX  IF NOT EXISTS host_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_source_host_id_idx ON itdp.host_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +" USING btree (source_host_id);
CREATE INDEX  IF NOT EXISTS host_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_name_idx ON itdp.host_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +" USING btree (name);
CREATE INDEX  IF NOT EXISTS host_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_itdp_domain_id_idx ON itdp.host_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +" USING btree (itdp_domain_id) ;


-- host_addr    
CREATE TABLE IF NOT EXISTS   itdp.host_addr_"+ @[$Package::Tenant] +" PARTITION OF itdp.host_addr
   FOR VALUES IN ('"+ @[$Package::Tenant] +"')
   PARTITION BY LIST (tld);
  
CREATE TABLE IF NOT EXISTS  itdp.host_addr_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"  PARTITION OF itdp.host_addr_"+ @[$Package::Tenant] +"
    FOR VALUES IN ('"+ @[$Package::TLD] +"'); 
--------------------------------------------------------------------------------------------------------   
--contact   
 CREATE TABLE IF NOT EXISTS  itdp.contact_"+ @[$Package::Tenant] +"  PARTITION OF itdp.contact
    FOR VALUES IN ('"+ @[$Package::Tenant] +"')
   PARTITION BY LIST (tld);
  
CREATE TABLE IF NOT EXISTS  itdp.contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"  PARTITION OF itdp.contact_"+ @[$Package::Tenant] +"
    FOR VALUES IN ('"+ @[$Package::TLD] +"'); 
 
 CREATE INDEX  IF NOT EXISTS contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_source_contact_id_idx ON itdp.contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +" USING btree (source_contact_id);

DO $$
BEGIN 
	if not exists (select conname    FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         
        WHERE relname = 'contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"' AND nspname='itdp'  and conname = 'contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_country_fkey') then
     	ALTER TABLE itdp.contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"   ADD CONSTRAINT contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_country_fkey FOREIGN KEY (country) REFERENCES itdp.country(alpha2);
    end if;
	if not exists (select conname    FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         
        WHERE relname = 'contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"' AND nspname='itdp'  and conname = 'contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_language_fkey') then
     	ALTER TABLE itdp.contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"   ADD CONSTRAINT contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_language_fkey FOREIGN KEY (language) REFERENCES itdp.language(alpha2); 
    end if;
	if not exists (select conname    FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         
        WHERE relname = 'contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"' AND nspname='itdp'  and conname = 'contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_type_id_fkey') then
     	ALTER TABLE itdp.contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"    ADD CONSTRAINT contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_type_id_fkey FOREIGN KEY (type_id) REFERENCES itdp.contact_type(id) ; 
    end if;
END$$  ;
   
 -------------------------------------------------------------------------------------------  
--contact_postal   
 CREATE TABLE IF NOT EXISTS  itdp.contact_postal_"+ @[$Package::Tenant] +"  PARTITION OF itdp.contact_postal 
    FOR VALUES IN ('"+ @[$Package::Tenant] +"')
   PARTITION BY LIST (tld);
  
CREATE TABLE IF NOT EXISTS  itdp.contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"  PARTITION OF itdp.contact_postal_"+ @[$Package::Tenant] +"
    FOR VALUES IN ('"+ @[$Package::TLD] +"'); 

DO $$
BEGIN 
	if not exists (select conname    FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         
        WHERE relname = 'contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"' AND nspname='itdp'  and conname = 'contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_check') then
     	ALTER TABLE itdp.contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"   ADD CONSTRAINT contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_check CHECK (((NOT is_international) OR (is_null_or_ascii(first_name) AND is_null_or_ascii(last_name)
	AND is_null_or_ascii(org_name) AND is_null_or_ascii(address1) AND is_null_or_ascii(address2) AND is_null_or_ascii(address3)
	AND is_null_or_ascii(city) AND is_null_or_ascii(postal_code) AND is_null_or_ascii(state))));
    end if;
	if not exists (select conname    FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         
        WHERE relname = 'contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"' AND nspname='itdp'  and conname = 'contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_contact_id_is_international_key') then
     	ALTER TABLE itdp.contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"   ADD CONSTRAINT contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_contact_id_is_international_key UNIQUE (contact_id, is_international);
    end if;
	if not exists (select conname    FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         
        WHERE relname = 'contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"' AND nspname='itdp'  and conname = 'contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_contact_id_fkey') then
     	ALTER TABLE itdp.contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"    ADD CONSTRAINT contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_contact_id_fkey FOREIGN KEY (dm_source,tld,contact_id) REFERENCES itdp.contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"(dm_source,tld,id);
    end if;
END$$  ; 
   "</DTS:PropertyExpression>
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
          SQLTask:SqlStatementSource="&#xA;-- domain&#xA;CREATE TABLE IF NOT EXISTS   itdp.domain_opensrs  PARTITION OF itdp.DOMAIN&#xA;    FOR VALUES IN ('opensrs')&#xA;   PARTITION BY LIST (tld);&#xA;  &#xA;CREATE TABLE IF NOT EXISTS  itdp.domain_opensrs_in  PARTITION OF itdp.domain_opensrs&#xA;    FOR VALUES IN ('in');  &#xA;&#xA;CREATE INDEX  IF NOT EXISTS domain_opensrs_in_source_domain_id_idx ON itdp.domain_opensrs_in  USING btree (source_domain_id);&#xA;&#xA;DO $$&#xA;BEGIN &#xA;&#x9;if not exists (select conname    FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         &#xA;        WHERE relname = 'domain_opensrs_in' AND nspname='itdp'  and conname = 'domain_opensrs_in_name_key') then&#xA;     &#x9;ALTER TABLE itdp.domain_opensrs_in   ADD CONSTRAINT domain_opensrs_in_name_key UNIQUE (name);&#xA;    end if;&#xA;&#x9;if not exists (select conname    FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         &#xA;        WHERE relname = 'domain_opensrs_in' AND nspname='itdp'  and conname = 'domain_opensrs_in_status_id_fkey') then&#xA;     &#x9;ALTER TABLE itdp.domain_opensrs_in   ADD &#x9;CONSTRAINT domain_opensrs_in_status_id_fkey FOREIGN KEY (status_id) REFERENCES itdp.domain_status(id);&#xA;    end if;&#x9;&#xA;END$$  ;&#xA;&#xA;-------------------------------------------------------------------------------------------------------    &#xA;-- host    &#xA;CREATE TABLE IF NOT EXISTS   itdp.host_opensrs PARTITION OF itdp.host&#xA;   FOR VALUES IN ('opensrs')&#xA;   PARTITION BY LIST (tld);&#xA;  &#xA;CREATE TABLE IF NOT EXISTS  itdp.host_opensrs_in  PARTITION OF itdp.host_opensrs&#xA;    FOR VALUES IN ('in'); &#xA;&#xA;CREATE INDEX  IF NOT EXISTS host_opensrs_in_source_host_id_idx ON itdp.host_opensrs_in USING btree (source_host_id);&#xA;CREATE INDEX  IF NOT EXISTS host_opensrs_in_name_idx ON itdp.host_opensrs_in USING btree (name);&#xA;CREATE INDEX  IF NOT EXISTS host_opensrs_in_itdp_domain_id_idx ON itdp.host_opensrs_in USING btree (itdp_domain_id) ;&#xA;&#xA;&#xA;-- host_addr    &#xA;CREATE TABLE IF NOT EXISTS   itdp.host_addr_opensrs PARTITION OF itdp.host_addr&#xA;   FOR VALUES IN ('opensrs')&#xA;   PARTITION BY LIST (tld);&#xA;  &#xA;CREATE TABLE IF NOT EXISTS  itdp.host_addr_opensrs_in  PARTITION OF itdp.host_addr_opensrs&#xA;    FOR VALUES IN ('in'); &#xA;--------------------------------------------------------------------------------------------------------   &#xA;--contact   &#xA; CREATE TABLE IF NOT EXISTS  itdp.contact_opensrs  PARTITION OF itdp.contact&#xA;    FOR VALUES IN ('opensrs')&#xA;   PARTITION BY LIST (tld);&#xA;  &#xA;CREATE TABLE IF NOT EXISTS  itdp.contact_opensrs_in  PARTITION OF itdp.contact_opensrs&#xA;    FOR VALUES IN ('in'); &#xA; &#xA; CREATE INDEX  IF NOT EXISTS contact_opensrs_in_source_contact_id_idx ON itdp.contact_opensrs_in USING btree (source_contact_id);&#xA;&#xA;DO $$&#xA;BEGIN &#xA;&#x9;if not exists (select conname    FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         &#xA;        WHERE relname = 'contact_opensrs_in' AND nspname='itdp'  and conname = 'contact_opensrs_in_country_fkey') then&#xA;     &#x9;ALTER TABLE itdp.contact_opensrs_in   ADD CONSTRAINT contact_opensrs_in_country_fkey FOREIGN KEY (country) REFERENCES itdp.country(alpha2);&#xA;    end if;&#xA;&#x9;if not exists (select conname    FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         &#xA;        WHERE relname = 'contact_opensrs_in' AND nspname='itdp'  and conname = 'contact_opensrs_in_language_fkey') then&#xA;     &#x9;ALTER TABLE itdp.contact_opensrs_in   ADD CONSTRAINT contact_opensrs_in_language_fkey FOREIGN KEY (language) REFERENCES itdp.language(alpha2); &#xA;    end if;&#xA;&#x9;if not exists (select conname    FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         &#xA;        WHERE relname = 'contact_opensrs_in' AND nspname='itdp'  and conname = 'contact_opensrs_in_type_id_fkey') then&#xA;     &#x9;ALTER TABLE itdp.contact_opensrs_in    ADD CONSTRAINT contact_opensrs_in_type_id_fkey FOREIGN KEY (type_id) REFERENCES itdp.contact_type(id) ; &#xA;    end if;&#xA;END$$  ;&#xA;   &#xA; -------------------------------------------------------------------------------------------  &#xA;--contact_postal   &#xA; CREATE TABLE IF NOT EXISTS  itdp.contact_postal_opensrs  PARTITION OF itdp.contact_postal &#xA;    FOR VALUES IN ('opensrs')&#xA;   PARTITION BY LIST (tld);&#xA;  &#xA;CREATE TABLE IF NOT EXISTS  itdp.contact_postal_opensrs_in  PARTITION OF itdp.contact_postal_opensrs&#xA;    FOR VALUES IN ('in'); &#xA;&#xA;DO $$&#xA;BEGIN &#xA;&#x9;if not exists (select conname    FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         &#xA;        WHERE relname = 'contact_postal_opensrs_in' AND nspname='itdp'  and conname = 'contact_postal_opensrs_in_check') then&#xA;     &#x9;ALTER TABLE itdp.contact_postal_opensrs_in   ADD CONSTRAINT contact_postal_opensrs_in_check CHECK (((NOT is_international) OR (is_null_or_ascii(first_name) AND is_null_or_ascii(last_name)&#xA;&#x9;AND is_null_or_ascii(org_name) AND is_null_or_ascii(address1) AND is_null_or_ascii(address2) AND is_null_or_ascii(address3)&#xA;&#x9;AND is_null_or_ascii(city) AND is_null_or_ascii(postal_code) AND is_null_or_ascii(state))));&#xA;    end if;&#xA;&#x9;if not exists (select conname    FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         &#xA;        WHERE relname = 'contact_postal_opensrs_in' AND nspname='itdp'  and conname = 'contact_postal_opensrs_in_contact_id_is_international_key') then&#xA;     &#x9;ALTER TABLE itdp.contact_postal_opensrs_in   ADD CONSTRAINT contact_postal_opensrs_in_contact_id_is_international_key UNIQUE (contact_id, is_international);&#xA;    end if;&#xA;&#x9;if not exists (select conname    FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         &#xA;        WHERE relname = 'contact_postal_opensrs_in' AND nspname='itdp'  and conname = 'contact_postal_opensrs_in_contact_id_fkey') then&#xA;     &#x9;ALTER TABLE itdp.contact_postal_opensrs_in    ADD CONSTRAINT contact_postal_opensrs_in_contact_id_fkey FOREIGN KEY (dm_source,tld,contact_id) REFERENCES itdp.contact_opensrs_in(dm_source,tld,id);&#xA;    end if;&#xA;END$$  ; &#xA;   " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\dm_log - tdp_transfer_end"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{e0d21d14-4b6d-4b35-b004-291843ef7a81}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="dm_log - tdp_transfer_end"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:PropertyExpression
        DTS:Name="SqlStatementSource">"UPDATE  itdp.dm_log dl
SET end_date_tdp_transfer=now(),
	status='TDP Migration finished',
	result_domain = t.result_domain,
	result_host=t.result_host,
	result_contact=t.result_contact
FROM itdp.tld t
WHERE t.tld_name=dl.tld AND t.dm_source=dl.dm_source
 AND	 dl.id = "+ (DT_WSTR, 5) @[User::dm_log_id] +" 
 AND dl.dm_source='"+ @[$Package::Tenant] +"' 
 AND dl.tld='"+ @[$Package::TLD] +"';"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
          SQLTask:SqlStatementSource="UPDATE  itdp.dm_log dl&#xA;SET end_date_tdp_transfer=now(),&#xA;&#x9;status='TDP Migration finished',&#xA;&#x9;result_domain = t.result_domain,&#xA;&#x9;result_host=t.result_host,&#xA;&#x9;result_contact=t.result_contact&#xA;FROM itdp.tld t&#xA;WHERE t.tld_name=dl.tld AND t.dm_source=dl.dm_source&#xA; AND&#x9; dl.id = 1 &#xA; AND dl.dm_source='opensrs' &#xA; AND dl.tld='in';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute ITDP-TDP"
      DTS:CreationName="Microsoft.ExecutePackageTask"
      DTS:Description="Execute Package Task"
      DTS:DTSID="{058b61e6-0e89-455e-b7b7-88c5cfa722e6}"
      DTS:ExecutableType="Microsoft.ExecutePackageTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute ITDP-TDP"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExecutePackageTask>
          <UseProjectReference>True</UseProjectReference>
          <PackageName>ITDP-TDP.dtsx</PackageName>
          <ParameterAssignment>
            <ParameterName>Tenant</ParameterName>
            <BindedVariableOrParameterName>$Package::Tenant</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>TLD</ParameterName>
            <BindedVariableOrParameterName>$Package::TLD</BindedVariableOrParameterName>
          </ParameterAssignment>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{783B979D-DDE9-48B8-8A8D-D1CA6B1BD07C}"
      DTS:From="Package\01 Extract Enom domain, contact, host"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{E9700C8E-4894-4C8D-933B-50F480222615}"
      DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Execute ITDP-TDP" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{ABF97A32-96B3-42B5-88DE-CBF6B563D903}"
      DTS:From="Package\Execute ITDP-TDP"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\dm_log - tdp_transfer_end"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{BA73BA3D-BA4B-4F73-AA79-5EF05385206F}"
      DTS:From="Package\Create partition in ITDP for tenant and tld"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\01 Extract Enom domain, contact, host" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{0C682614-F981-4887-95EA-F6F363297697}"
      DTS:EventID="10485920"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{3CF0A3DC-2D84-49DF-BB8C-866A890B4427}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Save errorlog"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{7258EA40-5822-43FE-AD01-09611D974847}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Save errorlog"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"INSERT INTO itdp.ssis_errorlog
(id, machinename, packagename, taskname, errorcode, errordescription, dated)
VALUES(gen_random_uuid(), '"+ @[System::MachineName]+" ', '"+ @[System::PackageName] +"', '"+ @[System::SourceName]  +"', "+(DT_WSTR,12) @[System::ErrorCode] +", '"+ REPLACE(@[System::ErrorDescription],"'","") +"', now())"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2C35A476-BAF5-4904-8F73-DD6C5CEED45E}"
              SQLTask:SqlStatementSource="INSERT INTO itdp.ssis_errorlog&#xA;(id, machinename, packagename, taskname, errorcode, errordescription, dated)&#xA;VALUES(gen_random_uuid(), 'CEN0VWSQLMGR01 ', 'OpenSRS_dm', '', 0, '', now())" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="128" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="245.6,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC"
          TopLeft="3.83333342439585,81.280699914359" />
        <NodeLayout
          Size="168.8,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Truncate Domainname"
          TopLeft="17.8636294853961,5.25039720246099" />
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain.PrecedenceConstraints[Constraint]"
          TopLeft="102.263629485396,46.850397202461">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="24.3697039389997,34.430302711898"
              Start="0,0"
              End="24.3697039389997,26.930302711898">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.215151355949" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.215151355949"
                    Point2="0,17.215151355949"
                    Point3="4,17.215151355949" />
                  <mssgle:LineSegment
                    End="20.3697039389997,17.215151355949" />
                  <mssgle:CubicBezierSegment
                    Point1="20.3697039389997,17.215151355949"
                    Point2="24.3697039389997,17.215151355949"
                    Point3="24.3697039389997,21.215151355949" />
                  <mssgle:LineSegment
                    End="24.3697039389997,26.930302711898" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="282.4,128"
          Size="282.4,171.2"
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain"
          TopLeft="68.8949617475174,61.499999276797" />
        <NodeLayout
          Size="200.8,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_"
          TopLeft="27.3749714177111,67.5263139939867" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Truncate NameServers"
          TopLeft="32.9999711662542,7.83891400828938" />
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers.PrecedenceConstraints[Constraint]"
          TopLeft="186.599971166254,29.0389140082894">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-58.8249997485431,38.4873999856973"
              Start="0,0"
              End="-58.8249997485431,30.9873999856973">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-54.8249997485431,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-54.8249997485431,0"
                    Point2="-58.8249997485431,0"
                    Point3="-58.8249997485431,4" />
                  <mssgle:LineSegment
                    End="-58.8249997485431,30.9873999856973" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="300.8,118.4"
          Size="300.8,161.6"
          Id="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers"
          TopLeft="53.2164231580898,277.633331440952" />
        <NodeLayout
          Size="150.4,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task"
          TopLeft="54.5444205708534,87.6888864822295" />
        <NodeLayout
          Size="168.8,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Truncate contact"
          TopLeft="31.099964075785,14.599998101592" />
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact.PrecedenceConstraints[Constraint]"
          TopLeft="115.499964075785,56.199998101592">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="14.2444564950684,31.4888883806375"
              Start="0,0"
              End="14.2444564950684,23.9888883806375">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.7444441903188" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.7444441903188"
                    Point2="0,15.7444441903188"
                    Point3="4,15.7444441903188" />
                  <mssgle:LineSegment
                    End="10.2444564950684,15.7444441903188" />
                  <mssgle:CubicBezierSegment
                    Point1="10.2444564950684,15.7444441903188"
                    Point2="14.2444564950684,15.7444441903188"
                    Point3="14.2444564950684,19.7444441903188" />
                  <mssgle:LineSegment
                    End="14.2444564950684,23.9888883806375" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="259.2,184"
          Size="259.2,227.2"
          Id="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact"
          TopLeft="455.355516732511,17.5333331224008" />
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\01 Extract Enom domain, contact, host\dm_log - dm_start"
          TopLeft="235.199983608723,6.93333690113633" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\01 Extract Enom domain, contact, host\Get max dm_log"
          TopLeft="15.2666622045966,7.66667009585473" />
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host.PrecedenceConstraints[Constraint]"
          TopLeft="206.855692452804,232.699999276797">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.933332164155"
              Start="0,0"
              End="0,37.433332164155">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.433332164155" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host.PrecedenceConstraints[Constraint 2]"
          TopLeft="169.666662204597,28.1000034984955">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="65.5333214041265,0"
              Start="0,0"
              End="58.0333214041265,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="58.0333214041265,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host.PrecedenceConstraints[Constraint 5]"
          TopLeft="351.294961747517,147.099999276797">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="104.060554984994,-15.9666661543962"
              Start="0,0"
              End="96.5605549849936,-15.9666661543962">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="48.0302774924968,0" />
                  <mssgle:CubicBezierSegment
                    Point1="48.0302774924968,0"
                    Point2="52.0302774924968,0"
                    Point3="52.0302774924968,-4" />
                  <mssgle:LineSegment
                    End="52.0302774924968,-11.9666661543962" />
                  <mssgle:CubicBezierSegment
                    Point1="52.0302774924968,-11.9666661543962"
                    Point2="52.0302774924968,-15.9666661543962"
                    Point3="56.0302774924968,-15.9666661543962" />
                  <mssgle:LineSegment
                    End="96.5605549849936,-15.9666661543962" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="796.8,494.4"
          Size="796.8,537.6"
          Id="Package\01 Extract Enom domain, contact, host"
          TopLeft="91.8666739516776,360.09999749591" />
        <NodeLayout
          Size="184,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Add host error for not migrated domains"
          TopLeft="269.033311842549,156.933330790069" />
        <NodeLayout
          Size="200,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Create itdp_domain_itemp"
          TopLeft="49.6833135706697,75.3333313686317" />
        <NodeLayout
          Size="187.2,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Mark domain with min_nameservers problem"
          TopLeft="78.9499817854014,280.933332308796" />
        <NodeLayout
          Size="134.4,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Populate itdp-domain"
          TopLeft="58.1499795998972,131.066665738556" />
        <NodeLayout
          Size="203.2,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domains with expdate null to domain_error"
          TopLeft="255.349976868019,8.99999875247499" />
        <NodeLayout
          Size="225.6,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host  for domains migrated without errors to itdp"
          TopLeft="19.9666355687722,208.066665141914" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host_addr"
          TopLeft="292.496950739382,278.327270491918" />
        <NodeLayout
          Size="196.8,46.4"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Truncate itdp_error_domain, error_host tables"
          TopLeft="28,8.96666664256009" />
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint]"
          TopLeft="224.8,30.9833326975175">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="30.5499768680185,0"
              Start="0,0"
              End="23.0499768680185,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="23.0499768680185,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 1]"
          TopLeft="132.766635568773,249.666665141914">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39.7833462166292,31.2666671668825"
              Start="0,0"
              End="39.7833462166292,23.7666671668825">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.6333335834412" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.6333335834412"
                    Point2="0,15.6333335834412"
                    Point3="4,15.6333335834412" />
                  <mssgle:LineSegment
                    End="35.7833462166292,15.6333335834412" />
                  <mssgle:CubicBezierSegment
                    Point1="35.7833462166292,15.6333335834412"
                    Point2="39.7833462166292,15.6333335834412"
                    Point3="39.7833462166292,19.6333335834412" />
                  <mssgle:LineSegment
                    End="39.7833462166292,23.7666671668825" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 10]"
          TopLeft="356.949976868019,50.599998752475">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-175.266663297349,24.7333326161567"
              Start="0,0"
              End="-175.266663297349,17.2333326161567">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.7222217953314" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.7222217953314"
                    Point2="0,14.7222217953314"
                    Point3="-4,14.7222217953314" />
                  <mssgle:LineSegment
                    End="-171.266663297349,14.7222217953314" />
                  <mssgle:CubicBezierSegment
                    Point1="-171.266663297349,14.7222217953314"
                    Point2="-175.266663297349,14.7222217953314"
                    Point3="-175.266663297349,18.7222217953314" />
                  <mssgle:LineSegment
                    End="-175.266663297349,17.2333326161567" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 11]"
          TopLeft="191.749979599898,157.466665738556">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="77.2833322426513,14.6666650515131"
              Start="0,0"
              End="69.7833322426513,14.6666650515131">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="34.6416661213257,0" />
                  <mssgle:CubicBezierSegment
                    Point1="34.6416661213257,0"
                    Point2="38.6416661213257,0"
                    Point3="38.6416661213257,4" />
                  <mssgle:LineSegment
                    End="38.6416661213257,10.6666650515131" />
                  <mssgle:CubicBezierSegment
                    Point1="38.6416661213257,10.6666650515131"
                    Point2="38.6416661213257,14.6666650515131"
                    Point3="42.6416661213257,14.6666650515131" />
                  <mssgle:LineSegment
                    End="69.7833322426513,14.6666650515131" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 2]"
          TopLeft="224.8,38.5666666425601">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-107.11668642933,36.7666647260716"
              Start="0,0"
              End="-107.11668642933,29.2666647260716">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-103.11668642933,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-103.11668642933,0"
                    Point2="-107.11668642933,0"
                    Point3="-107.11668642933,4" />
                  <mssgle:LineSegment
                    End="-107.11668642933,29.2666647260716" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 3]"
          TopLeft="269.033311842549,183.333330790069">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-23.4666762737764,45.5333343518445"
              Start="0,0"
              End="-15.9666762737764,45.5333343518445">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-5.90815220448335,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-5.90815220448335,0"
                    Point2="-9.90815220448335,0"
                    Point3="-9.90815220448335,4" />
                  <mssgle:LineSegment
                    End="-9.90815220448335,41.5333343518445" />
                  <mssgle:CubicBezierSegment
                    Point1="-9.90815220448335,41.5333343518445"
                    Point2="-9.90815220448335,45.5333343518445"
                    Point3="-13.9081522044834,45.5333343518445" />
                  <mssgle:LineSegment
                    End="-15.9666762737764,45.5333343518445" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 4]"
          TopLeft="266.149981785401,300.430301400357">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="26.3469689539809,0"
              Start="0,0"
              End="18.8469689539809,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.8469689539809,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 8]"
          TopLeft="149.68331357067,116.933331368632">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="42.8666660292275,29.3333343699243"
              Start="0,0"
              End="35.3666660292275,29.3333343699243">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.3333343699243" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.3333343699243"
                    Point2="0,29.3333343699243"
                    Point3="4,29.3333343699243" />
                  <mssgle:LineSegment
                    End="35.3666660292275,29.3333343699243" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="464,328"
          Size="464,371.2"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host"
          TopLeft="5.49999999999977,67.2964925811375" />
        <NodeLayout
          Size="188.8,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Add contact_error for not migrated domains"
          TopLeft="229.99996011456,15.3999991863966" />
        <NodeLayout
          Size="142.4,46.4"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Add contact_error for wrong email"
          TopLeft="229.233290124107,64.6666655939159" />
        <NodeLayout
          Size="142.4,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact\Create contact_itemp"
          TopLeft="9.03332973635884,5.5" />
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact\Populate contact_postal"
          TopLeft="15.4666444473808,136.199998752475" />
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact\Populate itdp_contact"
          TopLeft="18.7999775985888,66.7999996022386" />
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact.PrecedenceConstraints[Constraint]"
          TopLeft="151.433329736359,26.3">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-50.23335213777,40.4999996022386"
              Start="0,0"
              End="-50.23335213777,32.9999996022386">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-46.23335213777,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-46.23335213777,0"
                    Point2="-50.23335213777,0"
                    Point3="-50.23335213777,4" />
                  <mssgle:LineSegment
                    End="-50.23335213777,32.9999996022386" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact.PrecedenceConstraints[Constraint 1]"
          TopLeft="99.5333110229848,108.399999602239">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.7999991502364"
              Start="0,0"
              End="0,20.2999991502364">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2999991502364" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="200,183.2"
          Size="200,226.4"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact"
          TopLeft="9.06666520966405,90.6666658470358" />
        <NodeLayout
          Size="190.4,46.4"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Truncate  contact_error_records,contact_postal_error_records"
          TopLeft="5.91666182585959,8.09999998192006" />
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact.PrecedenceConstraints[Constraint]"
          TopLeft="196.31666182586,33.7499995841583">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="33.6832982887009,0"
              Start="0,0"
              End="26.1832982887009,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="26.1832982887009,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact.PrecedenceConstraints[Constraint 1]"
          TopLeft="229.233290124107,68.1666658470358">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-120.166624914443,22.5"
              Start="0,0"
              End="-120.166624914443,15">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-116.166624914443,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-116.166624914443,0"
                    Point2="-120.166624914443,0"
                    Point3="-120.166624914443,4" />
                  <mssgle:LineSegment
                    End="-120.166624914443,15" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact.PrecedenceConstraints[Constraint 3]"
          TopLeft="324.39996011456,56.9999991863966">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="47.2333300095468,30.8666664075193"
              Start="0,0"
              End="39.7333300095468,30.8666664075193">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.8666664075193" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.8666664075193"
                    Point2="0,30.8666664075193"
                    Point3="4,30.8666664075193" />
                  <mssgle:LineSegment
                    End="39.7333300095468,30.8666664075193" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="424,322.4"
          Size="424,365.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact"
          TopLeft="526.791667131293,17.3999993671971" />
        <NodeLayout
          Size="235.2,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\move contact records with bad domain to contact error"
          TopLeft="95.8666329734874,330.399996528626" />
        <NodeLayout
          Size="225.6,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move host with domain error to host error table"
          TopLeft="429.583301662158,162.252624630788" />
        <NodeLayout
          Size="326.4,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move to domain error table domains with contact error"
          TopLeft="78.0999796474983,77.1999984451136" />
        <NodeLayout
          Size="316.8,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move to domain error table domains without contact"
          TopLeft="96.9166531749079,14.5824518476606" />
        <NodeLayout
          Size="180.8,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Populate domain_lock"
          TopLeft="11.3749920640973,161.454383767574" />
        <NodeLayout
          Size="239.2,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Return ITDP_PKs to dm_enom_contact"
          TopLeft="375.216645335242,326.466665286554" />
        <NodeLayout
          Size="262.4,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Return ITDP_PKs to dm_enom_domainname"
          TopLeft="3.62499801835247,252.450873525996" />
        <NodeLayout
          Size="172.8,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Return ITDP_PKs to dm_enom_namesersvers"
          TopLeft="472.366625734007,239.799999222556" />
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint]"
          TopLeft="413.716653174908,35.3824518476606">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9.21667352740963,62.6175465974529"
              Start="0,0"
              End="-1.71667352740963,62.6175465974529">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="18.5,0"
                    Point2="22.5,0"
                    Point3="22.5,4" />
                  <mssgle:LineSegment
                    End="22.5,58.6175465974529" />
                  <mssgle:CubicBezierSegment
                    Point1="22.5,58.6175465974529"
                    Point2="22.5,62.6175465974529"
                    Point3="18.5,62.6175465974529" />
                  <mssgle:LineSegment
                    End="-1.71667352740963,62.6175465974529" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 1]"
          TopLeft="188.233312980832,118.799998445114">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-86.4583209167343,42.6543853224599"
              Start="0,0"
              End="-86.4583209167343,35.1543853224599">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.1865962323668" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.1865962323668"
                    Point2="0,17.1865962323668"
                    Point3="-4,17.1865962323668" />
                  <mssgle:LineSegment
                    End="-82.4583209167343,17.1865962323668" />
                  <mssgle:CubicBezierSegment
                    Point1="-82.4583209167343,17.1865962323668"
                    Point2="-86.4583209167343,17.1865962323668"
                    Point3="-86.4583209167343,21.1865962323668" />
                  <mssgle:LineSegment
                    End="-86.4583209167343,35.1543853224599" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 2]"
          TopLeft="101.774992064097,203.054383767574">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="33.0500059542552,49.396489758422"
              Start="0,0"
              End="33.0500059542552,41.896489758422">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.698244879211" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.698244879211"
                    Point2="0,24.698244879211"
                    Point3="4,24.698244879211" />
                  <mssgle:LineSegment
                    End="29.0500059542552,24.698244879211" />
                  <mssgle:CubicBezierSegment
                    Point1="29.0500059542552,24.698244879211"
                    Point2="33.0500059542552,24.698244879211"
                    Point3="33.0500059542552,28.698244879211" />
                  <mssgle:LineSegment
                    End="33.0500059542552,41.896489758422" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 3]"
          TopLeft="542.383301662158,203.852624630788">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="16.3833240718486,35.9473745917679"
              Start="0,0"
              End="16.3833240718486,28.4473745917679">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.973687295884" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.973687295884"
                    Point2="0,17.973687295884"
                    Point3="4,17.973687295884" />
                  <mssgle:LineSegment
                    End="12.3833240718486,17.973687295884" />
                  <mssgle:CubicBezierSegment
                    Point1="12.3833240718486,17.973687295884"
                    Point2="16.3833240718486,17.973687295884"
                    Point3="16.3833240718486,21.973687295884" />
                  <mssgle:LineSegment
                    End="16.3833240718486,28.4473745917679" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 4]"
          TopLeft="273.139979647498,118.799998445114">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-59.6733466740109,211.599998083512"
              Start="0,0"
              End="-59.6733466740109,204.099998083512">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,90.3637145174164" />
                  <mssgle:CubicBezierSegment
                    Point1="0,90.3637145174164"
                    Point2="0,94.3637145174164"
                    Point3="-4,94.3637145174164" />
                  <mssgle:LineSegment
                    End="-55.6733466740109,94.3637145174164" />
                  <mssgle:CubicBezierSegment
                    Point1="-55.6733466740109,94.3637145174164"
                    Point2="-59.6733466740109,94.3637145174164"
                    Point3="-59.6733466740109,98.3637145174164" />
                  <mssgle:LineSegment
                    End="-59.6733466740109,204.099998083512" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 5]"
          TopLeft="336.819979647498,118.799998445114">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="205.563322014659,43.4526261856741"
              Start="0,0"
              End="205.563322014659,35.9526261856741">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.73767212511446" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.73767212511446"
                    Point2="0,12.7376721251145"
                    Point3="4,12.7376721251145" />
                  <mssgle:LineSegment
                    End="201.563322014659,12.7376721251145" />
                  <mssgle:CubicBezierSegment
                    Point1="201.563322014659,12.7376721251145"
                    Point2="205.563322014659,12.7376721251145"
                    Point3="205.563322014659,16.7376721251145" />
                  <mssgle:LineSegment
                    End="205.563322014659,35.9526261856741" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 6]"
          TopLeft="331.066632973487,349.23333090759">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="44.1500123617542,0"
              Start="0,0"
              End="36.6500123617542,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="36.6500123617542,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="692,377.6"
          Size="692,420.8"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact"
          TopLeft="33.2361127485133,483.523974664514" />
        <NodeLayout
          Size="191.2,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\dm_log - extract_transfer_end"
          TopLeft="4.99999972681229,6.9333381305803" />
        <NodeLayout
          Size="201.6,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\dm_log - itdp_transfer_end"
          TopLeft="772.722180303052,716.377777357925" />
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD.PrecedenceConstraints[Constraint]"
          TopLeft="469.5,252.896492581137">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="57.2916671312931,-52.6964932139404"
              Start="0,0"
              End="49.7916671312931,-52.6964932139404">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="24.6458335656466,0" />
                  <mssgle:CubicBezierSegment
                    Point1="24.6458335656466,0"
                    Point2="28.6458335656466,0"
                    Point3="28.6458335656466,-4" />
                  <mssgle:LineSegment
                    End="28.6458335656466,-48.6964932139404" />
                  <mssgle:CubicBezierSegment
                    Point1="28.6458335656466,-48.6964932139404"
                    Point2="28.6458335656466,-52.6964932139404"
                    Point3="32.6458335656466,-52.6964932139404" />
                  <mssgle:LineSegment
                    End="49.7916671312931,-52.6964932139404" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD.PrecedenceConstraints[Constraint 1]"
          TopLeft="738.791667131293,382.999999367197">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-359.55555438278,100.523975297317"
              Start="0,0"
              End="-359.55555438278,93.023975297317">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.2619876486585" />
                  <mssgle:CubicBezierSegment
                    Point1="0,46.2619876486585"
                    Point2="0,50.2619876486585"
                    Point3="-4,50.2619876486585" />
                  <mssgle:LineSegment
                    End="-355.55555438278,50.2619876486585" />
                  <mssgle:CubicBezierSegment
                    Point1="-355.55555438278,50.2619876486585"
                    Point2="-359.55555438278,50.2619876486585"
                    Point3="-359.55555438278,54.2619876486585" />
                  <mssgle:LineSegment
                    End="-359.55555438278,93.023975297317" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD.PrecedenceConstraints[Constraint 2]"
          TopLeft="725.236112748513,693.923974664514">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="47.4860675545387,43.2538026934109"
              Start="0,0"
              End="39.9860675545387,43.2538026934109">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="19.7430337772694,0" />
                  <mssgle:CubicBezierSegment
                    Point1="19.7430337772694,0"
                    Point2="23.7430337772694,0"
                    Point3="23.7430337772694,4" />
                  <mssgle:LineSegment
                    End="23.7430337772694,39.2538026934109" />
                  <mssgle:CubicBezierSegment
                    Point1="23.7430337772694,39.2538026934109"
                    Point2="23.7430337772694,43.2538026934109"
                    Point3="27.7430337772694,43.2538026934109" />
                  <mssgle:LineSegment
                    End="39.9860675545387,43.2538026934109" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD.PrecedenceConstraints[Constraint 3]"
          TopLeft="196.199999726812,27.7333381305803">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="41.3000002731875,39.5631544505572"
              Start="0,0"
              End="41.3000002731875,32.0631544505572">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="37.3000002731875,0" />
                  <mssgle:CubicBezierSegment
                    Point1="37.3000002731875,0"
                    Point2="41.3000002731875,0"
                    Point3="41.3000002731875,4" />
                  <mssgle:LineSegment
                    End="41.3000002731875,32.0631544505572" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1007.2,959.2"
          Size="1007.2,1002.4"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD"
          TopLeft="121.541659916648,944.466663370081" />
        <NodeLayout
          Size="267.2,41.6"
          Id="Package\Create partition in ITDP for tenant and tld"
          TopLeft="300.899994946019,220.133331802554" />
        <NodeLayout
          Size="200,41.6"
          Id="Package\dm_log - tdp_transfer_end"
          TopLeft="1211.90469881136,1495.52380698399" />
        <NodeLayout
          Size="164,41.6"
          Id="Package\Execute ITDP-TDP"
          TopLeft="1235.79161723103,1380.60000007232" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="490.266673951678,897.69999749591">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="134.87498596497,46.7666658741712"
              Start="0,0"
              End="134.87498596497,39.2666658741712">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.3833329370856" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.3833329370856"
                    Point2="0,23.3833329370856"
                    Point3="4,23.3833329370856" />
                  <mssgle:LineSegment
                    End="130.87498596497,23.3833329370856" />
                  <mssgle:CubicBezierSegment
                    Point1="130.87498596497,23.3833329370856"
                    Point2="134.87498596497,23.3833329370856"
                    Point3="134.87498596497,27.3833329370856" />
                  <mssgle:LineSegment
                    End="134.87498596497,39.2666658741712" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="1128.74165991665,1445.66666337008">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="107.049957314382,-44.2666632977612"
              Start="0,0"
              End="99.5499573143818,-44.2666632977612">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="49.5249786571909,0" />
                  <mssgle:CubicBezierSegment
                    Point1="49.5249786571909,0"
                    Point2="53.5249786571909,0"
                    Point3="53.5249786571909,-4" />
                  <mssgle:LineSegment
                    End="53.5249786571909,-40.2666632977612" />
                  <mssgle:CubicBezierSegment
                    Point1="53.5249786571909,-40.2666632977612"
                    Point2="53.5249786571909,-44.2666632977612"
                    Point3="57.5249786571909,-44.2666632977612" />
                  <mssgle:LineSegment
                    End="99.5499573143818,-44.2666632977612" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="1314.84815802119,1422.20000007232">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,73.3238069116699"
              Start="0,0"
              End="0,65.8238069116699">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,65.8238069116699" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.304453125,27.107215955835,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="434.499994946019,261.733331802554">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="55.7666790056586,98.3666656933559"
              Start="0,0"
              End="55.7666790056586,90.8666656933559">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.183332846678" />
                  <mssgle:CubicBezierSegment
                    Point1="0,45.183332846678"
                    Point2="0,49.183332846678"
                    Point3="4,49.183332846678" />
                  <mssgle:LineSegment
                    End="51.7666790056586,49.183332846678" />
                  <mssgle:CubicBezierSegment
                    Point1="51.7666790056586,49.183332846678"
                    Point2="55.7666790056586,49.183332846678"
                    Point3="55.7666790056586,53.183332846678" />
                  <mssgle:LineSegment
                    End="55.7666790056586,90.8666656933559" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="168,42.4"
          Id="Package.EventHandlers[OnError]\Save errorlog"
          TopLeft="546.99998369813,212.999993652106" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="160,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source"
          TopLeft="231.666654008959,34.6666664255991" />
        <NodeLayout
          Size="232,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_"
          TopLeft="269.374985375132,160.196489340046" />
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC.Paths[ADO NET Source Output]"
          TopLeft="311.666654008959,76.2666664255991">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="73.708331366173,83.9298229144469"
              Start="0,0"
              End="73.708331366173,76.4298229144469">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.9649114572235" />
                  <mssgle:CubicBezierSegment
                    Point1="0,37.9649114572235"
                    Point2="0,41.9649114572235"
                    Point3="4,41.9649114572235" />
                  <mssgle:LineSegment
                    End="69.708331366173,41.9649114572235" />
                  <mssgle:CubicBezierSegment
                    Point1="69.708331366173,41.9649114572235"
                    Point2="73.708331366173,41.9649114572235"
                    Point3="73.708331366173,45.9649114572235" />
                  <mssgle:LineSegment
                    End="73.708331366173,76.4298229144469" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ADO NET Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract Domains to Domains_ODBC\ODBC Destination DimainName_">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="160,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source"
          TopLeft="282.499984564881,58.9333329235183" />
        <NodeLayout
          Size="228,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers"
          TopLeft="199.999994039536,203.999993920326" />
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_.Paths[ADO NET Source Output]"
          TopLeft="362.499984564881,100.533332923518">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-48.4999905253452,103.466660996808"
              Start="0,0"
              End="-48.4999905253452,95.9666609968077">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.7333304984038" />
                  <mssgle:CubicBezierSegment
                    Point1="0,47.7333304984038"
                    Point2="0,51.7333304984038"
                    Point3="-4,51.7333304984038" />
                  <mssgle:LineSegment
                    End="-44.4999905253452,51.7333304984038" />
                  <mssgle:CubicBezierSegment
                    Point1="-44.4999905253452,51.7333304984038"
                    Point2="-48.4999905253452,51.7333304984038"
                    Point3="-48.4999905253452,55.7333304984038" />
                  <mssgle:LineSegment
                    End="-48.4999905253452,95.9666609968077" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="160,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source"
          TopLeft="279.999995827675,77.9999988377094" />
        <NodeLayout
          Size="163.2,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination"
          TopLeft="242.999996379018,295.999995589257" />
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task.Paths[ADO NET Source Output]"
          TopLeft="359.999995827675,119.599998837709">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-35.399999448657,176.399996751548"
              Start="0,0"
              End="-35.399999448657,168.899996751548">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,84.1999983757738" />
                  <mssgle:CubicBezierSegment
                    Point1="0,84.1999983757738"
                    Point2="0,88.1999983757738"
                    Point3="-4,88.1999983757738" />
                  <mssgle:LineSegment
                    End="-31.399999448657,88.1999983757738" />
                  <mssgle:CubicBezierSegment
                    Point1="-31.399999448657,88.1999983757738"
                    Point2="-35.399999448657,88.1999983757738"
                    Point3="-35.399999448657,92.1999983757738" />
                  <mssgle:LineSegment
                    End="-35.399999448657,168.899996751548" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ADO NET Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Data Flow Task\ODBC Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>