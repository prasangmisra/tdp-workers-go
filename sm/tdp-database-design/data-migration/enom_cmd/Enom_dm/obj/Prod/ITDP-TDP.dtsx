<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/15/2024 5:48:09 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-UHHLA3LI"
  DTS:CreatorName="TUCOWSAD\nludina"
  DTS:DTSID="{D7FF79D7-E4CB-474C-A133-1888CB470DDE}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:ForceExecutionResult="2"
  DTS:LastModifiedProductVersion="16.0.5556.0"
  DTS:LocaleID="1033"
  DTS:MaxConcurrentExecutables="10"
  DTS:ObjectName="ITDP-TDP"
  DTS:PackageType="5"
  DTS:VersionBuild="2616"
  DTS:VersionGUID="{F7D0D3AC-550C-4CBD-B38B-E5B9756511AA}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Enom_dm_log.xml]"
      DTS:CreationName="FILE"
      DTS:DTSID="{563C4A9E-E4C0-40F2-8330-7F086D21C27A}"
      DTS:ObjectName="Enom_dm_log.xml">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::log_xml_file_path]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="C:\tdp-database-design\data-migration\enom_cmd\Enom_dm\log\enom_dm_log.xml" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[tdpdb]"
      DTS:CreationName="ODBC"
      DTS:DTSID="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
      DTS:ObjectName="tdpdb">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::Tdpdb_ConnectionString]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Package::Tdpdb_Password]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="uid=migration_user;Dsn=PostgreSQL_Tdp_prod;">
          <DTS:Password
            DTS:Name="Pwd"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAVkmsD9Ji4UCbEVvvtX3EWAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAADeh9eVMhEf7quMvT4YwXn5AAAAAASAAACgAAAAEAAAAJUSf9bYpnn95EyHXiMlJwMwAAAA4xTyrIBVv1lnO/tQXl+zHF+yVGtyBh4HZpDOo7ZAmU5rXUAqdcMCHvHX5r9SHAVqFAAAAJQinCJwmKMh76CXePwRs82K/nmo</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[tdpdb_ADO.NET]"
      DTS:CreationName="ADO.NET:System.Data.Odbc.OdbcConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{6E4BD3D4-2D82-4979-BE6A-D1F3644518A1}"
      DTS:ObjectName="tdpdb_ADO.NET">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::Tdpdb_ConnectionString]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Package::Tdpdb_Password]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="uid=migration_user;Dsn=PostgreSQL_Tdp_prod;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAVkmsD9Ji4UCbEVvvtX3EWAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAACJZg+QUiQu8WZObSIOuGVPAAAAAASAAACgAAAAEAAAAHdR99oUsHbZjs8D2yVtzNYwAAAAoV3gKeHS0Mvojvl0FRMHF5pV4XsHG3IyF3x2zcB1/ZCCrGVbasENCEf/Qaep8hwAFAAAAL1y7T6JH/ttMulxeSLiHG09IVBl</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Configurations>
    <DTS:Configuration
      DTS:ConfigurationString="C:\tdp-database-design\data-migration\enom_cmd\Enom_dm\Enom_dm_dev.dtsConfig"
      DTS:ConfigurationType="1"
      DTS:CreationName=""
      DTS:DTSID="{BFC303A8-8EC0-416D-91DD-F24016AF6A3B}"
      DTS:ObjectName="Dev" />
    <DTS:Configuration
      DTS:ConfigurationString="C:\tdp-database-design\data-migration\enom_cmd\Enom_dm\Enom_dm_local.dtsConfig"
      DTS:ConfigurationType="1"
      DTS:CreationName=""
      DTS:DTSID="{BDDDEB21-7AFA-42BE-8BB8-20AB5F3629C1}"
      DTS:ObjectName="local" />
  </DTS:Configurations>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="Enom_dm_log.xml"
      DTS:CreationName="Microsoft.LogProviderXMLFile"
      DTS:Description="Writes log entries for events to an XML file"
      DTS:DTSID="{5E8BB0C3-AD1B-4364-8A57-57BD0F63F7FD}"
      DTS:ObjectName="SSIS log provider for XML files1">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{51FA1142-4F6A-404F-8A3E-EC0237FC475B}"
      DTS:ObjectName="log_xml_file_path">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\tdp-database-design\data-migration\enom_cmd\Enom_dm\log\enom_dm_log.xml</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{8DBFDD36-1AA8-4CAA-938E-87AEFA8E7EC6}"
      DTS:ObjectName="Migration_phase">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">1.3</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{951CE67E-5967-45E2-BB3C-9B244440B02B}"
      DTS:ObjectName="Tdpdb_ConnectionString">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Dsn=PostgreSQL_Tdp_prod;uid=migration_user</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{6A529046-AB30-4F5C-B2C8-2F7047E85979}"
      DTS:ObjectName="Tdpdb_Password"
      DTS:Sensitive="True">
      <DTS:Property
        DTS:Name="ParameterValue">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="ParameterValue"
          Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAVkmsD9Ji4UCbEVvvtX3EWAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAADQigHqDOUsesB3Ol8SBih3AAAAAASAAACgAAAAEAAAADqqH3DtOlzAfuy7ULYW64EwAAAATC7qBQJrZ73mHGRQnFLOeVTN5Iqtt6pEe6aO2PwJUcAUMgToP40AA0DnEEoI1JoZFAAAAAHE3b+tr4ykt3extzUMWHIbgUdh</DTS:Property>
      </DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{34F44D81-DFCA-4646-A419-DE19977561ED}"
      DTS:ObjectName="Tenant">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">opensrs</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{C85BC583-FFF5-41E4-B2A3-256489B7D0AF}"
      DTS:ObjectName="TLD">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">in</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B88ABFC0-6A61-4CAD-AB4E-059733AD29EE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="dm_log_id">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FDAEC49D-5674-43E0-8397-99BCDECD1B19}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="list_big_tlds">
      <DTS:VariableValue
        DTS:DataType="8">com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{72269313-CACF-40DC-BD01-97115DEADAD2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="list_middle_and_big_tlds">
      <DTS:VariableValue
        DTS:DataType="8">com' ,'net</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C3BC5263-0CCA-4EF2-8F71-B019DACA96BB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="max_dm_log_query">
      <DTS:VariableValue
        DTS:DataType="8">SELECT COALESCE(MAX(ID)+1,1)::int as max_id from itdp.dm_log;</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">4,7,OnError,13,OnInformation,10,OnProgress,12,OnTaskFailed</DTS:Property>
    <DTS:Property
      DTS:EventName="Diagnostic"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="DiagnosticEx"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">0</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">0</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnExecStatusChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnInformation"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">0</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">0</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostComponentCall"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostPrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePreComponentCall"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePreEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePrePrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelineRowsSent"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPostExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPostValidate"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPreExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPreValidate"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnProgress"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">0</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">0</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnQueryCancel"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnTaskFailed"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">0</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">0</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnVariableValueChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{5E8BB0C3-AD1B-4364-8A57-57BD0F63F7FD}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{B861E711-1364-4130-94A4-7722A4C72215}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:ISOLevel="4096"
      DTS:LocaleID="-1"
      DTS:ObjectName="03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{4C1E472A-33BB-451A-ADEC-ABA7586B6914}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:ISOLevel="4096"
          DTS:LocaleID="-1"
          DTS:ObjectName="03_1 Domain">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Create itdp_temp_domain_lock"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{2B51BCAD-837F-48A4-92F9-411D26E547D1}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create itdp_temp_domain_lock"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"DROP TABLE IF EXISTS itdp.domain_lock_temp;         
CREATE unlogged TABLE itdp.domain_lock_temp  AS 
(SELECT  dl.domain_id, plt.id as type_id, dl.is_internal 	    
	    FROM itdp.domain_lock  dl   
        JOIN  public.domain  d ON d.id = dl.domain_id           
        JOIN  itdp.domain  id ON id.id = dl.domain_id  AND (id.dm_status).domain IS NULL
			AND id.tld='"+ @[$Package::TLD] +"' AND id.dm_source='"+ @[$Package::Tenant] +"'    
   		JOIN itdp.lock_type ilt ON ilt.id=dl.type_id
        JOIN public.lock_type plt ON plt.name= ilt.name
		LEFT JOIN public.domain_lock tdl ON tdl.domain_id = dl.domain_id AND tdl.type_id = plt.id
        WHERE  tdl.domain_id IS NULL
	AND dl.TLD = '"+ @[$Package::TLD] +"'  AND dl.dm_source='"+ @[$Package::Tenant] +"');"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="DROP TABLE IF EXISTS itdp.domain_lock_temp;         &#xA;CREATE unlogged TABLE itdp.domain_lock_temp  AS &#xA;(SELECT  dl.domain_id, plt.id as type_id, dl.is_internal &#x9;    &#xA;&#x9;    FROM itdp.domain_lock  dl   &#xA;        JOIN  public.domain  d ON d.id = dl.domain_id           &#xA;        JOIN  itdp.domain  id ON id.id = dl.domain_id  AND (id.dm_status).domain IS NULL&#xA;&#x9;&#x9;&#x9;AND id.tld='in' AND id.dm_source='opensrs'    &#xA;   &#x9;&#x9;JOIN itdp.lock_type ilt ON ilt.id=dl.type_id&#xA;        JOIN public.lock_type plt ON plt.name= ilt.name&#xA;&#x9;&#x9;LEFT JOIN public.domain_lock tdl ON tdl.domain_id = dl.domain_id AND tdl.type_id = plt.id&#xA;        WHERE  tdl.domain_id IS NULL&#xA;&#x9;AND dl.TLD = 'in'  AND dl.dm_source='opensrs');" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Populate domain _RGP_status table"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{6ABE81E8-A729-48C7-A565-8F09C0BC0FD5}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Populate domain _RGP_status table"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
--ALTER TABLE public.domain_rgp_status DISABLE TRIGGER  domain_rgp_status_set_expiration_tg;
   -- add_grace_period
        INSERT INTO public.domain_rgp_status (domain_id, status_id,created_date,expiry_date ) 
	    SELECT  d.id, public.tc_id_from_name('public.rgp_status','add_grace_period'),id.ry_created_date, id.ry_created_date + (INTERVAL '1 hour' *attr.value::integer )
       -- ,(EXTRACT(EPOCH FROM (now()-id.ry_created_date))/3600),attr.value::integer 
        FROM  public.domain  d           
        JOIN  itdp.domain  id ON id.id = d.id  AND (id.dm_status).domain IS null  AND 
			id.tld = '"+ @[$Package::TLD] +"' AND id.dm_source='"+ @[$Package::Tenant] +"'
		LEFT JOIN public.domain_rgp_status drs ON drs.domain_id = d.id AND drs.status_id = public.tc_id_from_name('public.rgp_status','add_grace_period')
        LEFT JOIN (SELECT max(value)::integer AS value FROM public.v_attribute 
					 WHERE  tld_name='"+ @[$Package::TLD] +"'  AND  tenant_name='"+ @[$Package::Tenant] +"' AND    key='tld.lifecycle.add_grace_period') attr ON true
		WHERE  drs.domain_id IS NULL         
       		AND id.ry_created_date IS NOT NULL AND (EXTRACT(EPOCH FROM (now()-id.ry_created_date))/3600) &lt;  attr.value::integer  
			 AND public.tc_name_from_id('itdp.domain_status',id.status_id)  IN ('Active'); -- for only active

 --rgp-- 	
	    INSERT INTO public.domain_rgp_status (domain_id, status_id,created_date,expiry_date ) 
	    SELECT  d.id, public.tc_id_from_name('public.rgp_status','redemption_grace_period'),id.deleted_date, id.deleted_date + (INTERVAL '1 hour' *attr.value::integer )
        FROM  public.domain  d           
        JOIN  itdp.domain  id ON id.id = d.id  AND (id.dm_status).domain IS null AND 
			id.tld = '"+ @[$Package::TLD] +"' AND id.dm_source='"+ @[$Package::Tenant] +"'
		LEFT JOIN public.domain_rgp_status drs ON drs.domain_id = d.id AND drs.status_id = public.tc_id_from_name('public.rgp_status','redemption_grace_period')
        LEFT JOIN (SELECT max(value)::integer AS value FROM public.v_attribute 
					 WHERE  tld_name='"+ @[$Package::TLD] +"'  AND  tenant_name='"+ @[$Package::Tenant] +"' AND    key='tld.lifecycle.redemption_grace_period') attr ON true
		WHERE  drs.domain_id IS NULL         
       		AND id.deleted_date IS NOT NULL 
       		--AND (EXTRACT(EPOCH FROM (now()-id.deleted_date))/3600) &lt;  attr.value::integer  
			  	AND public.tc_name_from_id('itdp.domain_status',id.status_id)  IN ('RGP');   --- only RGP

 --transfer_grace_period
        INSERT INTO public.domain_rgp_status (domain_id, status_id,created_date,expiry_date ) 
	    SELECT  d.id, public.tc_id_from_name('public.rgp_status','transfer_grace_period'),id.ry_transfered_date, id.ry_transfered_date + (INTERVAL '1 hour' *attr.value::integer )
        FROM  public.domain  d           
        JOIN  itdp.domain  id ON id.id = d.id  AND (id.dm_status).domain IS null AND 
			id.tld = '"+ @[$Package::TLD] +"' AND id.dm_source='"+ @[$Package::Tenant] +"'
		LEFT JOIN public.domain_rgp_status drs ON drs.domain_id = d.id AND drs.status_id = public.tc_id_from_name('public.rgp_status','transfer_grace_period')
        LEFT JOIN (SELECT max(value)::integer AS value FROM public.v_attribute 
					 WHERE  tld_name='"+ @[$Package::TLD] +"'  AND  tenant_name='"+ @[$Package::Tenant] +"' AND    key='tld.lifecycle.transfer_grace_period') attr ON true
		WHERE  drs.domain_id IS NULL         
       		AND id.ry_transfered_date IS NOT NULL AND (EXTRACT(EPOCH FROM (now()-id.ry_transfered_date))/3600) &lt;  attr.value::integer  
			 	AND public.tc_name_from_id('itdp.domain_status',id.status_id)  IN ('Active'); -- for only active	
 --ALTER TABLE public.domain_rgp_status ENABLE TRIGGER  domain_rgp_status_set_expiration_tg;         
COMMIT ;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;--ALTER TABLE public.domain_rgp_status DISABLE TRIGGER  domain_rgp_status_set_expiration_tg;&#xA;   -- add_grace_period&#xA;        INSERT INTO public.domain_rgp_status (domain_id, status_id,created_date,expiry_date ) &#xA;&#x9;    SELECT  d.id, public.tc_id_from_name('public.rgp_status','add_grace_period'),id.ry_created_date, id.ry_created_date + (INTERVAL '1 hour' *attr.value::integer )&#xA;       -- ,(EXTRACT(EPOCH FROM (now()-id.ry_created_date))/3600),attr.value::integer &#xA;        FROM  public.domain  d           &#xA;        JOIN  itdp.domain  id ON id.id = d.id  AND (id.dm_status).domain IS null  AND &#xA;&#x9;&#x9;&#x9;id.tld = 'in' AND id.dm_source='opensrs'&#xA;&#x9;&#x9;LEFT JOIN public.domain_rgp_status drs ON drs.domain_id = d.id AND drs.status_id = public.tc_id_from_name('public.rgp_status','add_grace_period')&#xA;        LEFT JOIN (SELECT max(value)::integer AS value FROM public.v_attribute &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE  tld_name='in'  AND  tenant_name='opensrs' AND    key='tld.lifecycle.add_grace_period') attr ON true&#xA;&#x9;&#x9;WHERE  drs.domain_id IS NULL         &#xA;       &#x9;&#x9;AND id.ry_created_date IS NOT NULL AND (EXTRACT(EPOCH FROM (now()-id.ry_created_date))/3600) &lt;  attr.value::integer  &#xA;&#x9;&#x9;&#x9; AND public.tc_name_from_id('itdp.domain_status',id.status_id)  IN ('Active'); -- for only active&#xA;&#xA; --rgp-- &#x9;&#xA;&#x9;    INSERT INTO public.domain_rgp_status (domain_id, status_id,created_date,expiry_date ) &#xA;&#x9;    SELECT  d.id, public.tc_id_from_name('public.rgp_status','redemption_grace_period'),id.deleted_date, id.deleted_date + (INTERVAL '1 hour' *attr.value::integer )&#xA;        FROM  public.domain  d           &#xA;        JOIN  itdp.domain  id ON id.id = d.id  AND (id.dm_status).domain IS null AND &#xA;&#x9;&#x9;&#x9;id.tld = 'in' AND id.dm_source='opensrs'&#xA;&#x9;&#x9;LEFT JOIN public.domain_rgp_status drs ON drs.domain_id = d.id AND drs.status_id = public.tc_id_from_name('public.rgp_status','redemption_grace_period')&#xA;        LEFT JOIN (SELECT max(value)::integer AS value FROM public.v_attribute &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE  tld_name='in'  AND  tenant_name='opensrs' AND    key='tld.lifecycle.redemption_grace_period') attr ON true&#xA;&#x9;&#x9;WHERE  drs.domain_id IS NULL         &#xA;       &#x9;&#x9;AND id.deleted_date IS NOT NULL &#xA;       &#x9;&#x9;--AND (EXTRACT(EPOCH FROM (now()-id.deleted_date))/3600) &lt;  attr.value::integer  &#xA;&#x9;&#x9;&#x9;  &#x9;AND public.tc_name_from_id('itdp.domain_status',id.status_id)  IN ('RGP');   --- only RGP&#xA;&#xA; --transfer_grace_period&#xA;        INSERT INTO public.domain_rgp_status (domain_id, status_id,created_date,expiry_date ) &#xA;&#x9;    SELECT  d.id, public.tc_id_from_name('public.rgp_status','transfer_grace_period'),id.ry_transfered_date, id.ry_transfered_date + (INTERVAL '1 hour' *attr.value::integer )&#xA;        FROM  public.domain  d           &#xA;        JOIN  itdp.domain  id ON id.id = d.id  AND (id.dm_status).domain IS null AND &#xA;&#x9;&#x9;&#x9;id.tld = 'in' AND id.dm_source='opensrs'&#xA;&#x9;&#x9;LEFT JOIN public.domain_rgp_status drs ON drs.domain_id = d.id AND drs.status_id = public.tc_id_from_name('public.rgp_status','transfer_grace_period')&#xA;        LEFT JOIN (SELECT max(value)::integer AS value FROM public.v_attribute &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE  tld_name='in'  AND  tenant_name='opensrs' AND    key='tld.lifecycle.transfer_grace_period') attr ON true&#xA;&#x9;&#x9;WHERE  drs.domain_id IS NULL         &#xA;       &#x9;&#x9;AND id.ry_transfered_date IS NOT NULL AND (EXTRACT(EPOCH FROM (now()-id.ry_transfered_date))/3600) &lt;  attr.value::integer  &#xA;&#x9;&#x9;&#x9; &#x9;AND public.tc_name_from_id('itdp.domain_status',id.status_id)  IN ('Active'); -- for only active&#x9;&#xA; --ALTER TABLE public.domain_rgp_status ENABLE TRIGGER  domain_rgp_status_set_expiration_tg;         &#xA;COMMIT ;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\populate domain_lock table"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{288C3261-C3CA-4F95-929F-AE9C1340D887}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="populate domain_lock table"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"DO $$
	DECLARE    _sql text; 
BEGIN

SET work_mem TO '1900MB'  ;  
IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	DROP TABLE IF EXISTS itdp.temp_list_constraints;
	DROP TABLE IF EXISTS itdp.temp_list_index;
	--save list of CONSTRAINTS 
	CREATE TABLE itdp.temp_list_constraints
		AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname
		FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            
		WHERE conrelid =(SELECT 'public.domain_lock'::regclass::OID) );
	--save list of indexes		
	CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'public' AND TABLEname='domain_lock');
		
	--DROP constraints
	SELECT string_agg('ALTER TABLE public.domain_lock DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint	
	 	WHERE conrelid =(SELECT 'public.domain_lock'::regclass::OID) INTO _sql;
	IF _sql IS NOT NULL THEN                  
        EXECUTE _sql;
    END IF;
   
   -- drop  indexes --   
    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')
		   FROM   pg_index  i   
		   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'
		   WHERE  i.indrelid = 'public.domain_lock'::regclass AND    d.objid IS NULL   INTO _sql;
	IF _sql IS NOT NULL THEN                  
    	    EXECUTE _sql;
    END IF;
	 
END IF;

INSERT INTO public.domain_lock (domain_id, type_id, is_internal) 
        SELECT  domain_id, type_id, is_internal 	    
	    FROM itdp.domain_lock_temp;

IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	-- recreate constraints	 
     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt; 0 THEN 
		 EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);
	 END IF;	
	--recreate indexes
	IF (SELECT count(*) FROM itdp.temp_list_index) &gt; 0 THEN 
		EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);
	END IF;
END IF;

ANALYSE public.domain_lock; 
COMMIT ;
END $$"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="DO $$&#xA;&#x9;DECLARE    _sql text; &#xA;BEGIN&#xA;&#xA;SET work_mem TO '1900MB'  ;  &#xA;IF  'in' in ('com' ,'net') THEN&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_constraints;&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_index;&#xA;&#x9;--save list of CONSTRAINTS &#xA;&#x9;CREATE TABLE itdp.temp_list_constraints&#xA;&#x9;&#x9;AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname&#xA;&#x9;&#x9;FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            &#xA;&#x9;&#x9;WHERE conrelid =(SELECT 'public.domain_lock'::regclass::OID) );&#xA;&#x9;--save list of indexes&#x9;&#x9;&#xA;&#x9;CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'public' AND TABLEname='domain_lock');&#xA;&#x9;&#x9;&#xA;&#x9;--DROP constraints&#xA;&#x9;SELECT string_agg('ALTER TABLE public.domain_lock DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint&#x9;&#xA;&#x9; &#x9;WHERE conrelid =(SELECT 'public.domain_lock'::regclass::OID) INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;        EXECUTE _sql;&#xA;    END IF;&#xA;   &#xA;   -- drop  indexes --   &#xA;    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')&#xA;&#x9;&#x9;   FROM   pg_index  i   &#xA;&#x9;&#x9;   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'&#xA;&#x9;&#x9;   WHERE  i.indrelid = 'public.domain_lock'::regclass AND    d.objid IS NULL   INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;    &#x9;    EXECUTE _sql;&#xA;    END IF;&#xA;&#x9; &#xA;END IF;&#xA;&#xA;INSERT INTO public.domain_lock (domain_id, type_id, is_internal) &#xA;        SELECT  domain_id, type_id, is_internal &#x9;    &#xA;&#x9;    FROM itdp.domain_lock_temp;&#xA;&#xA;IF  'in' in ('com' ,'net') THEN&#xA;&#x9;-- recreate constraints&#x9; &#xA;     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt; 0 THEN &#xA;&#x9;&#x9; EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);&#xA;&#x9; END IF;&#x9;&#xA;&#x9;--recreate indexes&#xA;&#x9;IF (SELECT count(*) FROM itdp.temp_list_index) &gt; 0 THEN &#xA;&#x9;&#x9;EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);&#xA;&#x9;END IF;&#xA;END IF;&#xA;&#xA;ANALYSE public.domain_lock; &#xA;COMMIT ;&#xA;END $$" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Transfer domains, create import order"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Transfer domains and hosts"
              DTS:DTSID="{26942968-3CF7-4798-9733-0077206CFD67}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Transfer domains, create import order"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
--ALTER TABLE public.domain DISABLE  TRIGGER zz_60_trail_domain;
--ALTER TABLE public.order_item_import_domain DISABLE  TRIGGER zz_60_trail_order_item_import_domain;
--ALTER TABLE public.order DISABLE TRIGGER  zz_60_trail_order;
--ALTER TABLE public.order DISABLE TRIGGER  order_set_metadata_tg;


WITH cte AS 
(	SELECT   d.id,t.tenant_customer_id,t.accreditation_tld_id, d.name,d.auth_info, d.roid, d.ry_created_date, d.ry_expiry_date, 
		d.ry_updated_date,d.ry_transfered_date, d.deleted_date, d.expiry_date, d.auto_renew, d.uname,
 gen_random_uuid() AS order_id, ot.id AS type_id,d.registration_period, d.tdp_min_namesrvers_issue
	FROM itdp.domain  d
	LEFT JOIN itdp.tld t ON t.tld_name=d.tld   AND t.dm_source = d.dm_source	
	LEFT JOIN public.DOMAIN pd ON pd.id=d.id
    LEFT JOIN public.DOMAIN pd1 ON pd1.name=d.name
	JOIN  public.order_type  ot ON  product_id=public.tc_id_from_name('public.product', 'domain') AND ot.name='import'
	WHERE  pd.id IS NULL AND 		(dm_status).domain  IS NULL AND 
		d.tld = '"+ @[$Package::TLD] +"' AND d.dm_source='"+ @[$Package::Tenant] +"'
        and pd1.name is   null
),
-- domain
cte_d AS
(	INSERT INTO public.domain
		(id, tenant_customer_id, accreditation_tld_id, name, auth_info, roid, ry_created_date, ry_expiry_date,
	 ry_updated_date, ry_transfered_date, deleted_date, expiry_date,  uname, migration_info)
	SELECT  id,tenant_customer_id,accreditation_tld_id,name,auth_info, roid, ry_created_date, ry_expiry_date, ry_updated_date,ry_transfered_date,
		deleted_date, expiry_date, uname, "+ @[$Project::jsonb_domain_issue] +"
	FROM cte
),
--order
cte_o AS
(	INSERT INTO public.order
		( id, tenant_customer_id, type_id, customer_user_id, status_id)
	SELECT order_id,tenant_customer_id, type_id,NULL,public.tc_id_from_name('public.order_status', 'successful') AS status_id 
	FROM cte
)
-- order_item
INSERT INTO public.order_item_import_domain
	(id, order_id, status_id, name, registration_period, accreditation_tld_id,  auth_info, roid, 
	ry_created_date, ry_expiry_date, ry_transfered_date, deleted_date, expiry_date, domain_id)
SELECT id,order_id,  tc_id_from_name('order_item_status'::text, 'complete'::text) AS  status_id, name,registration_period,accreditation_tld_id,  auth_info, roid, 
	ry_created_date, ry_expiry_date, ry_transfered_date, deleted_date, expiry_date,id
FROM cte;
--ALTER TABLE public.domain ENABLE TRIGGER zz_60_trail_domain; 
--ALTER TABLE public.order_item_import_domain ENABLE  TRIGGER zz_60_trail_order_item_import_domain;
--ALTER TABLE public.order ENABLE TRIGGER  zz_60_trail_order;
--ALTER TABLE public.order ENABLE TRIGGER  order_set_metadata_tg;

ANALYSE public.domain;
ANALYSE public.order;
ANALYSE public.order_item_import_domain;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;--ALTER TABLE public.domain DISABLE  TRIGGER zz_60_trail_domain;&#xA;--ALTER TABLE public.order_item_import_domain DISABLE  TRIGGER zz_60_trail_order_item_import_domain;&#xA;--ALTER TABLE public.order DISABLE TRIGGER  zz_60_trail_order;&#xA;--ALTER TABLE public.order DISABLE TRIGGER  order_set_metadata_tg;&#xA;&#xA;&#xA;WITH cte AS &#xA;(&#x9;SELECT   d.id,t.tenant_customer_id,t.accreditation_tld_id, d.name,d.auth_info, d.roid, d.ry_created_date, d.ry_expiry_date, &#xA;&#x9;&#x9;d.ry_updated_date,d.ry_transfered_date, d.deleted_date, d.expiry_date, d.auto_renew, d.uname,&#xA; gen_random_uuid() AS order_id, ot.id AS type_id,d.registration_period, d.tdp_min_namesrvers_issue&#xA;&#x9;FROM itdp.domain  d&#xA;&#x9;LEFT JOIN itdp.tld t ON t.tld_name=d.tld   AND t.dm_source = d.dm_source&#x9;&#xA;&#x9;LEFT JOIN public.DOMAIN pd ON pd.id=d.id&#xA;    LEFT JOIN public.DOMAIN pd1 ON pd1.name=d.name&#xA;&#x9;JOIN  public.order_type  ot ON  product_id=public.tc_id_from_name('public.product', 'domain') AND ot.name='import'&#xA;&#x9;WHERE  pd.id IS NULL AND &#x9;&#x9;(dm_status).domain  IS NULL AND &#xA;&#x9;&#x9;d.tld = 'in' AND d.dm_source='opensrs'&#xA;        and pd1.name is   null&#xA;),&#xA;-- domain&#xA;cte_d AS&#xA;(&#x9;INSERT INTO public.domain&#xA;&#x9;&#x9;(id, tenant_customer_id, accreditation_tld_id, name, auth_info, roid, ry_created_date, ry_expiry_date,&#xA;&#x9; ry_updated_date, ry_transfered_date, deleted_date, expiry_date,  uname, migration_info)&#xA;&#x9;SELECT  id,tenant_customer_id,accreditation_tld_id,name,auth_info, roid, ry_created_date, ry_expiry_date, ry_updated_date,ry_transfered_date,&#xA;&#x9;&#x9;deleted_date, expiry_date, uname, CASE   WHEN tdp_min_namesrvers_issue  THEN  '{&quot;allowed_nameserver_count_issue&quot;: true}'::jsonb  &#x9;END   as metadata&#xA;&#x9;FROM cte&#xA;),&#xA;--order&#xA;cte_o AS&#xA;(&#x9;INSERT INTO public.order&#xA;&#x9;&#x9;( id, tenant_customer_id, type_id, customer_user_id, status_id)&#xA;&#x9;SELECT order_id,tenant_customer_id, type_id,NULL,public.tc_id_from_name('public.order_status', 'successful') AS status_id &#xA;&#x9;FROM cte&#xA;)&#xA;-- order_item&#xA;INSERT INTO public.order_item_import_domain&#xA;&#x9;(id, order_id, status_id, name, registration_period, accreditation_tld_id,  auth_info, roid, &#xA;&#x9;ry_created_date, ry_expiry_date, ry_transfered_date, deleted_date, expiry_date, domain_id)&#xA;SELECT id,order_id,  tc_id_from_name('order_item_status'::text, 'complete'::text) AS  status_id, name,registration_period,accreditation_tld_id,  auth_info, roid, &#xA;&#x9;ry_created_date, ry_expiry_date, ry_transfered_date, deleted_date, expiry_date,id&#xA;FROM cte;&#xA;--ALTER TABLE public.domain ENABLE TRIGGER zz_60_trail_domain; &#xA;--ALTER TABLE public.order_item_import_domain ENABLE  TRIGGER zz_60_trail_order_item_import_domain;&#xA;--ALTER TABLE public.order ENABLE TRIGGER  zz_60_trail_order;&#xA;--ALTER TABLE public.order ENABLE TRIGGER  order_set_metadata_tg;&#xA;&#xA;ANALYSE public.domain;&#xA;ANALYSE public.order;&#xA;ANALYSE public.order_item_import_domain;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Vacuum public_domain"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{4A761D66-0A8C-40CC-A948-51D029C13C8B}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum public_domain"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  public.domain;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{66545324-9E58-44C9-87BD-F5EEB35BC95D}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Vacuum public_domain"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Create itdp_temp_domain_lock" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{390E3178-FB9C-46BE-A83B-93772BB7E7B5}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Vacuum public_domain"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Populate domain _RGP_status table" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{B1A594B5-3BCE-4FDA-952D-3571C768DEAB}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Transfer domains, create import order"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Vacuum public_domain" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain.PrecedenceConstraints[Constraint 8]"
              DTS:CreationName=""
              DTS:DTSID="{FA9FF3F5-6412-43B1-89C7-41BC5FDADEEF}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Create itdp_temp_domain_lock"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 8"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\populate domain_lock table" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Host"
          DTS:DTSID="{39BD836B-EC8E-43C6-B2EB-E11BD47C00A6}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:ISOLevel="4096"
          DTS:LocaleID="-1"
          DTS:ObjectName="03_2 Host">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Host"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{C2C5DEDF-373D-4983-B32E-E740262DBFD5}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Host"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
--ALTER TABLE public.host DISABLE  TRIGGER zz_60_trail_host;
--ALTER TABLE public.host DISABLE  TRIGGER zz_50_audit_host;
INSERT INTO public.host
( id, tenant_customer_id, name)
SELECT  h.id,t.tenant_customer_id,h.name
FROM itdp.host h
JOIN itdp.domain d ON h.itdp_domain_id=d.id AND d.dm_status IS null AND 
	d.tld = '"+ @[$Package::TLD] +"' AND d.dm_source='"+ @[$Package::Tenant] +"'
LEFT JOIN itdp.tld t ON t.tld_name=h.tld

  AND t.dm_source = h.dm_source
LEFT JOIN ONLY public.host ph ON ph.id=h.id
WHERE ph.id IS NULL AND 	
	h.tld='"+ @[$Package::TLD] +"' AND h.dm_source='"+ @[$Package::Tenant] +"'
    AND  h.id=h.host_id_unique_name AND h.host_id_unique_name_tdp IS NULL;
--ALTER TABLE public.host ENABLE TRIGGER zz_60_trail_host;	
--ALTER TABLE public.host ENABLE  TRIGGER zz_50_audit_host;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;--ALTER TABLE public.host DISABLE  TRIGGER zz_60_trail_host;&#xA;--ALTER TABLE public.host DISABLE  TRIGGER zz_50_audit_host;&#xA;INSERT INTO public.host&#xA;( id, tenant_customer_id, name)&#xA;SELECT  h.id,t.tenant_customer_id,h.name&#xA;FROM itdp.host h&#xA;JOIN itdp.domain d ON h.itdp_domain_id=d.id AND d.dm_status IS null AND &#xA;&#x9;d.tld = 'in' AND d.dm_source='opensrs'&#xA;LEFT JOIN itdp.tld t ON t.tld_name=h.tld&#xA;&#xA;  AND t.dm_source = h.dm_source&#xA;LEFT JOIN ONLY public.host ph ON ph.id=h.id&#xA;WHERE ph.id IS NULL AND &#x9;&#xA;&#x9;h.tld='in' AND h.dm_source='opensrs'&#xA;    AND  h.id=h.host_id_unique_name AND h.host_id_unique_name_tdp IS NULL;&#xA;--ALTER TABLE public.host ENABLE TRIGGER zz_60_trail_host;&#x9;&#xA;--ALTER TABLE public.host ENABLE  TRIGGER zz_50_audit_host;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Host_addr"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{55f9696a-94fe-497e-9f64-0c9c75cdf11a}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Host_addr"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
INSERT INTO public.host_addr
    (id, host_id, address)
 SELECT ha.id, ha.itdp_host_id, ha.address
    FROM itdp.host_addr ha
	JOIN itdp.host h ON ha.itdp_host_id = h.id and h.tld = '"+ @[$Package::TLD] +"' AND h.dm_source='"+ @[$Package::Tenant] +"'
	JOIN itdp.domain d ON h.itdp_domain_id=d.id AND d.dm_status IS null AND  	d.tld = '"+ @[$Package::TLD] +"' AND d.dm_source='"+ @[$Package::Tenant] +"'
	JOIN ONLY public.host ph ON ph.id = h.id  -- Join with public.host to ensure the host exists
    LEFT JOIN ONLY public.host_addr pha ON pha.id = ha.id
   WHERE pha.id IS NULL
        AND ha.tld = '"+ @[$Package::TLD] +"'  
        AND ha.dm_source = '"+ @[$Package::Tenant] +"' ;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;INSERT INTO public.host_addr&#xA;    (id, host_id, address)&#xA; SELECT ha.id, ha.itdp_host_id, ha.address&#xA;    FROM itdp.host_addr ha&#xA;&#x9;JOIN itdp.host h ON ha.itdp_host_id = h.id and h.tld = 'in' AND h.dm_source='opensrs'&#xA;&#x9;JOIN itdp.domain d ON h.itdp_domain_id=d.id AND d.dm_status IS null AND  &#x9;d.tld = 'in' AND d.dm_source='opensrs'&#xA;&#x9;JOIN ONLY public.host ph ON ph.id = h.id  -- Join with public.host to ensure the host exists&#xA;    LEFT JOIN ONLY public.host_addr pha ON pha.id = ha.id&#xA;   WHERE pha.id IS NULL&#xA;        AND ha.tld = 'in'  &#xA;        AND ha.dm_source = 'opensrs' ;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Mark duplicate host by name in ITDP"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{15D412C1-7B63-4822-B55F-5441FD189F22}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Mark duplicate host by name in ITDP"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
WITH cte AS    
(SELECT min(h.id::text) AS min_text_id ,h.name FROM itdp.host h
	JOIN itdp.DOMAIN d ON d.id=h.itdp_domain_id
	WHERE h.tld='"+ @[$Package::TLD] +"'  AND host_id_unique_name_tdp IS NULL AND d.dm_status IS NULL 	
	GROUP BY h.name)

UPDATE itdp.host h SET host_id_unique_name=cte.min_text_id::uuid
FROM itdp.host hh
JOIN itdp.DOMAIN d ON d.id=hh.itdp_domain_id
LEFT JOIN cte ON cte.name=hh.name
WHERE hh.id=h.id 
AND h.host_id_unique_name_tdp IS NULL 
AND d.dm_status IS NULL 
AND h.tld='"+ @[$Package::TLD] +"';

analyse itdp.host;
COMMIT ;
"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;WITH cte AS    &#xA;(SELECT min(h.id::text) AS min_text_id ,h.name FROM itdp.host h&#xA;&#x9;JOIN itdp.DOMAIN d ON d.id=h.itdp_domain_id&#xA;&#x9;WHERE h.tld='in'  AND host_id_unique_name_tdp IS NULL AND d.dm_status IS NULL &#x9;&#xA;&#x9;GROUP BY h.name)&#xA;&#xA;UPDATE itdp.host h SET host_id_unique_name=cte.min_text_id::uuid&#xA;FROM itdp.host hh&#xA;JOIN itdp.DOMAIN d ON d.id=hh.itdp_domain_id&#xA;LEFT JOIN cte ON cte.name=hh.name&#xA;WHERE hh.id=h.id &#xA;AND h.host_id_unique_name_tdp IS NULL &#xA;AND d.dm_status IS NULL &#xA;AND h.tld='in';&#xA;&#xA;analyse itdp.host;&#xA;COMMIT ;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Mark host that exists inTDP"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{91AC77BE-DF14-4A5B-9304-79034DEB1EAF}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Mark host that exists inTDP"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
UPDATE itdp.host h SET host_id_unique_name_tdp=ph.id
FROM itdp.host hh
JOIN itdp.DOMAIN d ON d.id=hh.itdp_domain_id
JOIN only public.host ph ON ph.name=hh.name
JOIN v_tenant_customer vtc ON vtc.id=ph.tenant_customer_id 
WHERE hh.id=h.id AND d.dm_status IS NULL 
--AND h.host_id_unique_name_tdp IS NULL
 AND vtc.tenant_name =  '"+ @[$Package::Tenant]  +"'  AND h.tld = '"+ @[$Package::TLD] +"';
 ANALYSE itdp.host;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;UPDATE itdp.host h SET host_id_unique_name_tdp=ph.id&#xA;FROM itdp.host hh&#xA;JOIN itdp.DOMAIN d ON d.id=hh.itdp_domain_id&#xA;JOIN only public.host ph ON ph.name=hh.name&#xA;JOIN v_tenant_customer vtc ON vtc.id=ph.tenant_customer_id &#xA;WHERE hh.id=h.id AND d.dm_status IS NULL &#xA;--AND h.host_id_unique_name_tdp IS NULL&#xA; AND vtc.tenant_name =  'opensrs'  AND h.tld = 'in';&#xA; ANALYSE itdp.host;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Unigue host"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{9521566B-C902-4E57-B0D0-C7890401F140}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Unigue host"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"
DO $$
	DECLARE    _sql text;
BEGIN
SET work_mem TO '1900MB';

IF  '"+@[$Package::TLD] +"' in ('com') THEN
	DROP TABLE IF EXISTS itdp.temp_list_index;
	
	--save list of indexes		
	CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'itdp' AND TABLEname='host_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"');
		
	SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')
		   FROM   pg_index  i   
		   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'
		   WHERE  i.indrelid = 'itdp.host_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"'::regclass AND    d.objid IS NULL   INTO _sql;
	IF _sql IS NOT NULL THEN                  
    	    EXECUTE _sql;
    END IF;
END IF;

--  host_id_unique_name_tdp
UPDATE itdp.host h SET host_id_unique_name_tdp=ph.id
FROM itdp.host hh
	JOIN itdp.DOMAIN d ON d.id=hh.itdp_domain_id AND 
		 d.tld = '"+ @[$Package::TLD] +"' AND d.dm_source='"+ @[$Package::Tenant] +"'
		AND (d.dm_status).domain IS NULL 
	JOIN only public.host ph ON ph.name=hh.name
	JOIN v_tenant_customer vtc ON vtc.id=ph.tenant_customer_id 
	WHERE hh.id=h.id AND hh.tld = '"+ @[$Package::TLD] +"' and hh.dm_source='"+ @[$Package::Tenant] +"'
		 	AND vtc.tenant_name =  '"+ @[$Package::Tenant]  +"' 
			 AND h.tld = '"+ @[$Package::TLD] +"' AND h.dm_source='"+ @[$Package::Tenant] +"';
ANALYSE itdp.host;
COMMIT;

IF  '"+@[$Package::TLD] +"' in ('com') THEN
	CREATE INDEX  IF NOT EXISTS  host_enom_com_name_idx ON itdp.host_enom_com USING btree (name);
END IF;
-- host_id_unique_name
DROP TABLE IF EXISTS itdp.host_unique_temp;
CREATE TABLE itdp.host_unique_temp AS     
(SELECT min(h.id::text) AS min_text_id ,h.name
	FROM itdp.host h
	JOIN itdp.DOMAIN d ON d.id=h.itdp_domain_id AND 
		 d.tld = '"+ @[$Package::TLD] +"' AND d.dm_source='"+ @[$Package::Tenant] +"'
		AND (d.dm_status).domain IS NULL 
	WHERE  h.tld = '"+ @[$Package::TLD] +"' AND h.dm_source='"+ @[$Package::Tenant] +"'
 		AND host_id_unique_name_tdp IS NULL 	
	GROUP BY h.name);

IF  '"+@[$Package::TLD] +"' in ('com') THEN
	DROP INDEX  IF EXISTS itdp.host_enom_com_name_idx;
END IF;

UPDATE itdp.host h SET host_id_unique_name=cte.min_text_id::uuid
FROM itdp.host hh
JOIN itdp.DOMAIN d ON d.id=hh.itdp_domain_id AND 
		d.tld = '"+ @[$Package::TLD] +"' AND d.dm_source='"+ @[$Package::Tenant] +"'
		AND (d.dm_status).domain IS NULL 
JOIN itdp.host_unique_temp cte ON cte.name=hh.name
WHERE hh.id=h.id AND hh.tld = '"+ @[$Package::TLD] +"' and hh.dm_source='"+ @[$Package::Tenant] +"' 
	AND h.host_id_unique_name_tdp IS NULL 
	AND h.tld='"+ @[$Package::TLD] +"' AND h.dm_source='"+ @[$Package::Tenant] +"';


IF  '"+@[$Package::TLD] +"' in ('com') THEN
	--recreate indexes
 	IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN 
		EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);
	END IF;	
END IF;
ANALYSE itdp.host;
COMMIT;
END $$;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="&#xA;DO $$&#xA;&#x9;DECLARE    _sql text;&#xA;BEGIN&#xA;SET work_mem TO '1900MB';&#xA;&#xA;IF  'in' in ('com') THEN&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_index;&#xA;&#x9;&#xA;&#x9;--save list of indexes&#x9;&#x9;&#xA;&#x9;CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'itdp' AND TABLEname='host_opensrs_in');&#xA;&#x9;&#x9;&#xA;&#x9;SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')&#xA;&#x9;&#x9;   FROM   pg_index  i   &#xA;&#x9;&#x9;   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'&#xA;&#x9;&#x9;   WHERE  i.indrelid = 'itdp.host_opensrs_in'::regclass AND    d.objid IS NULL   INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;    &#x9;    EXECUTE _sql;&#xA;    END IF;&#xA;END IF;&#xA;&#xA;--  host_id_unique_name_tdp&#xA;UPDATE itdp.host h SET host_id_unique_name_tdp=ph.id&#xA;FROM itdp.host hh&#xA;&#x9;JOIN itdp.DOMAIN d ON d.id=hh.itdp_domain_id AND &#xA;&#x9;&#x9; d.tld = 'in' AND d.dm_source='opensrs'&#xA;&#x9;&#x9;AND (d.dm_status).domain IS NULL &#xA;&#x9;JOIN only public.host ph ON ph.name=hh.name&#xA;&#x9;JOIN v_tenant_customer vtc ON vtc.id=ph.tenant_customer_id &#xA;&#x9;WHERE hh.id=h.id AND hh.tld = 'in' and hh.dm_source='opensrs'&#xA;&#x9;&#x9; &#x9;AND vtc.tenant_name =  'opensrs' &#xA;&#x9;&#x9;&#x9; AND h.tld = 'in' AND h.dm_source='opensrs';&#xA;ANALYSE itdp.host;&#xA;COMMIT;&#xA;&#xA;IF  'in' in ('com') THEN&#xA;&#x9;CREATE INDEX  IF NOT EXISTS  host_enom_com_name_idx ON itdp.host_enom_com USING btree (name);&#xA;END IF;&#xA;-- host_id_unique_name&#xA;DROP TABLE IF EXISTS itdp.host_unique_temp;&#xA;CREATE TABLE itdp.host_unique_temp AS     &#xA;(SELECT min(h.id::text) AS min_text_id ,h.name&#xA;&#x9;FROM itdp.host h&#xA;&#x9;JOIN itdp.DOMAIN d ON d.id=h.itdp_domain_id AND &#xA;&#x9;&#x9; d.tld = 'in' AND d.dm_source='opensrs'&#xA;&#x9;&#x9;AND (d.dm_status).domain IS NULL &#xA;&#x9;WHERE  h.tld = 'in' AND h.dm_source='opensrs'&#xA; &#x9;&#x9;AND host_id_unique_name_tdp IS NULL &#x9;&#xA;&#x9;GROUP BY h.name);&#xA;&#xA;IF  'in' in ('com') THEN&#xA;&#x9;DROP INDEX  IF EXISTS itdp.host_enom_com_name_idx;&#xA;END IF;&#xA;&#xA;UPDATE itdp.host h SET host_id_unique_name=cte.min_text_id::uuid&#xA;FROM itdp.host hh&#xA;JOIN itdp.DOMAIN d ON d.id=hh.itdp_domain_id AND &#xA;&#x9;&#x9;d.tld = 'in' AND d.dm_source='opensrs'&#xA;&#x9;&#x9;AND (d.dm_status).domain IS NULL &#xA;JOIN itdp.host_unique_temp cte ON cte.name=hh.name&#xA;WHERE hh.id=h.id AND hh.tld = 'in' and hh.dm_source='opensrs' &#xA;&#x9;AND h.host_id_unique_name_tdp IS NULL &#xA;&#x9;AND h.tld='in' AND h.dm_source='opensrs';&#xA;&#xA;&#xA;IF  'in' in ('com') THEN&#xA;&#x9;--recreate indexes&#xA; &#x9;IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN &#xA;&#x9;&#x9;EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);&#xA;&#x9;END IF;&#x9;&#xA;END IF;&#xA;ANALYSE itdp.host;&#xA;COMMIT;&#xA;END $$;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Vacuum itdp_host"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{5BFBB416-DF3F-4882-8EBB-FDE3AA39A8A0}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum itdp_host"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  itdp.host" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{541E4B38-DB97-4653-AA9E-306501401E32}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Mark host that exists inTDP"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Vacuum itdp_host" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{897A238B-5DEE-4782-8FA7-B20D381A151C}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Mark duplicate host by name in ITDP"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Host" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{3079F1AF-9FB1-484F-9BE9-24770797E46D}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Unigue host"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Host" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{FDEC69DC-6E10-4610-AAE7-EF4CEA9501B3}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Vacuum itdp_host"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Mark duplicate host by name in ITDP" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{80E8D622-82AC-470C-AA50-595AAECF3963}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Host"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Host_addr" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{09CD88C1-F4BE-472F-A8AC-03E2A193A7B0}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:ISOLevel="4096"
          DTS:LocaleID="-1"
          DTS:ObjectName="03_3 Contact">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\contact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{CD42CB6B-BD8A-413B-9E7E-341477D7E17C}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="contact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"DO $$
  DECLARE    _sql text;  
BEGIN
SET work_mem TO '1900MB';

-- contact
--ALTER TABLE public.contact DISABLE  TRIGGER zz_60_trail_contact;

IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	--DROP all table indexes and constraints
	--UPDATE pg_index SET indisready=FALSE 	WHERE indrelid =(SELECT 'public.contact'::regclass::OID);
	DROP TABLE IF EXISTS itdp.temp_list_constraints;
	DROP TABLE IF EXISTS itdp.temp_list_index;
	--save list of CONSTRAINTS 
	CREATE TABLE itdp.temp_list_constraints
		AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname
		FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            
		WHERE conrelid =(SELECT 'public.contact'::regclass::OID) AND contype&lt;&gt;'p' AND conname&lt;&gt;'contact_short_id_key');
	--save list of indexes		
	CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'public' AND TABLEname='contact');
		
	--DROP constraints
	SELECT string_agg('ALTER TABLE public.contact DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint	
	 	WHERE conrelid =(SELECT 'public.contact'::regclass::OID) AND contype&lt;&gt;'p' AND conname&lt;&gt;'contact_short_id_key' INTO _sql;
	IF _sql IS NOT NULL THEN                  
        EXECUTE _sql;
    END IF;
   
   -- drop  indexes --   
    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')
		   FROM   pg_index  i   
		   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'
		   WHERE  i.indrelid = 'public.contact'::regclass AND    d.objid IS NULL   INTO _sql;
	IF _sql IS NOT NULL THEN                  
    	    EXECUTE _sql;
    END IF;
END IF;

INSERT INTO public.contact 
	(id, type_id, title, org_reg, org_vat, org_duns, tenant_customer_id, email, phone, fax, country, LANGUAGE,migration_info)
SELECT  c.id, type_id,	c.title, c.org_reg, c.org_vat, c.org_duns, tenant_customer_id, c.email, c.phone, c.fax, c.country,
	c.LANGUAGE, metadata
FROM itdp.contact_temp c;

IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	--Reenable all table indexes
	--UPDATE pg_index SET indisready=TRUE 	WHERE indrelid =(SELECT 'public.contact'::regclass::OID);
-- recreate constraints	 
     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN 
		 EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);
	 END IF;	
	--recreate indexes
	IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN 
		EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);
	END IF;
END IF;
--ALTER TABLE public.contact ENABLE TRIGGER zz_60_trail_contact;	
ANALYSE public.contact;
COMMIT;
END $$;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="DO $$&#xA;  DECLARE    _sql text;  &#xA;BEGIN&#xA;SET work_mem TO '1900MB';&#xA;&#xA;-- contact&#xA;--ALTER TABLE public.contact DISABLE  TRIGGER zz_60_trail_contact;&#xA;&#xA;IF  'in' in ('com' ,'net') THEN&#xA;&#x9;--DROP all table indexes and constraints&#xA;&#x9;--UPDATE pg_index SET indisready=FALSE &#x9;WHERE indrelid =(SELECT 'public.contact'::regclass::OID);&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_constraints;&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_index;&#xA;&#x9;--save list of CONSTRAINTS &#xA;&#x9;CREATE TABLE itdp.temp_list_constraints&#xA;&#x9;&#x9;AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname&#xA;&#x9;&#x9;FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            &#xA;&#x9;&#x9;WHERE conrelid =(SELECT 'public.contact'::regclass::OID) AND contype&lt;&gt;'p' AND conname&lt;&gt;'contact_short_id_key');&#xA;&#x9;--save list of indexes&#x9;&#x9;&#xA;&#x9;CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'public' AND TABLEname='contact');&#xA;&#x9;&#x9;&#xA;&#x9;--DROP constraints&#xA;&#x9;SELECT string_agg('ALTER TABLE public.contact DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint&#x9;&#xA;&#x9; &#x9;WHERE conrelid =(SELECT 'public.contact'::regclass::OID) AND contype&lt;&gt;'p' AND conname&lt;&gt;'contact_short_id_key' INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;        EXECUTE _sql;&#xA;    END IF;&#xA;   &#xA;   -- drop  indexes --   &#xA;    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')&#xA;&#x9;&#x9;   FROM   pg_index  i   &#xA;&#x9;&#x9;   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'&#xA;&#x9;&#x9;   WHERE  i.indrelid = 'public.contact'::regclass AND    d.objid IS NULL   INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;    &#x9;    EXECUTE _sql;&#xA;    END IF;&#xA;END IF;&#xA;&#xA;INSERT INTO public.contact &#xA;&#x9;(id, type_id, title, org_reg, org_vat, org_duns, tenant_customer_id, email, phone, fax, country, LANGUAGE,migration_info)&#xA;SELECT  c.id, type_id,&#x9;c.title, c.org_reg, c.org_vat, c.org_duns, tenant_customer_id, c.email, c.phone, c.fax, c.country,&#xA;&#x9;c.LANGUAGE, metadata&#xA;FROM itdp.contact_temp c;&#xA;&#xA;IF  'in' in ('com' ,'net') THEN&#xA;&#x9;--Reenable all table indexes&#xA;&#x9;--UPDATE pg_index SET indisready=TRUE &#x9;WHERE indrelid =(SELECT 'public.contact'::regclass::OID);&#xA;-- recreate constraints&#x9; &#xA;     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN &#xA;&#x9;&#x9; EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);&#xA;&#x9; END IF;&#x9;&#xA;&#x9;--recreate indexes&#xA;&#x9;IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN &#xA;&#x9;&#x9;EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);&#xA;&#x9;END IF;&#xA;END IF;&#xA;--ALTER TABLE public.contact ENABLE TRIGGER zz_60_trail_contact;&#x9;&#xA;ANALYSE public.contact;&#xA;COMMIT;&#xA;END $$;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\contact_postal"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{A6BABB14-7AAA-4AF3-8A3F-603B63B8EF13}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="contact_postal"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"DO $$
     DECLARE    _sql text; 
BEGIN
SET work_mem TO '1900MB'; 
--ALTER TABLE public.contact_postal DISABLE  TRIGGER zz_60_trail_contact_postal;

IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	DROP TABLE IF EXISTS itdp.temp_list_constraints;
	DROP TABLE IF EXISTS itdp.temp_list_index;
	--save list of CONSTRAINTS 
	CREATE TABLE itdp.temp_list_constraints
		AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname
		FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            
		WHERE conrelid =(SELECT 'public.contact_postal'::regclass::OID) );
	--save list of indexes		
	CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'public' AND TABLEname='contact_postal');
		
	--DROP constraints
	SELECT string_agg('ALTER TABLE public.contact_postal DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint	
	 	WHERE conrelid =(SELECT 'public.contact_postal'::regclass::OID) INTO _sql;
	IF _sql IS NOT NULL THEN                  
        EXECUTE _sql;
    END IF;
   
   -- drop  indexes --   
    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')
		   FROM   pg_index  i   
		   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'
		   WHERE  i.indrelid = 'public.contact_postal'::regclass AND    d.objid IS NULL   INTO _sql;
	IF _sql IS NOT NULL THEN                  
    	    EXECUTE _sql;
    END IF;
END IF ;

INSERT INTO public.contact_postal 
	(id, contact_id, is_international, first_name, last_name, org_name, address1, address2, address3, city, postal_code, state)
SELECT  c.id, c.contact_id, c.is_international, c.first_name, c.last_name, c.org_name, c.address1, c.address2, c.address3, c.city, c.postal_code, c.state
FROM itdp.contact_postal_temp c;

IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	-- recreate constraints	 
     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN 
		 EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);
	 END IF;	
	--recreate indexes
	IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN 
		EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);
	END IF;
END IF ;

--ALTER TABLE public.contact_postal ENABLE  TRIGGER zz_60_trail_contact_postal;
ANALYSE public.contact_postal;
COMMIT;
END $$"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="DO $$&#xA;     DECLARE    _sql text; &#xA;BEGIN&#xA;SET work_mem TO '1900MB'; &#xA;--ALTER TABLE public.contact_postal DISABLE  TRIGGER zz_60_trail_contact_postal;&#xA;&#xA;IF  'in' in ('com' ,'net') THEN&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_constraints;&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_index;&#xA;&#x9;--save list of CONSTRAINTS &#xA;&#x9;CREATE TABLE itdp.temp_list_constraints&#xA;&#x9;&#x9;AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname&#xA;&#x9;&#x9;FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            &#xA;&#x9;&#x9;WHERE conrelid =(SELECT 'public.contact_postal'::regclass::OID) );&#xA;&#x9;--save list of indexes&#x9;&#x9;&#xA;&#x9;CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'public' AND TABLEname='contact_postal');&#xA;&#x9;&#x9;&#xA;&#x9;--DROP constraints&#xA;&#x9;SELECT string_agg('ALTER TABLE public.contact_postal DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint&#x9;&#xA;&#x9; &#x9;WHERE conrelid =(SELECT 'public.contact_postal'::regclass::OID) INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;        EXECUTE _sql;&#xA;    END IF;&#xA;   &#xA;   -- drop  indexes --   &#xA;    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')&#xA;&#x9;&#x9;   FROM   pg_index  i   &#xA;&#x9;&#x9;   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'&#xA;&#x9;&#x9;   WHERE  i.indrelid = 'public.contact_postal'::regclass AND    d.objid IS NULL   INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;    &#x9;    EXECUTE _sql;&#xA;    END IF;&#xA;END IF ;&#xA;&#xA;INSERT INTO public.contact_postal &#xA;&#x9;(id, contact_id, is_international, first_name, last_name, org_name, address1, address2, address3, city, postal_code, state)&#xA;SELECT  c.id, c.contact_id, c.is_international, c.first_name, c.last_name, c.org_name, c.address1, c.address2, c.address3, c.city, c.postal_code, c.state&#xA;FROM itdp.contact_postal_temp c;&#xA;&#xA;IF  'in' in ('com' ,'net') THEN&#xA;&#x9;-- recreate constraints&#x9; &#xA;     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN &#xA;&#x9;&#x9; EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);&#xA;&#x9; END IF;&#x9;&#xA;&#x9;--recreate indexes&#xA;&#x9;IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN &#xA;&#x9;&#x9;EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);&#xA;&#x9;END IF;&#xA;END IF ;&#xA;&#xA;--ALTER TABLE public.contact_postal ENABLE  TRIGGER zz_60_trail_contact_postal;&#xA;ANALYSE public.contact_postal;&#xA;COMMIT;&#xA;END $$" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Create itdp_contact_postal_temp"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{3CD28F35-7F4E-49EF-ABD9-132922B788B1}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create itdp_contact_postal_temp"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"DROP TABLE IF EXISTS itdp.contact_postal_temp;         
CREATE unlogged TABLE itdp.contact_postal_temp  AS 
(SELECT  c.id, c.contact_id, c.is_international, c.first_name, c.last_name, c.org_name, c.address1, c.address2, c.address3, c.city, c.postal_code, c.state
FROM itdp.contact_postal c
JOIN ONLY public.contact pc ON pc.id=c.contact_id 
LEFT JOIN public.contact_postal pcp ON pcp.id=c.id
WHERE  pcp.id IS NULL AND 	
	c.tld='"+ @[$Package::TLD] +"' AND c.dm_source = '"+@[$Package::Tenant]+"' );"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="DROP TABLE IF EXISTS itdp.contact_postal_temp;         &#xA;CREATE unlogged TABLE itdp.contact_postal_temp  AS &#xA;(SELECT  c.id, c.contact_id, c.is_international, c.first_name, c.last_name, c.org_name, c.address1, c.address2, c.address3, c.city, c.postal_code, c.state&#xA;FROM itdp.contact_postal c&#xA;JOIN ONLY public.contact pc ON pc.id=c.contact_id &#xA;LEFT JOIN public.contact_postal pcp ON pcp.id=c.id&#xA;WHERE  pcp.id IS NULL AND &#x9;&#xA;&#x9;c.tld='in' AND c.dm_source = 'opensrs' );" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Create itdp_contact_temp"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{5845CB67-69FD-47CE-9E34-666D0995E0C5}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create itdp_contact_temp"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"DROP TABLE IF EXISTS itdp.contact_temp;         
CREATE unlogged TABLE itdp.contact_temp  AS 
(SELECT  c.id, pct.id  as type_id,
	c.title, c.org_reg, c.org_vat, c.org_duns, t.tenant_customer_id, c.email, c.phone, c.fax, c.country,
	c.LANGUAGE, 
CASE WHEN '"+@[$Package::Tenant]+"' ='enom' THEN "+ @[$Project::jsonb_contact_issue_enom] +" 
WHEN '"+@[$Package::Tenant]+"' ='opensrs' THEN "+ @[$Project::jsonb_contact_issue_opensrs] +" 
WHEN '"+@[$Package::Tenant]+"' ='ascio' THEN "+ @[$Project::jsonb_contact_issue_ascio] +" 
END AS metadata
FROM itdp.contact c
JOIN itdp.DOMAIN d ON d.id = c.itdp_domain_id AND d.tld='"+ @[$Package::TLD] +"' AND d.dm_source = '"+@[$Package::Tenant]+"' 
JOIN itdp.contact_type ict ON ict.id=c.type_id
JOIN public.contact_type pct ON pct.name=ict.name
LEFT JOIN itdp.tld t ON t.tld_name=c.tld  AND c.dm_source = t.dm_source
LEFT JOIN ONLY public.contact pc ON pc.id=c.id
WHERE  c.tld='"+ @[$Package::TLD] +"' AND c.dm_source = '"+@[$Package::Tenant]+"' 
AND pc.id IS NULL AND (d.dm_status).domain IS NULL)	;
"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="DROP TABLE IF EXISTS itdp.contact_temp;         &#xA;CREATE unlogged TABLE itdp.contact_temp  AS &#xA;(SELECT  c.id, pct.id  as type_id,&#xA;&#x9;c.title, c.org_reg, c.org_vat, c.org_duns, t.tenant_customer_id, c.email, c.phone, c.fax, c.country,&#xA;&#x9;c.LANGUAGE, &#xA;CASE WHEN 'opensrs' ='enom' THEN CASE  WHEN TDP_contact_country_issue THEN   &#x9;CASE WHEN placeholder THEN  '{&quot;data_source&quot;: &quot;Enom&quot;, &quot;invalid_fields&quot;: [&quot;country&quot;], &quot;lost_handle&quot;: true, &quot;placeholder&quot;: true}'::jsonb &#x9;ELSE '{&quot;data_source&quot;: &quot;Enom&quot;, &quot;invalid_fields&quot;: [&quot;country&quot;], &quot;lost_handle&quot;: true}'::jsonb END ELSE  &#x9;CASE WHEN placeholder THEN '{&quot;data_source&quot;: &quot;Enom&quot;,  &quot;lost_handle&quot;: true, &quot;placeholder&quot;: true}'::jsonb &#x9;ELSE  '{&quot;data_source&quot;: &quot;Enom&quot;, &quot;lost_handle&quot;: true}'::jsonb  END END  &#xA;WHEN 'opensrs' ='opensrs' THEN CASE WHEN TDP_contact_country_issue &#x9;THEN          '{&quot;data_source&quot;: &quot;OpenSRS&quot;, &quot;invalid_fields&quot;: [&quot;country&quot;]}'::jsonb ELSE  NULL END &#xA;WHEN 'opensrs' ='ascio' THEN NULL &#xA;END AS metadata&#xA;FROM itdp.contact c&#xA;JOIN itdp.DOMAIN d ON d.id = c.itdp_domain_id AND d.tld='in' AND d.dm_source = 'opensrs' &#xA;JOIN itdp.contact_type ict ON ict.id=c.type_id&#xA;JOIN public.contact_type pct ON pct.name=ict.name&#xA;LEFT JOIN itdp.tld t ON t.tld_name=c.tld  AND c.dm_source = t.dm_source&#xA;LEFT JOIN ONLY public.contact pc ON pc.id=c.id&#xA;WHERE  c.tld='in' AND c.dm_source = 'opensrs' &#xA;AND pc.id IS NULL AND (d.dm_status).domain IS NULL)&#x9;;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Create itdp_domain_contact_temp"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{5A510C03-8C8E-4F0C-BAC9-08FCFDEBE45D}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create itdp_domain_contact_temp"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="5">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"
DROP TABLE IF EXISTS itdp.domain_contact_temp;         
CREATE unlogged TABLE itdp.domain_contact_temp  AS 
(SELECT  ic.itdp_domain_id, ic.id AS contact_id, dct.id AS domain_contact_type_id, ic.is_private, ic.handle
         FROM itdp.contact ic
         JOIN ONLY public.contact c ON c.id=ic.id 
         JOIN public.domain d ON d.id=ic.itdp_domain_id  
         JOIN itdp.domain id ON id.TLD  = '"+ @[$Package::TLD] +"' AND id.dm_source = '"+@[$Package::Tenant]+"' AND  id.id=ic.itdp_domain_id  AND (id.dm_status).domain IS NULL
         JOIN public.domain_contact_type dct ON dct.name=ic.domain_contact_type_name
         LEFT JOIN  public.domain_contact pdc ON pdc.contact_id = ic.id AND pdc.domain_id =ic.itdp_domain_id 
         WHERE ic.TLD  = '"+ @[$Package::TLD] +"' AND ic.dm_source = '"+@[$Package::Tenant]+"'           
         AND pdc.contact_id IS NULL);  
"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="&#xA;DROP TABLE IF EXISTS itdp.domain_contact_temp;         &#xA;CREATE unlogged TABLE itdp.domain_contact_temp  AS &#xA;(SELECT  ic.itdp_domain_id, ic.id AS contact_id, dct.id AS domain_contact_type_id, ic.is_private, ic.handle&#xA;         FROM itdp.contact ic&#xA;         JOIN ONLY public.contact c ON c.id=ic.id &#xA;         JOIN public.domain d ON d.id=ic.itdp_domain_id  &#xA;         JOIN itdp.domain id ON id.TLD  = 'in' AND id.dm_source = 'opensrs' AND  id.id=ic.itdp_domain_id  AND (id.dm_status).domain IS NULL&#xA;         JOIN public.domain_contact_type dct ON dct.name=ic.domain_contact_type_name&#xA;         LEFT JOIN  public.domain_contact pdc ON pdc.contact_id = ic.id AND pdc.domain_id =ic.itdp_domain_id &#xA;         WHERE ic.TLD  = 'in' AND ic.dm_source = 'opensrs'           &#xA;         AND pdc.contact_id IS NULL);  &#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\domain_contact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{63A0C843-B413-4ECB-B139-E53A1346E648}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="domain_contact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="5">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"DO $$
	  DECLARE    _sql text; 
BEGIN
SET work_mem TO '1900MB'; 
--ALTER TABLE public.domain_contact DISABLE  TRIGGER zz_60_trail_domain_contact; 
--ALTER TABLE public.domain_contact DISABLE  TRIGGER zz_50_audit_domain_contact;

IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	DROP TABLE IF EXISTS itdp.temp_list_constraints2;
	DROP TABLE IF EXISTS itdp.temp_list_index2;
	--save list of CONSTRAINTS 
	CREATE TABLE itdp.temp_list_constraints2
		AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname
		FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            
		WHERE conrelid =(SELECT 'public.domain_contact'::regclass::OID) );
	--save list of indexes		
	CREATE TABLE itdp.temp_list_index2 AS (SELECT * FROM pg_indexes WHERE schemaname = 'public' AND TABLEname='domain_contact');
		
	--DROP constraints
	SELECT string_agg('ALTER TABLE public.domain_contact DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint	
	 	WHERE conrelid =(SELECT 'public.domain_contact'::regclass::OID) INTO _sql;
	IF _sql IS NOT NULL THEN                  
        EXECUTE _sql;
    END IF;
   
   -- drop  indexes --   
    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')
		   FROM   pg_index  i   
		   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'
		   WHERE  i.indrelid = 'public.domain_contact'::regclass AND    d.objid IS NULL   INTO _sql;
	IF _sql IS NOT NULL THEN                  
    	    EXECUTE _sql;
    END IF;

END IF;

INSERT INTO public.domain_contact  ( domain_id, contact_id, domain_contact_type_id,is_private,handle)
SELECT  itdp_domain_id, contact_id,domain_contact_type_id,is_private,handle  FROM itdp.domain_contact_temp;

IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	-- recreate constraints	 
     IF (SELECT count(*) FROM itdp.temp_list_constraints2) &gt;0 THEN 
		 EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints2);
	 END IF;	
	--recreate indexes
	IF (SELECT count(*) FROM itdp.temp_list_index2) &gt;0 THEN 
		EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index2);
	END IF;
END IF;


--ALTER TABLE public.domain_contact ENABLE TRIGGER zz_60_trail_domain_contact;
--ALTER TABLE public.domain_contact ENABLE  TRIGGER zz_50_audit_domain_contact;
ANALYSE public.domain_contact;
COMMIT;
END $$
"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="DO $$&#xA;&#x9;  DECLARE    _sql text; &#xA;BEGIN&#xA;SET work_mem TO '1900MB'; &#xA;--ALTER TABLE public.domain_contact DISABLE  TRIGGER zz_60_trail_domain_contact; &#xA;--ALTER TABLE public.domain_contact DISABLE  TRIGGER zz_50_audit_domain_contact;&#xA;&#xA;IF  'in' in ('com' ,'net') THEN&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_constraints2;&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_index2;&#xA;&#x9;--save list of CONSTRAINTS &#xA;&#x9;CREATE TABLE itdp.temp_list_constraints2&#xA;&#x9;&#x9;AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname&#xA;&#x9;&#x9;FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            &#xA;&#x9;&#x9;WHERE conrelid =(SELECT 'public.domain_contact'::regclass::OID) );&#xA;&#x9;--save list of indexes&#x9;&#x9;&#xA;&#x9;CREATE TABLE itdp.temp_list_index2 AS (SELECT * FROM pg_indexes WHERE schemaname = 'public' AND TABLEname='domain_contact');&#xA;&#x9;&#x9;&#xA;&#x9;--DROP constraints&#xA;&#x9;SELECT string_agg('ALTER TABLE public.domain_contact DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint&#x9;&#xA;&#x9; &#x9;WHERE conrelid =(SELECT 'public.domain_contact'::regclass::OID) INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;        EXECUTE _sql;&#xA;    END IF;&#xA;   &#xA;   -- drop  indexes --   &#xA;    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')&#xA;&#x9;&#x9;   FROM   pg_index  i   &#xA;&#x9;&#x9;   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'&#xA;&#x9;&#x9;   WHERE  i.indrelid = 'public.domain_contact'::regclass AND    d.objid IS NULL   INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;    &#x9;    EXECUTE _sql;&#xA;    END IF;&#xA;&#xA;END IF;&#xA;&#xA;INSERT INTO public.domain_contact  ( domain_id, contact_id, domain_contact_type_id,is_private,handle)&#xA;SELECT  itdp_domain_id, contact_id,domain_contact_type_id,is_private,handle  FROM itdp.domain_contact_temp;&#xA;&#xA;IF  'in' in ('com' ,'net') THEN&#xA;&#x9;-- recreate constraints&#x9; &#xA;     IF (SELECT count(*) FROM itdp.temp_list_constraints2) &gt;0 THEN &#xA;&#x9;&#x9; EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints2);&#xA;&#x9; END IF;&#x9;&#xA;&#x9;--recreate indexes&#xA;&#x9;IF (SELECT count(*) FROM itdp.temp_list_index2) &gt;0 THEN &#xA;&#x9;&#x9;EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index2);&#xA;&#x9;END IF;&#xA;END IF;&#xA;&#xA;&#xA;--ALTER TABLE public.domain_contact ENABLE TRIGGER zz_60_trail_domain_contact;&#xA;--ALTER TABLE public.domain_contact ENABLE  TRIGGER zz_50_audit_domain_contact;&#xA;ANALYSE public.domain_contact;&#xA;COMMIT;&#xA;END $$&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Populate lost handle flag in contact_metadata"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{50EAA59D-0D21-4515-B625-45F75B6E9546}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Populate lost handle flag in contact_metadata"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="6">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
ALTER TABLE public.contact DISABLE  TRIGGER zz_60_trail_contact;
ALTER TABLE public.contact DISABLE  TRIGGER zz_50_audit_contact;
UPDATE public.contact pc
SET metadata = jsonb_set(pc.metadata, '{migration_lost_handle}', 'true'::jsonb)
FROM itdp.contact c
JOIN itdp.domain d ON d.id=c.itdp_domain_id  AND d.dm_status IS null
JOIN public.domain_contact dc ON dc.contact_id=c.id AND handle IS NULL
JOIN public.contact pc1 ON pc1.id=c.id
JOIN public.v_tenant_customer vtc  ON vtc.id=pc1.tenant_customer_id
WHERE c.id=pc.id AND 
	pc.metadata IS NOT NULL AND c.tld='"+ @[$Package::TLD]+ "'  AND tenant_name='"+  @[$Package::Tenant] +"'	;
ALTER TABLE public.contact ENABLE TRIGGER zz_60_trail_contact;	
ALTER TABLE public.contact ENABLE TRIGGER zz_50_audit_contact;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;ALTER TABLE public.contact DISABLE  TRIGGER zz_60_trail_contact;&#xA;ALTER TABLE public.contact DISABLE  TRIGGER zz_50_audit_contact;&#xA;UPDATE public.contact pc&#xA;SET metadata = jsonb_set(pc.metadata, '{migration_lost_handle}', 'true'::jsonb)&#xA;FROM itdp.contact c&#xA;JOIN itdp.domain d ON d.id=c.itdp_domain_id  AND d.dm_status IS null&#xA;JOIN public.domain_contact dc ON dc.contact_id=c.id AND handle IS NULL&#xA;JOIN public.contact pc1 ON pc1.id=c.id&#xA;JOIN public.v_tenant_customer vtc  ON vtc.id=pc1.tenant_customer_id&#xA;WHERE c.id=pc.id AND &#xA;&#x9;pc.metadata IS NOT NULL AND c.tld='in'  AND tenant_name='opensrs'&#x9;;&#xA;ALTER TABLE public.contact ENABLE TRIGGER zz_60_trail_contact;&#x9;&#xA;ALTER TABLE public.contact ENABLE TRIGGER zz_50_audit_contact;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\provision_contact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{D3189C84-31E8-4BEF-A6EC-66D5EEF22EA8}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="provision_contact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="7">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;    
	ALTER TABLE provision_contact DISABLE TRIGGER   provision_contact_job_tg;  --DO NOT CREATE a job 
    INSERT INTO public.provision_contact   (tenant_customer_id, provisioned_date, status_id,  contact_id, accreditation_id, handle)
         SELECT d.tenant_customer_id, c.created_date,  tc_id_from_name('provision_status'::text, 'completed'::text) ,  dc.contact_id, vat.accreditation_id, dc.handle
         FROM public.domain_contact dc
         JOIN public.DOMAIN d ON d.id =dc.domain_id        
         JOIN public.contact c ON c.id =dc.contact_id   
         JOIN v_accreditation_tld vat ON vat.accreditation_tld_id =d.accreditation_tld_id
         LEFT JOIN  public.provision_contact pc ON pc.contact_id = dc.contact_id AND pc.handle =dc.handle 
         WHERE vat.tld_name  = '"+ @[$Package::TLD] +"' AND vat.tenant_name ='enom'          
         AND pc.contact_id IS NULL;  
 	ALTER TABLE provision_contact ENABLE TRIGGER   provision_contact_job_tg;       
 COMMIT;   "</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="BEGIN;    &#xA;&#x9;ALTER TABLE provision_contact DISABLE TRIGGER   provision_contact_job_tg;  --DO NOT CREATE a job &#xA;    INSERT INTO public.provision_contact   (tenant_customer_id, provisioned_date, status_id,  contact_id, accreditation_id, handle)&#xA;         SELECT d.tenant_customer_id, c.created_date,  tc_id_from_name('provision_status'::text, 'completed'::text) ,  dc.contact_id, vat.accreditation_id, dc.handle&#xA;         FROM public.domain_contact dc&#xA;         JOIN public.DOMAIN d ON d.id =dc.domain_id        &#xA;         JOIN public.contact c ON c.id =dc.contact_id   &#xA;         JOIN v_accreditation_tld vat ON vat.accreditation_tld_id =d.accreditation_tld_id&#xA;         LEFT JOIN  public.provision_contact pc ON pc.contact_id = dc.contact_id AND pc.handle =dc.handle &#xA;         WHERE vat.tld_name  = 'in' AND vat.tenant_name ='enom'          &#xA;         AND pc.contact_id IS NULL;  &#xA; &#x9;ALTER TABLE provision_contact ENABLE TRIGGER   provision_contact_job_tg;       &#xA; COMMIT;   " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Vacuum public_contact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{91556015-A407-478C-AC22-F9959CF30CB6}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum public_contact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  public.contact" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{1AB80AC4-0BAC-4254-BB52-3EC21F1CD0CF}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Vacuum public_contact"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Create itdp_contact_postal_temp" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{3004B536-CD57-43FB-A6A5-4C74D1B27FF9}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\contact"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Vacuum public_contact" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{52E3A22C-260A-41BC-B27F-0BE7A330C6A1}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Vacuum public_contact"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Create itdp_domain_contact_temp" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint 6]"
              DTS:CreationName=""
              DTS:DTSID="{7E3C3F34-07A2-43DB-A970-221BC784390D}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Create itdp_contact_postal_temp"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 6"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\contact_postal" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint 7]"
              DTS:CreationName=""
              DTS:DTSID="{365BC4B8-950D-4B7D-A3A7-6730DBCD6B46}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Create itdp_domain_contact_temp"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 7"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\domain_contact" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint 8]"
              DTS:CreationName=""
              DTS:DTSID="{BA8BE35F-AF49-4330-82AF-EF2DEAA6224B}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Create itdp_contact_temp"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 8"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\contact" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Host"
          DTS:DTSID="{5148C219-F3B9-4F32-9338-F77510031EA3}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:ISOLevel="4096"
          DTS:LocaleID="-1"
          DTS:ObjectName="03_4 Domain_Host">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host\Create itdp_domain_host_temp"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{D6E61C43-FC63-417D-BAD1-0A6134C99B7C}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create itdp_domain_host_temp"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"DROP TABLE IF EXISTS itdp.domain_host_temp;         
CREATE unlogged TABLE itdp.domain_host_temp  AS
 
(SELECT   h.itdp_domain_id, COALESCE(h.host_id_unique_name_tdp,h.host_id_unique_name) AS host_id 
	FROM itdp.host h 
		JOIN itdp.domain d ON h.itdp_domain_id=d.id AND  (d.dm_status).domain IS null AND
			 d.tld = '"+ @[$Package::TLD] +"' AND d.dm_source='"+ @[$Package::Tenant] +"'
		JOIN public.domain pd ON h.itdp_domain_id=pd.id 
		JOIN ONLY public.host ph ON COALESCE(h.host_id_unique_name_tdp,h.host_id_unique_name)=ph.id 
        LEFT JOIN  public.domain_host pdh ON pdh.host_id = COALESCE(h.host_id_unique_name_tdp,h.host_id_unique_name) AND pdh.domain_id =h.itdp_domain_id 
        WHERE h.TLD  = '"+ @[$Package::TLD] +"' AND  h.dm_source='"+ @[$Package::Tenant] +"'            
         AND pdh.host_id IS NULL)  ; "</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="DROP TABLE IF EXISTS itdp.domain_host_temp;         &#xA;CREATE unlogged TABLE itdp.domain_host_temp  AS&#xA; &#xA;(SELECT   h.itdp_domain_id, COALESCE(h.host_id_unique_name_tdp,h.host_id_unique_name) AS host_id &#xA;&#x9;FROM itdp.host h &#xA;&#x9;&#x9;JOIN itdp.domain d ON h.itdp_domain_id=d.id AND  (d.dm_status).domain IS null AND&#xA;&#x9;&#x9;&#x9; d.tld = 'in' AND d.dm_source='opensrs'&#xA;&#x9;&#x9;JOIN public.domain pd ON h.itdp_domain_id=pd.id &#xA;&#x9;&#x9;JOIN ONLY public.host ph ON COALESCE(h.host_id_unique_name_tdp,h.host_id_unique_name)=ph.id &#xA;        LEFT JOIN  public.domain_host pdh ON pdh.host_id = COALESCE(h.host_id_unique_name_tdp,h.host_id_unique_name) AND pdh.domain_id =h.itdp_domain_id &#xA;        WHERE h.TLD  = 'in' AND  h.dm_source='opensrs'            &#xA;         AND pdh.host_id IS NULL)  ; " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host\domain_host"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{18AB3945-2800-4100-ADF6-A88BDA152E96}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="domain_host"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"DO $$
	DECLARE    _sql text; 
BEGIN

SET work_mem TO '1900MB'  ;      
--ALTER TABLE public.domain_host DISABLE  TRIGGER zz_60_trail_domain_host;
--ALTER TABLE public.domain_host DISABLE  TRIGGER zz_50_audit_domain_host;

IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	DROP TABLE IF EXISTS itdp.temp_list_constraints1;
	DROP TABLE IF EXISTS itdp.temp_list_index1;
	--save list of CONSTRAINTS 
	CREATE TABLE itdp.temp_list_constraints1
		AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname
		FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            
		WHERE conrelid =(SELECT 'public.domain_host'::regclass::OID) );
	--save list of indexes		
	CREATE TABLE itdp.temp_list_index1 AS (SELECT * FROM pg_indexes WHERE schemaname = 'public' AND TABLEname='domain_host');
		
	--DROP constraints
	SELECT string_agg('ALTER TABLE public.domain_host DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint	
	 	WHERE conrelid =(SELECT 'public.domain_host'::regclass::OID) INTO _sql;
	IF _sql IS NOT NULL THEN                  
        EXECUTE _sql;
    END IF;
   
   -- drop  indexes --   
    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')
		   FROM   pg_index  i   
		   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'
		   WHERE  i.indrelid = 'public.domain_host'::regclass AND    d.objid IS NULL   INTO _sql;
	IF _sql IS NOT NULL THEN                  
    	    EXECUTE _sql;
    END IF;
	 
END IF;

    INSERT INTO public.domain_host  ( domain_id, host_id)
         SELECT itdp_domain_id, host_id 
         FROM itdp.domain_host_temp;        

IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	-- recreate constraints	 
     IF (SELECT count(*) FROM itdp.temp_list_constraints1) &gt;0 THEN 
		 EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints1);
	 END IF;	
	--recreate indexes
	IF (SELECT count(*) FROM itdp.temp_list_index1) &gt;0 THEN 
		EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index1);
	END IF;
END IF;


--ALTER TABLE public.domain_host ENABLE TRIGGER zz_60_trail_domain_host;	 
--ALTER TABLE public.domain_host ENABLE  TRIGGER zz_50_audit_domain_host;
ANALYSE public.domain_host;
COMMIT;

END $$
"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="DO $$&#xA;&#x9;DECLARE    _sql text; &#xA;BEGIN&#xA;&#xA;SET work_mem TO '1900MB'  ;      &#xA;--ALTER TABLE public.domain_host DISABLE  TRIGGER zz_60_trail_domain_host;&#xA;--ALTER TABLE public.domain_host DISABLE  TRIGGER zz_50_audit_domain_host;&#xA;&#xA;IF  'in' in ('com' ,'net') THEN&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_constraints1;&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_index1;&#xA;&#x9;--save list of CONSTRAINTS &#xA;&#x9;CREATE TABLE itdp.temp_list_constraints1&#xA;&#x9;&#x9;AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname&#xA;&#x9;&#x9;FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            &#xA;&#x9;&#x9;WHERE conrelid =(SELECT 'public.domain_host'::regclass::OID) );&#xA;&#x9;--save list of indexes&#x9;&#x9;&#xA;&#x9;CREATE TABLE itdp.temp_list_index1 AS (SELECT * FROM pg_indexes WHERE schemaname = 'public' AND TABLEname='domain_host');&#xA;&#x9;&#x9;&#xA;&#x9;--DROP constraints&#xA;&#x9;SELECT string_agg('ALTER TABLE public.domain_host DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint&#x9;&#xA;&#x9; &#x9;WHERE conrelid =(SELECT 'public.domain_host'::regclass::OID) INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;        EXECUTE _sql;&#xA;    END IF;&#xA;   &#xA;   -- drop  indexes --   &#xA;    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')&#xA;&#x9;&#x9;   FROM   pg_index  i   &#xA;&#x9;&#x9;   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'&#xA;&#x9;&#x9;   WHERE  i.indrelid = 'public.domain_host'::regclass AND    d.objid IS NULL   INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;    &#x9;    EXECUTE _sql;&#xA;    END IF;&#xA;&#x9; &#xA;END IF;&#xA;&#xA;    INSERT INTO public.domain_host  ( domain_id, host_id)&#xA;         SELECT itdp_domain_id, host_id &#xA;         FROM itdp.domain_host_temp;        &#xA;&#xA;IF  'in' in ('com' ,'net') THEN&#xA;&#x9;-- recreate constraints&#x9; &#xA;     IF (SELECT count(*) FROM itdp.temp_list_constraints1) &gt;0 THEN &#xA;&#x9;&#x9; EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints1);&#xA;&#x9; END IF;&#x9;&#xA;&#x9;--recreate indexes&#xA;&#x9;IF (SELECT count(*) FROM itdp.temp_list_index1) &gt;0 THEN &#xA;&#x9;&#x9;EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index1);&#xA;&#x9;END IF;&#xA;END IF;&#xA;&#xA;&#xA;--ALTER TABLE public.domain_host ENABLE TRIGGER zz_60_trail_domain_host;&#x9; &#xA;--ALTER TABLE public.domain_host ENABLE  TRIGGER zz_50_audit_domain_host;&#xA;ANALYSE public.domain_host;&#xA;COMMIT;&#xA;&#xA;END $$&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host.PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{A7738F17-C53B-4F42-ACBD-B4A0A4D3A35A}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host\Create itdp_domain_host_temp"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host\domain_host" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="03_4 Mark domain as migrated"
          DTS:DTSID="{C16170A1-EF76-4A97-8662-71A073CA37CC}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="03_5 Mark domain as migrated">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated\Mark domain as migrated in itdp_domain"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{6B5F743A-F29B-45FF-992D-3EBB90C50C29}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Mark domain as migrated in itdp_domain"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">" DO $$
	DECLARE    _sql text; 
BEGIN

if '"+ @[$Package::TLD] +"' = 'com' THEN	
	DROP TABLE IF EXISTS itdp.temp_list_constraints;
	DROP TABLE IF EXISTS itdp.temp_list_index;
	--save list of CONSTRAINTS 
	CREATE TABLE itdp.temp_list_constraints
		AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname
		FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            
		WHERE relname ='domain_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"' AND nspname='itdp' AND contype&lt;&gt;'p');          
		
	--save list of indexes		
	CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'itdp' AND TABLEname='domain_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"');
		
	--DROP constraints
	SELECT string_agg('ALTER TABLE itdp.domain_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+" DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint	
	 	INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            
		WHERE relname ='domain_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"' AND nspname='itdp' AND contype&lt;&gt;'p'    INTO _sql;
	IF _sql IS NOT NULL THEN                  
        EXECUTE _sql;
    END IF;   

    -- drop  indexes --   
	--I need to detach the partition, drop the indexnfor 1 partition, load into the partition, re-create the index and re-attach the partition.
    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')
		   FROM   pg_index  i   
		   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'
		   WHERE  i.indrelid = 'itdp.domain_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"'::regclass AND    d.objid IS NULL   INTO _sql;
	IF _sql IS NOT NULL THEN                  
    	    EXECUTE _sql;
    END IF;

END IF;

	UPDATE itdp.DOMAIN d SET dm_status.domain = TRUE ,dm_status.host = TRUE , dm_status.public_contact = NOT(t.is_thin) 	
	FROM itdp.DOMAIN dd
	JOIN public.DOMAIN pd ON pd.id=dd.id		
	JOIN itdp.tld t ON t.tld_name =dd.tld	
	WHERE dd.id=d.id AND  dd.tld='"+ @[$Package::TLD] +"' AND dd.dm_source='"+ @[$Package::Tenant] +"'
 		AND d.tld='"+ @[$Package::TLD] +"' AND d.dm_source='"+ @[$Package::Tenant] +"';

if '"+ @[$Package::TLD] +"' = 'com' THEN
	-- recreate constraints	 
     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN 
		 EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);
	 END IF;	
	--recreate indexes
 	IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN 
		EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);
	END IF;	END IF;
ANALYSE itdp.DOMAIN ;
COMMIT;
END $$"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource=" DO $$&#xA;&#x9;DECLARE    _sql text; &#xA;BEGIN&#xA;&#xA;if 'in' = 'com' THEN&#x9;&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_constraints;&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_index;&#xA;&#x9;--save list of CONSTRAINTS &#xA;&#x9;CREATE TABLE itdp.temp_list_constraints&#xA;&#x9;&#x9;AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname&#xA;&#x9;&#x9;FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            &#xA;&#x9;&#x9;WHERE relname ='domain_opensrs_in' AND nspname='itdp' AND contype&lt;&gt;'p');          &#xA;&#x9;&#x9;&#xA;&#x9;--save list of indexes&#x9;&#x9;&#xA;&#x9;CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'itdp' AND TABLEname='domain_opensrs_in');&#xA;&#x9;&#x9;&#xA;&#x9;--DROP constraints&#xA;&#x9;SELECT string_agg('ALTER TABLE itdp.domain_opensrs_in DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint&#x9;&#xA;&#x9; &#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            &#xA;&#x9;&#x9;WHERE relname ='domain_opensrs_in' AND nspname='itdp' AND contype&lt;&gt;'p'    INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;        EXECUTE _sql;&#xA;    END IF;   &#xA;&#xA;    -- drop  indexes --   &#xA;&#x9;--I need to detach the partition, drop the indexnfor 1 partition, load into the partition, re-create the index and re-attach the partition.&#xA;    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')&#xA;&#x9;&#x9;   FROM   pg_index  i   &#xA;&#x9;&#x9;   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'&#xA;&#x9;&#x9;   WHERE  i.indrelid = 'itdp.domain_opensrs_in'::regclass AND    d.objid IS NULL   INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;    &#x9;    EXECUTE _sql;&#xA;    END IF;&#xA;&#xA;END IF;&#xA;&#xA;&#x9;UPDATE itdp.DOMAIN d SET dm_status.domain = TRUE ,dm_status.host = TRUE , dm_status.public_contact = NOT(t.is_thin) &#x9;&#xA;&#x9;FROM itdp.DOMAIN dd&#xA;&#x9;JOIN public.DOMAIN pd ON pd.id=dd.id&#x9;&#x9;&#xA;&#x9;JOIN itdp.tld t ON t.tld_name =dd.tld&#x9;&#xA;&#x9;WHERE dd.id=d.id AND  dd.tld='in' AND dd.dm_source='opensrs'&#xA; &#x9;&#x9;AND d.tld='in' AND d.dm_source='opensrs';&#xA;&#xA;if 'in' = 'com' THEN&#xA;&#x9;-- recreate constraints&#x9; &#xA;     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN &#xA;&#x9;&#x9; EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);&#xA;&#x9; END IF;&#x9;&#xA;&#x9;--recreate indexes&#xA; &#x9;IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN &#xA;&#x9;&#x9;EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);&#xA;&#x9;END IF;&#x9;END IF;&#xA;ANALYSE itdp.DOMAIN ;&#xA;COMMIT;&#xA;END $$" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated\Mark TLD as migrated in itdp_tld"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{7B97CF5F-EAF2-48D4-BA3E-2E3697DB906C}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Mark TLD as migrated in itdp_tld"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN ;
 DO $$
 BEGIN
 	IF '"+ @[$Package::Tenant] +"'='opensrs'	 THEN  
	UPDATE  itdp.tld t
	SET result_domain.extract = (SELECT count(*) FROM dm_opensrs.domainname_ WHERE lower(tld)='"+ @[$Package::TLD] +"' ),
		result_host.extract=(SELECT count(*) FROM dm_opensrs.nameservers_ n JOIN dm_opensrs.domainname_ d ON d.domainnameid=n.domainnameid  WHERE lower(tld)='"+ @[$Package::TLD] +"' ),
		result_contact.extract=(SELECT count(*) FROM dm_opensrs.contact_ c  WHERE tld='"+ @[$Package::TLD] +"' ),
		result_domain.dm_enom = (SELECT count(*) FROM dm_opensrs.domainname WHERE tld='"+ @[$Package::TLD] +"' ),
		result_host.dm_enom=(SELECT count(*) FROM dm_opensrs.nameservers n  JOIN dm_opensrs.domainname d ON d.domainnameid=n.domainnameid  WHERE d.tld='"+ @[$Package::TLD] +"' ),
	result_contact.dm_enom=(SELECT count(*) FROM dm_opensrs.contact WHERE tld='"+ @[$Package::TLD] +"' ),
	result_domain.dm_enom_itdp_pk = (SELECT count(*) FROM dm_opensrs.domainname 
		WHERE  itdp_domain_id is not null and tld='"+ @[$Package::TLD] +"' ),
	result_host.dm_enom_itdp_pk=(SELECT count(*) FROM dm_opensrs.nameservers n 		
		 WHERE n.itdp_host_id is not null and  tld='"+ @[$Package::TLD] +"' ),
	result_contact.dm_enom_itdp_pk=(SELECT count(*) FROM dm_opensrs.contact WHERE itdp_contact_id is not null and tld='"+ @[$Package::TLD] +"' )
	WHERE t.TLD_name  = '"+ @[$Package::TLD] +"' AND t.dm_source='"+ @[$Package::Tenant] +"'  AND phase = '"+@[$Package::Migration_phase]+"';
END IF ;
END $$;


 DO $$
 BEGIN
 	IF '"+ @[$Package::Tenant] +"'='enom'	 THEN  
	UPDATE  itdp.tld t
	SET result_domain.extract = (SELECT count(*) FROM dm_enom.domainname_ WHERE lower(tld)='"+ @[$Package::TLD] +"' ),
		result_host.extract=(SELECT count(*) FROM dm_enom.nameservers_ n JOIN dm_enom.domainname_ d ON d.domainnameid=n.domainnameid  WHERE lower(tld)='"+ @[$Package::TLD] +"' ),
		result_contact.extract=(SELECT count(*) FROM dm_enom.contact_ c  WHERE tld='"+ @[$Package::TLD] +"' ),
		result_domain.dm_enom = (SELECT count(*) FROM dm_enom.domainname WHERE tld='"+ @[$Package::TLD] +"' ),
		result_host.dm_enom=(SELECT count(*) FROM dm_enom.nameservers n  JOIN dm_enom.domainname d ON d.domainnameid=n.domainnameid  WHERE d.tld='"+ @[$Package::TLD] +"' ),
	result_contact.dm_enom=(SELECT count(*) FROM dm_enom.contact WHERE tld='"+ @[$Package::TLD] +"' ),
	result_domain.dm_enom_itdp_pk = (SELECT count(*) FROM dm_enom.domainname 
		WHERE  itdp_domain_id is not null and tld='"+ @[$Package::TLD] +"' ),
	result_host.dm_enom_itdp_pk=(SELECT count(*) FROM dm_enom.nameservers n 		
		 WHERE n.itdp_host_id is not null and  tld='"+ @[$Package::TLD] +"' ),
	result_contact.dm_enom_itdp_pk=(SELECT count(*) FROM dm_enom.contact WHERE itdp_contact_id is not null and tld='"+ @[$Package::TLD] +"' )
	WHERE t.TLD_name  = '"+ @[$Package::TLD] +"' AND t.dm_source='"+ @[$Package::Tenant] +"'  AND phase = '"+@[$Package::Migration_phase]+"';
END IF ;
END $$;

UPDATE  itdp.tld t
	SET
    result_domain.itdp = (SELECT count(*) FROM itdp.domain WHERE tld='"+ @[$Package::TLD] +"' and dm_source='"+ @[$Package::Tenant] +"'  ),
	result_domain.error = (SELECT count(*) FROM itdp.domain_error_records WHERE tld='"+ @[$Package::TLD] +"' and dm_source='"+ @[$Package::Tenant] +"' ),
	result_domain.tdp = (SELECT count(*) FROM public.DOMAIN d 
	    JOIN public.v_accreditation_tld vat ON vat.accreditation_tld_id=d.accreditation_tld_id 
		JOIN itdp.domain id on id.id=d.id  and id.tld='"+ @[$Package::TLD] +"' and id.dm_source='"+ @[$Package::Tenant] +"' 
	    WHERE  tenant_name='"+ @[$Package::Tenant] +"'),
result_host.itdp=(SELECT count(*) FROM itdp.host WHERE tld='"+ @[$Package::TLD] +"' and dm_source='"+ @[$Package::Tenant] +"'  ),
	result_host.error=(SELECT count(*) FROM itdp.host_error_records WHERE tld='"+ @[$Package::TLD] +"' and dm_source='"+ @[$Package::Tenant] +"'  ),
	result_host.tdp=( SELECT count(*) FROM  public.domain_host dh 
		 JOIN public.domain d ON dh.domain_id=d.id
		 JOIN public.v_accreditation_tld vat ON vat.accreditation_tld_id=d.accreditation_tld_id		
		 JOIN itdp.domain id on id.id =dh.domain_id 	and id.tld='"+ @[$Package::TLD] +"' and id.dm_source='"+ @[$Package::Tenant] +"' 
	   	 WHERE  tenant_name='"+ @[$Package::Tenant] +"' ) ,
	result_contact.itdp=(SELECT count(*) FROM itdp.contact WHERE tld='"+ @[$Package::TLD] +"' and dm_source='"+ @[$Package::Tenant] +"' ),
	result_contact.error=(SELECT count(*) FROM itdp.contact_error_records WHERE tld='"+ @[$Package::TLD] +"' and dm_source='"+ @[$Package::Tenant] +"'),
	result_contact.tdp=(SELECT count(*)  FROM  public.contact c
		  JOIN public.domain_contact dc ON dc.contact_id=c.id 
		  JOIN public.domain d ON dc.domain_id=d.id
		  JOIN public.v_accreditation_tld vat ON vat.accreditation_tld_id=d.accreditation_tld_id 
		  JOIN itdp.contact ic on ic.id=c.id and ic.tld='"+ @[$Package::TLD] +"' and ic.dm_source='"+ @[$Package::Tenant] +"' 
			 WHERE  tenant_name='"+ @[$Package::Tenant] +"'  AND  ic.tld ='"+ @[$Package::TLD] +"' ),
	updated_date = now()
WHERE t.TLD_name  = '"+ @[$Package::TLD] +"' AND t.dm_source='"+ @[$Package::Tenant] +"'  AND phase = '"+@[$Package::Migration_phase]+"';

UPDATE  itdp.tld 
SET migration_status =  CASE
	WHEN (result_domain).dm_enom=(result_domain).tdp THEN 'Done' 
	WHEN (result_domain).itdp&lt;&gt;(result_domain).tdp  OR (result_host).itdp&lt;&gt;(result_host).tdp  OR (result_contact).itdp&lt;&gt; (result_contact).tdp THEN 'Repeat TDP' 
	ELSE NULL END 
WHERE TLD_name  = '"+ @[$Package::TLD] +"' AND dm_source='"+ @[$Package::Tenant] +"'  AND phase = '"+@[$Package::Migration_phase]+"';
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="BEGIN ;&#xA; DO $$&#xA; BEGIN&#xA; &#x9;IF 'opensrs'='opensrs'&#x9; THEN  &#xA;&#x9;UPDATE  itdp.tld t&#xA;&#x9;SET result_domain.extract = (SELECT count(*) FROM dm_opensrs.domainname_ WHERE lower(tld)='in' ),&#xA;&#x9;&#x9;result_host.extract=(SELECT count(*) FROM dm_opensrs.nameservers_ n JOIN dm_opensrs.domainname_ d ON d.domainnameid=n.domainnameid  WHERE lower(tld)='in' ),&#xA;&#x9;&#x9;result_contact.extract=(SELECT count(*) FROM dm_opensrs.contact_ c  WHERE tld='in' ),&#xA;&#x9;&#x9;result_domain.dm_enom = (SELECT count(*) FROM dm_opensrs.domainname WHERE tld='in' ),&#xA;&#x9;&#x9;result_host.dm_enom=(SELECT count(*) FROM dm_opensrs.nameservers n  JOIN dm_opensrs.domainname d ON d.domainnameid=n.domainnameid  WHERE d.tld='in' ),&#xA;&#x9;result_contact.dm_enom=(SELECT count(*) FROM dm_opensrs.contact WHERE tld='in' ),&#xA;&#x9;result_domain.dm_enom_itdp_pk = (SELECT count(*) FROM dm_opensrs.domainname &#xA;&#x9;&#x9;WHERE  itdp_domain_id is not null and tld='in' ),&#xA;&#x9;result_host.dm_enom_itdp_pk=(SELECT count(*) FROM dm_opensrs.nameservers n &#x9;&#x9;&#xA;&#x9;&#x9; WHERE n.itdp_host_id is not null and  tld='in' ),&#xA;&#x9;result_contact.dm_enom_itdp_pk=(SELECT count(*) FROM dm_opensrs.contact WHERE itdp_contact_id is not null and tld='in' )&#xA;&#x9;WHERE t.TLD_name  = 'in' AND t.dm_source='opensrs'  AND phase = '1.3';&#xA;END IF ;&#xA;END $$;&#xA;&#xA;&#xA; DO $$&#xA; BEGIN&#xA; &#x9;IF 'opensrs'='enom'&#x9; THEN  &#xA;&#x9;UPDATE  itdp.tld t&#xA;&#x9;SET result_domain.extract = (SELECT count(*) FROM dm_enom.domainname_ WHERE lower(tld)='in' ),&#xA;&#x9;&#x9;result_host.extract=(SELECT count(*) FROM dm_enom.nameservers_ n JOIN dm_enom.domainname_ d ON d.domainnameid=n.domainnameid  WHERE lower(tld)='in' ),&#xA;&#x9;&#x9;result_contact.extract=(SELECT count(*) FROM dm_enom.contact_ c  WHERE tld='in' ),&#xA;&#x9;&#x9;result_domain.dm_enom = (SELECT count(*) FROM dm_enom.domainname WHERE tld='in' ),&#xA;&#x9;&#x9;result_host.dm_enom=(SELECT count(*) FROM dm_enom.nameservers n  JOIN dm_enom.domainname d ON d.domainnameid=n.domainnameid  WHERE d.tld='in' ),&#xA;&#x9;result_contact.dm_enom=(SELECT count(*) FROM dm_enom.contact WHERE tld='in' ),&#xA;&#x9;result_domain.dm_enom_itdp_pk = (SELECT count(*) FROM dm_enom.domainname &#xA;&#x9;&#x9;WHERE  itdp_domain_id is not null and tld='in' ),&#xA;&#x9;result_host.dm_enom_itdp_pk=(SELECT count(*) FROM dm_enom.nameservers n &#x9;&#x9;&#xA;&#x9;&#x9; WHERE n.itdp_host_id is not null and  tld='in' ),&#xA;&#x9;result_contact.dm_enom_itdp_pk=(SELECT count(*) FROM dm_enom.contact WHERE itdp_contact_id is not null and tld='in' )&#xA;&#x9;WHERE t.TLD_name  = 'in' AND t.dm_source='opensrs'  AND phase = '1.3';&#xA;END IF ;&#xA;END $$;&#xA;&#xA;UPDATE  itdp.tld t&#xA;&#x9;SET&#xA;    result_domain.itdp = (SELECT count(*) FROM itdp.domain WHERE tld='in' and dm_source='opensrs'  ),&#xA;&#x9;result_domain.error = (SELECT count(*) FROM itdp.domain_error_records WHERE tld='in' and dm_source='opensrs' ),&#xA;&#x9;result_domain.tdp = (SELECT count(*) FROM public.DOMAIN d &#xA;&#x9;    JOIN public.v_accreditation_tld vat ON vat.accreditation_tld_id=d.accreditation_tld_id &#xA;&#x9;&#x9;JOIN itdp.domain id on id.id=d.id  and id.tld='in' and id.dm_source='opensrs' &#xA;&#x9;    WHERE  tenant_name='opensrs'),&#xA;result_host.itdp=(SELECT count(*) FROM itdp.host WHERE tld='in' and dm_source='opensrs'  ),&#xA;&#x9;result_host.error=(SELECT count(*) FROM itdp.host_error_records WHERE tld='in' and dm_source='opensrs'  ),&#xA;&#x9;result_host.tdp=( SELECT count(*) FROM  public.domain_host dh &#xA;&#x9;&#x9; JOIN public.domain d ON dh.domain_id=d.id&#xA;&#x9;&#x9; JOIN public.v_accreditation_tld vat ON vat.accreditation_tld_id=d.accreditation_tld_id&#x9;&#x9;&#xA;&#x9;&#x9; JOIN itdp.domain id on id.id =dh.domain_id &#x9;and id.tld='in' and id.dm_source='opensrs' &#xA;&#x9;   &#x9; WHERE  tenant_name='opensrs' ) ,&#xA;&#x9;result_contact.itdp=(SELECT count(*) FROM itdp.contact WHERE tld='in' and dm_source='opensrs' ),&#xA;&#x9;result_contact.error=(SELECT count(*) FROM itdp.contact_error_records WHERE tld='in' and dm_source='opensrs'),&#xA;&#x9;result_contact.tdp=(SELECT count(*)  FROM  public.contact c&#xA;&#x9;&#x9;  JOIN public.domain_contact dc ON dc.contact_id=c.id &#xA;&#x9;&#x9;  JOIN public.domain d ON dc.domain_id=d.id&#xA;&#x9;&#x9;  JOIN public.v_accreditation_tld vat ON vat.accreditation_tld_id=d.accreditation_tld_id &#xA;&#x9;&#x9;  JOIN itdp.contact ic on ic.id=c.id and ic.tld='in' and ic.dm_source='opensrs' &#xA;&#x9;&#x9;&#x9; WHERE  tenant_name='opensrs'  AND  ic.tld ='in' ),&#xA;&#x9;updated_date = now()&#xA;WHERE t.TLD_name  = 'in' AND t.dm_source='opensrs'  AND phase = '1.3';&#xA;&#xA;UPDATE  itdp.tld &#xA;SET migration_status =  CASE&#xA;&#x9;WHEN (result_domain).dm_enom=(result_domain).tdp THEN 'Done' &#xA;&#x9;WHEN (result_domain).itdp&lt;&gt;(result_domain).tdp  OR (result_host).itdp&lt;&gt;(result_host).tdp  OR (result_contact).itdp&lt;&gt; (result_contact).tdp THEN 'Repeat TDP' &#xA;&#x9;ELSE NULL END &#xA;WHERE TLD_name  = 'in' AND dm_source='opensrs'  AND phase = '1.3';&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{D55896E4-5B79-45A8-BB1F-06E4C0FF3FB6}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated\Mark domain as migrated in itdp_domain"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated\Mark TLD as migrated in itdp_tld" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:Disabled="True"
          DTS:DTSID="{2072928C-3673-43BF-A1BE-2E8F460E1A35}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:ISOLevel="4096"
          DTS:LocaleID="-1"
          DTS:ObjectName="Vacuum Analyse">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">FINDSTRING(@[User::list_big_tlds] , @[$Package::TLD], 1)   &gt; 0 ? false :true</DTS:PropertyExpression>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum  public_domain_contact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{EFE0CEC0-EF77-4ABB-9484-0EBE273D8E63}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum  public_domain_contact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="VACUUM  analyse public.domain_contact" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_contact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{14F809BD-388D-4490-8611-4F48CAE2D2D1}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum public_contact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  public.contact" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_contact_postal"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{68A68495-54BB-4802-B30F-9FACC46B07BB}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum public_contact_postal"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  public.contact_postal" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_domain"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{73BCA164-7729-4062-AC8B-AB1A1E684AA3}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum public_domain"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  public.domain;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_domain_host"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{BD46E2E4-10C9-4F5C-B9C6-249D50538505}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum public_domain_host"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  public.domain_host" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_domain_lock"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{169A87D3-B809-404B-84E0-CEA86E36770A}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum public_domain_lock"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="5">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  public.domain_lock;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_domain_RGP"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{D08F5B73-2F4F-40BC-9A97-C932702E513B}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum public_domain_RGP"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="6">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  public.domain_RGP_status;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_host"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{3B0B3404-C097-4FED-A43B-2CD1E2EB6298}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum public_host"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="7">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  public.host" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_order"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{49B51AB1-B174-43E0-990D-B570322F8AE3}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum public_order"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="8">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  public.order;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_order_import_domain"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{1B80AAC4-03D2-4DFE-A6E9-A962B61CE27B}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum public_order_import_domain"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="9">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  public.order_item_import_domain;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{984B00AB-C346-4FEC-9A0B-A2DCECABAF89}"
          DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{CBF2AE9B-B199-437D-95E8-E871E6F017B3}"
          DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{E44948E9-4CCD-426D-AF37-960AAA522FB8}"
          DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{EF261EEA-9E2B-4BB2-9687-36515F2BB5C9}"
          DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{1ACE84C4-AB93-4A87-B88B-7E55DED87165}"
          DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{0745C298-15CF-4440-A967-8CC2DEB318D9}"
          DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 8]"
          DTS:CreationName=""
          DTS:DTSID="{89F60406-391C-4DD5-B1A7-936AAC92469D}"
          DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 8"
          DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 9]"
          DTS:CreationName=""
          DTS:DTSID="{7D4ED6C9-923F-484F-ACE3-7F4F41F69578}"
          DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 9"
          DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{CBA59190-149D-40F2-A2AE-92F958ACE1CF}"
      DTS:EventID="10485920"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{4212BFF6-78BC-4C97-9F95-AB085EE45481}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Save errorlog"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5F12E41B-EE5F-4F2A-AAA3-3D9D5F77DB3C}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Save errorlog"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"INSERT INTO itdp.ssis_errorlog
(id, machinename, packagename, taskname, errorcode, errordescription, dated)
VALUES(gen_random_uuid(), '"+ @[System::MachineName]+" ', '"+ @[System::PackageName] +"', '"+ @[System::SourceName]  +"', "+(DT_WSTR,12) @[System::ErrorCode] +", '"+ REPLACE(@[System::ErrorDescription],"'","") +"', now())"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6BE7A12-F5C8-4E37-9D11-8A501B6F2211}"
              SQLTask:SqlStatementSource="INSERT INTO itdp.ssis_errorlog&#xA;(id, machinename, packagename, taskname, errorcode, errordescription, dated)&#xA;VALUES(gen_random_uuid(), 'CEN0VWSQLMGR01 ', 'ITDP-TDP', '', 0, '', now())" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="128" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="204,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Create itdp_temp_domain_lock"
          TopLeft="14.9962807903507,165.859257805487" />
        <NodeLayout
          Size="167.2,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Populate domain _RGP_status table"
          TopLeft="216.140730455719,226.551849185375" />
        <NodeLayout
          Size="169.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\populate domain_lock table"
          TopLeft="22.8148138687748,234.085185670668" />
        <NodeLayout
          Size="252.8,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Transfer domains, create import order"
          TopLeft="9.53332673129103,10.0333330319984" />
        <NodeLayout
          Size="185.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Vacuum public_domain"
          TopLeft="42.6666389836216,76.666665159994" />
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain.PrecedenceConstraints[Constraint]"
          TopLeft="106.133305650288,118.266665159994">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="10.8629751400624,47.5925926454931"
              Start="0,0"
              End="10.8629751400624,40.0925926454931">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.2800630631955" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.2800630631955"
                    Point2="0,19.2800630631955"
                    Point3="4,19.2800630631955" />
                  <mssgle:LineSegment
                    End="6.86297514006242,19.2800630631955" />
                  <mssgle:CubicBezierSegment
                    Point1="6.86297514006242,19.2800630631955"
                    Point2="10.8629751400624,19.2800630631955"
                    Point3="10.8629751400624,23.2800630631955" />
                  <mssgle:LineSegment
                    End="10.8629751400624,40.0925926454931" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain.PrecedenceConstraints[Constraint 1]"
          TopLeft="165.599972316955,118.266665159994">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="134.140758138764,108.285184025381"
              Start="0,0"
              End="134.140758138764,100.785184025381">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.8670192307075" />
                  <mssgle:CubicBezierSegment
                    Point1="0,39.8670192307075"
                    Point2="0,43.8670192307075"
                    Point3="4,43.8670192307075" />
                  <mssgle:LineSegment
                    End="130.140758138764,43.8670192307075" />
                  <mssgle:CubicBezierSegment
                    Point1="130.140758138764,43.8670192307075"
                    Point2="134.140758138764,43.8670192307075"
                    Point3="134.140758138764,47.8670192307075" />
                  <mssgle:LineSegment
                    End="134.140758138764,100.785184025381" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain.PrecedenceConstraints[Constraint 4]"
          TopLeft="135.699982857456,51.6333330319984">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25.0333321279956"
              Start="0,0"
              End="0,17.5333321279956">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5333321279956" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain.PrecedenceConstraints[Constraint 8]"
          TopLeft="116.996280790351,207.459257805487">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9.38146692157598,26.6259278651814"
              Start="0,0"
              End="-9.38146692157598,19.1259278651814">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.31296393259068" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.31296393259068"
                    Point2="0,13.3129639325907"
                    Point3="-4,13.3129639325907" />
                  <mssgle:LineSegment
                    End="-5.38146692157598,13.3129639325907" />
                  <mssgle:CubicBezierSegment
                    Point1="-5.38146692157598,13.3129639325907"
                    Point2="-9.38146692157598,13.3129639325907"
                    Point3="-9.38146692157598,17.3129639325907" />
                  <mssgle:LineSegment
                    End="-9.38146692157598,19.1259278651814" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="388.8,330.4"
          Size="388.8,373.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain"
          TopLeft="38.499967080852,213.233331694073" />
        <NodeLayout
          Size="100,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Host"
          TopLeft="230.362931930836,89.3111069547036" />
        <NodeLayout
          Size="134.4,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Host_addr"
          TopLeft="195.028521864473,193.828567502612" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Mark duplicate host by name in ITDP"
          TopLeft="12.5666473158553,123.866663496628" />
        <NodeLayout
          Size="144.8,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Mark host that exists inTDP"
          TopLeft="31.0999903018274,16.7333334116804" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Unigue host"
          TopLeft="216.207387940237,10.0740735450643" />
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Vacuum itdp_host"
          TopLeft="28,69.2666664798395" />
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host.PrecedenceConstraints[Constraint]"
          TopLeft="31.0999903018274,37.5333334116804">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-3.09999030182738,52.5333330681591"
              Start="0,0"
              End="-10.5999903018274,52.5333330681591">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-21.5999903018274,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-21.5999903018274,0"
                    Point2="-25.5999903018274,0"
                    Point3="-25.5999903018274,4" />
                  <mssgle:LineSegment
                    End="-25.5999903018274,48.5333330681591" />
                  <mssgle:CubicBezierSegment
                    Point1="-25.5999903018274,48.5333330681591"
                    Point2="-25.5999903018274,52.5333330681591"
                    Point3="-21.5999903018274,52.5333330681591" />
                  <mssgle:LineSegment
                    End="-10.5999903018274,52.5333330681591" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host.PrecedenceConstraints[Constraint 1]"
          TopLeft="152.566647315855,150.266663496628">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="77.7962846149807,-40.1555565419244"
              Start="0,0"
              End="70.2962846149807,-40.1555565419244">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28.8473201707696,0" />
                  <mssgle:CubicBezierSegment
                    Point1="28.8473201707696,0"
                    Point2="32.8473201707696,0"
                    Point3="32.8473201707696,-4" />
                  <mssgle:LineSegment
                    End="32.8473201707696,-36.1555565419244" />
                  <mssgle:CubicBezierSegment
                    Point1="32.8473201707696,-36.1555565419244"
                    Point2="32.8473201707696,-40.1555565419244"
                    Point3="36.8473201707696,-40.1555565419244" />
                  <mssgle:LineSegment
                    End="70.2962846149807,-40.1555565419244" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host.PrecedenceConstraints[Constraint 2]"
          TopLeft="280.685159935536,51.6740735450643">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.6370334096393"
              Start="0,0"
              End="0,30.1370334096393">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.1370334096393" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host.PrecedenceConstraints[Constraint 3]"
          TopLeft="108.8,110.866666479839">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="43.7666473158553,33.7999970167889"
              Start="0,0"
              End="36.2666473158553,33.7999970167889">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.7999970167889" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.7999970167889"
                    Point2="0,33.7999970167889"
                    Point3="4,33.7999970167889" />
                  <mssgle:LineSegment
                    End="36.2666473158553,33.7999970167889" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host.PrecedenceConstraints[Constraint 4]"
          TopLeft="280.362931930836,130.911106954704">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-18.134410066363,62.9174605479089"
              Start="0,0"
              End="-18.134410066363,55.4174605479089">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.4587302739544" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.4587302739544"
                    Point2="0,31.4587302739544"
                    Point3="-4,31.4587302739544" />
                  <mssgle:LineSegment
                    End="-14.134410066363,31.4587302739544" />
                  <mssgle:CubicBezierSegment
                    Point1="-14.134410066363,31.4587302739544"
                    Point2="-18.134410066363,31.4587302739544"
                    Point3="-18.134410066363,35.4587302739544" />
                  <mssgle:LineSegment
                    End="-18.134410066363,55.4174605479089" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="348.8,290.4"
          Size="348.8,333.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host"
          TopLeft="517.133284796944,203.555553052469" />
        <NodeLayout
          Size="112,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\contact"
          TopLeft="33.7332806991235,79.9999971795085" />
        <NodeLayout
          Size="145.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\contact_postal"
          TopLeft="240.133280699124,145.599996094703" />
        <NodeLayout
          Size="201.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Create itdp_contact_postal_temp"
          TopLeft="203.299960524341,11.3999997649587" />
        <NodeLayout
          Size="169.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Create itdp_contact_temp"
          TopLeft="7.96663720789911,12.6666659555174" />
        <NodeLayout
          Size="243.2,46.4"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Create itdp_domain_contact_temp"
          TopLeft="12.137057005054,234.237038128537" />
        <NodeLayout
          Size="152,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\domain_contact"
          TopLeft="28.3148206984756,312.429627646178" />
        <NodeLayout
          Size="175.2,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Populate lost handle flag in contact_metadata"
          TopLeft="229.896246110659,298.162960895137" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\provision_contact"
          TopLeft="280.399927878382,191.066664798391" />
        <NodeLayout
          Size="144.8,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Vacuum public_contact"
          TopLeft="36.0333408004694,151.799998643995" />
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint]"
          TopLeft="131.233340800469,151.799998643995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="140.599953057205,-98.7999988790363"
              Start="0,0"
              End="140.599953057205,-91.2999988790363">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-45.5877838659606" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-45.5877838659606"
                    Point2="0,-49.5877838659606"
                    Point3="4,-49.5877838659606" />
                  <mssgle:LineSegment
                    End="136.599953057205,-49.5877838659606" />
                  <mssgle:CubicBezierSegment
                    Point1="136.599953057205,-49.5877838659606"
                    Point2="140.599953057205,-49.5877838659606"
                    Point3="140.599953057205,-53.5877838659606" />
                  <mssgle:LineSegment
                    End="140.599953057205,-91.2999988790363" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint 1]"
          TopLeft="89.7332806991235,121.599997179508">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="18.7000601013459,30.2000014644865"
              Start="0,0"
              End="18.7000601013459,22.7000014644865">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.1000007322433" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.1000007322433"
                    Point2="0,15.1000007322433"
                    Point3="4,15.1000007322433" />
                  <mssgle:LineSegment
                    End="14.7000601013459,15.1000007322433" />
                  <mssgle:CubicBezierSegment
                    Point1="14.7000601013459,15.1000007322433"
                    Point2="18.7000601013459,15.1000007322433"
                    Point3="18.7000601013459,19.1000007322433" />
                  <mssgle:LineSegment
                    End="18.7000601013459,22.7000014644865" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint 2]"
          TopLeft="108.433340800469,193.399998643995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="25.3037162045846,40.8370394845422"
              Start="0,0"
              End="25.3037162045846,33.3370394845422">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.4185197422711" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.4185197422711"
                    Point2="0,20.4185197422711"
                    Point3="4,20.4185197422711" />
                  <mssgle:LineSegment
                    End="21.3037162045846,20.4185197422711" />
                  <mssgle:CubicBezierSegment
                    Point1="21.3037162045846,20.4185197422711"
                    Point2="25.3037162045846,20.4185197422711"
                    Point3="25.3037162045846,24.4185197422711" />
                  <mssgle:LineSegment
                    End="25.3037162045846,33.3370394845422" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint 6]"
          TopLeft="336.366627191007,52.9999997649587">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-23.4333464918835,92.5999963297443"
              Start="0,0"
              End="-23.4333464918835,85.0999963297443">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.4774788295186" />
                  <mssgle:CubicBezierSegment
                    Point1="0,33.4774788295186"
                    Point2="0,37.4774788295186"
                    Point3="-4,37.4774788295186" />
                  <mssgle:LineSegment
                    End="-19.4333464918835,37.4774788295186" />
                  <mssgle:CubicBezierSegment
                    Point1="-19.4333464918835,37.4774788295186"
                    Point2="-23.4333464918835,37.4774788295186"
                    Point3="-23.4333464918835,41.4774788295186" />
                  <mssgle:LineSegment
                    End="-23.4333464918835,85.0999963297443" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint 7]"
          TopLeft="133.737057005054,280.637038128537">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-29.4222363065784,31.7925895176409"
              Start="0,0"
              End="-29.4222363065784,24.2925895176409">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.8962947588204" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.8962947588204"
                    Point2="0,15.8962947588204"
                    Point3="-4,15.8962947588204" />
                  <mssgle:LineSegment
                    End="-25.4222363065784,15.8962947588204" />
                  <mssgle:CubicBezierSegment
                    Point1="-25.4222363065784,15.8962947588204"
                    Point2="-29.4222363065784,15.8962947588204"
                    Point3="-29.4222363065784,19.8962947588204" />
                  <mssgle:LineSegment
                    End="-29.4222363065784,24.2925895176409" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint 8]"
          TopLeft="91.2499589535113,54.2666659555174">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25.7333312239911"
              Start="0,0"
              End="0,18.2333312239911">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.2333312239911" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="409.6,363.2"
          Size="409.6,406.4"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact"
          TopLeft="890.474016542716,241.162959177531" />
        <NodeLayout
          Size="142.4,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host\Create itdp_domain_host_temp"
          TopLeft="27.1666667121981,12.9333335382403" />
        <NodeLayout
          Size="137.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host\domain_host"
          TopLeft="20.4999960387765,94.733331278233" />
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host.PrecedenceConstraints[Constraint 5]"
          TopLeft="97.9666667121981,54.5333335382403">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-8.66667067342161,40.1999977399927"
              Start="0,0"
              End="-8.66667067342161,32.6999977399927">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.0999988699963" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.0999988699963"
                    Point2="0,20.0999988699963"
                    Point3="-4,20.0999988699963" />
                  <mssgle:LineSegment
                    End="-4.66667067342161,20.0999988699963" />
                  <mssgle:CubicBezierSegment
                    Point1="-4.66667067342161,20.0999988699963"
                    Point2="-8.66667067342161,20.0999988699963"
                    Point3="-8.66667067342161,24.0999988699963" />
                  <mssgle:LineSegment
                    End="-8.66667067342161,32.6999977399927" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="201.6,191.2"
          Size="201.6,233.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host"
          TopLeft="92.1370034602157,677.203700630758" />
        <NodeLayout
          Size="232.8,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated\Mark domain as migrated in itdp_domain"
          TopLeft="63.3030271448117,24.0939392646392" />
        <NodeLayout
          Size="180.8,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated\Mark TLD as migrated in itdp_tld"
          TopLeft="85.7666205434352,109.866664617591" />
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated.PrecedenceConstraints[Constraint]"
          TopLeft="177.934823844123,65.6939392646392">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.1727253529515"
              Start="0,0"
              End="0,36.6727253529515">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.6727253529515" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="313.6,160"
          Size="313.6,203.2"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated"
          TopLeft="357.775726639294,683.745451596758" />
        <NodeLayout
          Size="164,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum  public_domain_contact"
          TopLeft="160.400056276719,66.333335798251" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_contact"
          TopLeft="477.666646906073,69.2666660459174" />
        <NodeLayout
          Size="185.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_contact_postal"
          TopLeft="251.699998224278,70.6666657747159" />
        <NodeLayout
          Size="156.8,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_domain"
          TopLeft="4.79996175368751,3.1333331947194" />
        <NodeLayout
          Size="156.8,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_domain_host"
          TopLeft="14.2333433957579,62.8666700958543" />
        <NodeLayout
          Size="169.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_domain_lock"
          TopLeft="414.266644857163,9.16666886640928" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_domain_RGP"
          TopLeft="338.433315667179,72.6333357982494" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_host"
          TopLeft="500.099973500769,10.233336232172" />
        <NodeLayout
          Size="151.2,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_order"
          TopLeft="141.733299275903,6.79999989151975" />
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_order_import_domain"
          TopLeft="265.733292719393,5.06666657023948" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1153.6,120"
          Size="1153.6,163.2"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse"
          TopLeft="62.1666593361228,9.39999994575982" />
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint]"
          TopLeft="1095.27401654272,647.562959177531">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-580.698289903422,36.1824924192271"
              Start="0,0"
              End="-580.698289903422,28.6824924192271">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.0912462096135" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.0912462096135"
                    Point2="0,18.0912462096135"
                    Point3="-4,18.0912462096135" />
                  <mssgle:LineSegment
                    End="-576.698289903422,18.0912462096135" />
                  <mssgle:CubicBezierSegment
                    Point1="-576.698289903422,18.0912462096135"
                    Point2="-580.698289903422,18.0912462096135"
                    Point3="-580.698289903422,22.0912462096135" />
                  <mssgle:LineSegment
                    End="-580.698289903422,28.6824924192271" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 1]"
          TopLeft="427.299967080852,375.233331694073">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="463.174049461864,69.129627483458"
              Start="0,0"
              End="455.674049461864,69.129627483458">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="227.587024730932,0" />
                  <mssgle:CubicBezierSegment
                    Point1="227.587024730932,0"
                    Point2="231.587024730932,0"
                    Point3="231.587024730932,4" />
                  <mssgle:LineSegment
                    End="231.587024730932,65.129627483458" />
                  <mssgle:CubicBezierSegment
                    Point1="231.587024730932,65.129627483458"
                    Point2="231.587024730932,69.129627483458"
                    Point3="235.587024730932,69.129627483458" />
                  <mssgle:LineSegment
                    End="455.674049461864,69.129627483458" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 2]"
          TopLeft="691.533284796944,537.155553052469">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-466.329614670062,140.048147578289"
              Start="0,0"
              End="-466.329614670062,132.548147578289">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,79.3672437552649" />
                  <mssgle:CubicBezierSegment
                    Point1="0,79.3672437552649"
                    Point2="0,83.3672437552649"
                    Point3="-4,83.3672437552649" />
                  <mssgle:LineSegment
                    End="-462.329614670062,83.3672437552649" />
                  <mssgle:CubicBezierSegment
                    Point1="-462.329614670062,83.3672437552649"
                    Point2="-466.329614670062,83.3672437552649"
                    Point3="-466.329614670062,87.3672437552649" />
                  <mssgle:LineSegment
                    End="-466.329614670062,132.548147578289" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 3]"
          TopLeft="232.899967080852,537.233331694073">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-72.229630287303,139.970368936685"
              Start="0,0"
              End="-72.229630287303,132.470368936685">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,79.3209440284518" />
                  <mssgle:CubicBezierSegment
                    Point1="0,79.3209440284518"
                    Point2="0,83.3209440284518"
                    Point3="-4,83.3209440284518" />
                  <mssgle:LineSegment
                    End="-68.229630287303,83.3209440284518" />
                  <mssgle:CubicBezierSegment
                    Point1="-68.229630287303,83.3209440284518"
                    Point2="-72.229630287303,83.3209440284518"
                    Point3="-72.229630287303,87.3209440284518" />
                  <mssgle:LineSegment
                    End="-72.229630287303,132.470368936685" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 5]"
          TopLeft="293.737003460216,794.003700630758">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="64.0387231790784,-8.65824903399994"
              Start="0,0"
              End="56.5387231790784,-8.65824903399994">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28.0193615895392,0" />
                  <mssgle:CubicBezierSegment
                    Point1="28.0193615895392,0"
                    Point2="32.0193615895392,0"
                    Point3="32.0193615895392,-4" />
                  <mssgle:LineSegment
                    End="32.0193615895392,-4.65824903399994" />
                  <mssgle:CubicBezierSegment
                    Point1="32.0193615895392,-4.65824903399994"
                    Point2="32.0193615895392,-8.65824903399994"
                    Point3="36.0193615895392,-8.65824903399994" />
                  <mssgle:LineSegment
                    End="56.5387231790784,-8.65824903399994" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 7]"
          TopLeft="352.566659336123,172.59999994576">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-119.666692255271,40.6333317483132"
              Start="0,0"
              End="-119.666692255271,33.1333317483132">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.60691828841115" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.60691828841115"
                    Point2="0,13.6069182884112"
                    Point3="-4,13.6069182884112" />
                  <mssgle:LineSegment
                    End="-115.666692255271,13.6069182884112" />
                  <mssgle:CubicBezierSegment
                    Point1="-115.666692255271,13.6069182884112"
                    Point2="-119.666692255271,13.6069182884112"
                    Point3="-119.666692255271,17.6069182884112" />
                  <mssgle:LineSegment
                    End="-119.666692255271,33.1333317483132" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 8]"
          TopLeft="638.966659336123,172.59999994576">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="52.5666254608212,30.9555531067091"
              Start="0,0"
              End="52.5666254608212,23.4555531067091">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.4777765533546" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.4777765533546"
                    Point2="0,15.4777765533546"
                    Point3="4,15.4777765533546" />
                  <mssgle:LineSegment
                    End="48.5666254608212,15.4777765533546" />
                  <mssgle:CubicBezierSegment
                    Point1="48.5666254608212,15.4777765533546"
                    Point2="52.5666254608212,15.4777765533546"
                    Point3="52.5666254608212,19.4777765533546" />
                  <mssgle:LineSegment
                    End="52.5666254608212,23.4555531067091" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 9]"
          TopLeft="925.366659336123,172.59999994576">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="169.907357206593,68.5629592317712"
              Start="0,0"
              End="169.907357206593,61.0629592317712">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.9597363479086" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.9597363479086"
                    Point2="0,22.9597363479086"
                    Point3="4,22.9597363479086" />
                  <mssgle:LineSegment
                    End="165.907357206593,22.9597363479086" />
                  <mssgle:CubicBezierSegment
                    Point1="165.907357206593,22.9597363479086"
                    Point2="169.907357206593,22.9597363479086"
                    Point3="169.907357206593,26.9597363479086" />
                  <mssgle:LineSegment
                    End="169.907357206593,61.0629592317712" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1305.6,967.2"
          Size="1305.6,1010.4"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD"
          TopLeft="397.3666645267,455.677794958889" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="168,42.4"
          Id="Package.EventHandlers[OnError]\Save errorlog"
          TopLeft="546.99998369813,212.999993652106" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>