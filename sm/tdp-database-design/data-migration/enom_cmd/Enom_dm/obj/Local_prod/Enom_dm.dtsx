<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/15/2024 5:48:09 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-UHHLA3LI"
  DTS:CreatorName="TUCOWSAD\nludina"
  DTS:DTSID="{80C86F9C-D6F3-424C-A2BD-835180CB0175}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:ForceExecutionResult="2"
  DTS:LastModifiedProductVersion="16.0.5556.0"
  DTS:LocaleID="1033"
  DTS:MaxConcurrentExecutables="10"
  DTS:ObjectName="Enom_dm_by_TLD"
  DTS:PackageType="5"
  DTS:VersionBuild="2580"
  DTS:VersionGUID="{3A986DAA-FE50-4984-A151-D0263710C3D9}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[dm_enom_schema_creation.sql]"
      DTS:CreationName="FILE"
      DTS:DTSID="{46FE011F-FA2A-4CBE-8B39-46240C2936B0}"
      DTS:ObjectName="dm_enom_schema_creation.sql">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="C:\tdp-database-design\data-migration\dm_enom_schema_creation.sql" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Enom_ADO_EnomMigrationDB]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{EA1AB8D1-1F16-4E59-BEBD-75ADB38848AE}"
      DTS:ObjectName="Enom_ADO_EnomMigrationDB">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::Enom_ADO_EnomMigrationDB_ConnectionString]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Package::Enom_MSSQL_Password]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=VenomDB1;User ID=nludina;Initial Catalog=EnomMigrationDB;Persist Security Info=True;Encrypt=False;Application Name=SSIS-Enom_dm_by_TLD-{EA1AB8D1-1F16-4E59-BEBD-75ADB38848AE}VenomDB1.EnomMigrationDB.nludina1;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAVkmsD9Ji4UCbEVvvtX3EWAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAADjqMLo4cW1QnJ7ETXVUkQlAAAAAASAAACgAAAAEAAAAGpQZ2zdKBiWHNMfje4InvQwAAAAFyeTQ6Wa1SzCwjkmZEg6Q6VsMewQKAc81dXohZEs0SusnLBp4pmG26RbsRkBhFijFAAAAA2AHaRgmGe09+/baALEhObhgdbM</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Enom_ADO_NameHost]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{4B3BDDDB-748E-4F54-B8D0-2CE3EE1DFC94}"
      DTS:ObjectName="Enom_ADO_NameHost">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::Enom_ADO_NameHost_ConnectionString]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Package::Enom_MSSQL_Password]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=VenomDB1;User ID=nludina;Initial Catalog=NameHost;Persist Security Info=True;Connect Timeout=10000;Encrypt=False;Application Name=SSIS-Enom_dm_by_TLD-{4B3BDDDB-748E-4F54-B8D0-2CE3EE1DFC94}Enom_ADO_NameHost;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAVkmsD9Ji4UCbEVvvtX3EWAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAAZrqGi6TXLKv+fkszeNYd0AAAAAASAAACgAAAAEAAAAH9dwpCOasGq0xTnuFxFSnQwAAAAb0RzfYG/U3buS/IpA+HHmijKhyjtfD2uTtH5W+ZIhN9v0rY7l+wvZj08dkblOjnFFAAAAEtWogb8RKVtkxuEhVIJXQAxlQrw</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Enom_dm_log.xml]"
      DTS:CreationName="FILE"
      DTS:DTSID="{BDE40863-9641-4C76-8C38-8529CF35916D}"
      DTS:ObjectName="Enom_dm_log.xml">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::log_xml_file_path]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="C:\tdp-database-design\data-migration\enom_cmd\Enom_dm\log\enom_dm_log.xml" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Enom_nazca_identity]"
      DTS:CreationName="ODBC"
      DTS:DTSID="{3F62515A-00AE-4D08-A383-DCC3CF716E20}"
      DTS:ObjectName="Enom_nazca_identity">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::Enom_Nazca_Identity_ODBC_ConnectionString]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Package::Enom_Nazca_Identity_Password]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="uid=nludina;Dsn=PostgreSQL_nazca_prod;">
          <DTS:Password
            DTS:Name="Pwd"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAVkmsD9Ji4UCbEVvvtX3EWAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAADZTqu8mi1/vW6TAMsEdDyCAAAAAASAAACgAAAAEAAAAF6oBzG9NOpBrwx8AhcXXUUwAAAAz5zUA6V7n+KUwnaahdVVl1j6kU6X+c+eAGm3urUXv+xcDuVDKSx3Gk9yWgX94kniFAAAANrJvTo0v9QhdtXybHKITQzgscSA</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Enom_nazca_identity_01]"
      DTS:CreationName="ODBC"
      DTS:DTSID="{56322024-C1E9-4853-834F-3B8041DA787D}"
      DTS:ObjectName="Enom_nazca_identity_01">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::Enom_Nazca_Identity_01_ODBC_ConnectionString]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Package::Enom_Nazca_Identity_Password]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="uid=nludina;Dsn=PostgreSQL_nazca_prod_01;">
          <DTS:Password
            DTS:Name="Pwd"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAVkmsD9Ji4UCbEVvvtX3EWAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAADeo9R2q512nivzAvVEEAr9AAAAAASAAACgAAAAEAAAAEMmgeQaAktqbgAkwr/AEWEwAAAAEci/1WeFv9dO0WG0kRHN9Gv4VccWRGJJWPjm8nD2jzF74Cdqrf65nAa6L/4H3LXkFAAAAO5hi0dCkU0dJDc0FUJf8wnnyPTA</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Enom_ODBC_NameHost]"
      DTS:CreationName="ODBC"
      DTS:DTSID="{A3ADC87F-18A5-4A38-B319-92E6E5DA17C3}"
      DTS:ObjectName="Enom_ODBC_NameHost">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::Enom_ODBC_NameHost_ConnectionString]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Package::Enom_MSSQL_Password]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="uid=nludina;Dsn=Enom_ODBC_MSSQL_NameHost;">
          <DTS:Password
            DTS:Name="Pwd"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAVkmsD9Ji4UCbEVvvtX3EWAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAADWi1jSGkMEi8MwlUCDxUtmAAAAAASAAACgAAAAEAAAADXrl7On/gdvXHDKv70B+fUwAAAADGMOAeAnKg8spAHCY3E/AZ2ojXDe70kxh6IuDWsdP+wGlhVP5rxGelUDNaIUHd3XFAAAADI3++AaTsvn1Ns3ll/3CvRUBb9K</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[itdp_schema_creation.sql]"
      DTS:CreationName="FILE"
      DTS:DTSID="{77828AA5-2E3B-46DF-84E2-FC267A74116F}"
      DTS:ObjectName="itdp_schema_creation.sql">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="C:\tdp-database-design\data-migration\itdp_schema_creation.sql" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[tdpdb]"
      DTS:CreationName="ODBC"
      DTS:DTSID="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
      DTS:ObjectName="tdpdb">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::Tdpdb_ConnectionString]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Package::Tdpdb_Password]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="uid=migration_user;Dsn=PostgreSQL35W;">
          <DTS:Password
            DTS:Name="Pwd"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAVkmsD9Ji4UCbEVvvtX3EWAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAB/TQGaCj6rgI7FrBwexPbQAAAAAASAAACgAAAAEAAAAKrkiFRgMX4jTvFkEgD6rCEYAAAA3Rr4waEj2aOemB31NLoef7uQctOHGoBpFAAAAE+2JACWnEb+caAhcKQctpbbqyej</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[tdpdb_ADO.NET]"
      DTS:CreationName="ADO.NET:System.Data.Odbc.OdbcConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{ABDE7B26-BFF2-467F-980A-2292D0F21D32}"
      DTS:ObjectName="tdpdb_ADO.NET">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::Tdpdb_ConnectionString]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Package::Tdpdb_Password]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="uid=migration_user;Dsn=PostgreSQL35W;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAVkmsD9Ji4UCbEVvvtX3EWAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAD+zoM6H19FZGAzplEk6eUbAAAAAASAAACgAAAAEAAAAFrxfBFE2lGMoFtDtLVTwYwYAAAALFyaLZA+9ur9+AYa59W0HT+NLrhFBujeFAAAAKlzNt3OE8y2GHytISI3ZcDNQaaS</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Configurations>
    <DTS:Configuration
      DTS:ConfigurationString="C:\tdp-database-design\data-migration\enom_cmd\Enom_dm\Enom_dm_dev.dtsConfig"
      DTS:ConfigurationType="1"
      DTS:CreationName=""
      DTS:DTSID="{20DEDB97-8A4A-46FE-9414-B1A282264197}"
      DTS:ObjectName="Dev" />
    <DTS:Configuration
      DTS:ConfigurationString="C:\tdp-database-design\data-migration\enom_cmd\Enom_dm\Enom_dm_local.dtsConfig"
      DTS:ConfigurationType="1"
      DTS:CreationName=""
      DTS:DTSID="{FE8EFE57-6902-4D1B-80E5-50A08ACEC5FE}"
      DTS:ObjectName="local" />
  </DTS:Configurations>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="Enom_dm_log.xml"
      DTS:CreationName="Microsoft.LogProviderXMLFile"
      DTS:Description="Writes log entries for events to an XML file"
      DTS:DTSID="{31E469C0-35E4-4CA5-8165-83FD49185E83}"
      DTS:ObjectName="SSIS log provider for XML files1">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{440466E9-3071-4645-BA86-AE83E8511784}"
      DTS:ObjectName="Enom_ADO_EnomMigrationDB_ConnectionString">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Data Source=VenomDB1;User ID=nludina;Initial Catalog=EnomMigrationDB;Persist Security Info=True;Encrypt=False;Application Name=SSIS-Enom_dm_by_TLD-{EA1AB8D1-1F16-4E59-BEBD-75ADB38848AE}VenomDB1.EnomMigrationDB.nludina1;</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{BF468CA9-2110-4C78-A2BF-181F2D8C3206}"
      DTS:ObjectName="Enom_ADO_NameHost_ConnectionString">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Data Source=VenomDB1;User ID=nludina;Initial Catalog=NameHost;Persist Security Info=True;Connect Timeout=10000;Encrypt=False;Application Name=SSIS-Enom_dm_by_TLD-{4B3BDDDB-748E-4F54-B8D0-2CE3EE1DFC94}Enom_ADO_NameHost;</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{3C35ED45-1DBC-43D7-B5E0-7A80DF44EE54}"
      DTS:ObjectName="Enom_MSSQL_Password"
      DTS:Sensitive="True">
      <DTS:Property
        DTS:Name="ParameterValue">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="ParameterValue"
          Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAVkmsD9Ji4UCbEVvvtX3EWAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAD+HDu+1w2HcZwUZnlyW2wvAAAAAASAAACgAAAAEAAAAHkgzQ4qQbUqEpEIo0j95UEwAAAA+Md7EH6HNhBxYdNTHEH3u2DBcUdgvutTqH70pP6pIxi/QyatRRAcrx7m/QNSCVu5FAAAANuB7ZK3RAqAtQpwgCyyIqX9+9AA</DTS:Property>
      </DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{CD0F7AD7-D988-4E3E-ADF3-8CCE0698EBE5}"
      DTS:ObjectName="Enom_Nazca_Identity_01_ODBC_ConnectionString">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">uid=nludina;Dsn=PostgreSQL_nazca_prod_01;</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{5614D374-5AB9-473D-B3B5-7BF7FB90A08E}"
      DTS:ObjectName="Enom_Nazca_Identity_ODBC_ConnectionString">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">uid=nludina;Dsn=PostgreSQL_nazca_prod;</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{E585A09E-97E4-4630-B91C-1B263118BC7B}"
      DTS:ObjectName="Enom_Nazca_Identity_Password"
      DTS:Sensitive="True">
      <DTS:Property
        DTS:Name="ParameterValue">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="ParameterValue"
          Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAVkmsD9Ji4UCbEVvvtX3EWAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAALv1/0Ud3p1EIcpnltqSsvAAAAAASAAACgAAAAEAAAAFxMaWENCyo1etRouv/HJlUwAAAA9ZiGSV8QxgAjlQn227wbrdrQaD2zeLf3zgNhNN0qtAGHKHlXREOfDG1GWzOIGNaqFAAAAKO2uWxeecqq28PBzR6DfVLHm1su</DTS:Property>
      </DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{745DA3B0-D2B4-4F7F-BEF7-56B331424995}"
      DTS:ObjectName="Enom_ODBC_NameHost_ConnectionString">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">uid=nludina;Dsn=Enom_ODBC_MSSQL_NameHost;</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{A47DC222-FCC8-4DF1-8808-E818C2C92A52}"
      DTS:ObjectName="Enom_TDP_domain_table_name">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">TDP_domain_test</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{234240E3-7C38-411F-BF77-B8BE367E8DCF}"
      DTS:ObjectName="log_xml_file_path">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\tdp-database-design\data-migration\enom_cmd\Enom_dm\log\enom_dm_log.xml</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{2EE9D12E-D443-4FD6-88A3-D4B9BB891DBF}"
      DTS:ObjectName="Migration_phase">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">1.3</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:DTSID="{D615CEA4-CDB5-4C3C-B8B4-A418E4BE6035}"
      DTS:ObjectName="private_contact">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{DC4E575D-A1D5-4CB7-AD67-14B89855BED5}"
      DTS:ObjectName="Tdpdb_ConnectionString">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">uid=migration_user;Dsn=PostgreSQL35W;</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{60E5BB1A-D7CF-4CF1-8516-55741FDDC04B}"
      DTS:ObjectName="Tdpdb_Password"
      DTS:Sensitive="True">
      <DTS:Property
        DTS:Name="ParameterValue">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="ParameterValue"
          Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAVkmsD9Ji4UCbEVvvtX3EWAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAABAx/2c3rZKaFRvtS67tebcAAAAAASAAACgAAAAEAAAAOza/1dP8pyav/IIRvEueu0YAAAANKl6ZZ2EvWg5q0Haalin5SfG2ZvRmORZFAAAAM87uplzjUyuOzRC09gEZG93e7rq</DTS:Property>
      </DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{C8247322-7D8C-4EAB-9AB6-5D677CE747E8}"
      DTS:ObjectName="Tenant">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">enom</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{4D474342-7B2A-473E-877F-0014B6AEAB85}"
      DTS:ObjectName="TLD">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">co.in</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{50B9A0B8-823F-4002-9E4B-A04BA5D0FFBB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="dm_log_id">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{558D960D-C0BF-4EAC-822D-D5A72B9CF120}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="list_big_tlds">
      <DTS:VariableValue
        DTS:DataType="8">com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DB929066-13B0-4E2E-872A-EC55A15DF892}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="list_middle_and_big_tlds">
      <DTS:VariableValue
        DTS:DataType="8">com' ,'net</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B058D84F-ACCE-40A1-A122-E99FE1116609}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="max_dm_log_query">
      <DTS:VariableValue
        DTS:DataType="8">SELECT COALESCE(MAX(ID)+1,1)::int as max_id from itdp.dm_log;</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">4,7,OnError,13,OnInformation,10,OnProgress,12,OnTaskFailed</DTS:Property>
    <DTS:Property
      DTS:EventName="Diagnostic"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="DiagnosticEx"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">0</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">0</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnExecStatusChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnInformation"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">0</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">0</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostComponentCall"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostPrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePreComponentCall"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePreEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePrePrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelineRowsSent"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPostExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPostValidate"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPreExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPreValidate"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnProgress"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">0</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">0</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnQueryCancel"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnTaskFailed"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">0</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">0</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnVariableValueChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{31E469C0-35E4-4CA5-8165-83FD49185E83}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\00 Schemas creation"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{024563b5-0df5-4d8d-be4e-a721913d9c35}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="00 Schemas creation">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\00 Schemas creation\00_1 Create schema dm_enom"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create scheme dm_enom in ITDP"
          DTS:Disabled="True"
          DTS:DTSID="{f55aaf24-672b-4b61-912f-5b1113faf5ca}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="00_1 Create schema dm_enom"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
              SQLTask:SqlStmtSourceType="FileConnection"
              SQLTask:SqlStatementSource="dm_enom_schema_creation.sql" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\00 Schemas creation\00_2 Create schema itdp"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{5145d58f-ae86-44a1-9cc7-4849765d9dcc}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="00_2 Create schema itdp"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
              SQLTask:SqlStmtSourceType="FileConnection"
              SQLTask:SqlStatementSource="itdp_schema_creation.sql" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\00 Schemas creation\00_3 Populate itdp_TLD list for data migration"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{B11BBE52-5864-48B9-9239-0D0DEE309A48}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="00_3 Populate itdp_TLD list for data migration"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"
INSERT INTO itdp.tld (id, dm_source, tld_name, is_thin,tenant_customer_id, accreditation_tld_id,phase)
SELECT  gen_random_uuid() AS id,
		tenant_name,tld_name, 
		get_tld_setting(p_key =&gt; 'tld.lifecycle.is_thin_registry',	p_tld_id=&gt;vat.tld_id,    p_tenant_id=&gt;vat.tenant_id)::boolean,
		tnc.id  AS tenant_customer_id,
		accreditation_tld_id,
		'"+ @[$Package::Migration_phase]  +"'	   
FROM public.v_accreditation_tld vat
JOIN tenant_customer tnc ON tnc.tenant_id = vat.tenant_id
WHERE tld_name in ('co.in','firm.in','gen.in','in','ind.in','net.in','org.in')	
	AND  tenant_name='"+ @[$Package::Tenant] +"'
ON CONFLICT DO NOTHING;"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
              SQLTask:SqlStatementSource="&#xA;INSERT INTO itdp.tld (id, dm_source, tld_name, is_thin,tenant_customer_id, accreditation_tld_id,phase)&#xA;SELECT  gen_random_uuid() AS id,&#xA;&#x9;&#x9;tenant_name,tld_name, &#xA;&#x9;&#x9;get_tld_setting(p_key =&gt; 'tld.lifecycle.is_thin_registry',&#x9;p_tld_id=&gt;vat.tld_id,    p_tenant_id=&gt;vat.tenant_id)::boolean,&#xA;&#x9;&#x9;tnc.id  AS tenant_customer_id,&#xA;&#x9;&#x9;accreditation_tld_id,&#xA;&#x9;&#x9;'1.3'&#x9;   &#xA;FROM public.v_accreditation_tld vat&#xA;JOIN tenant_customer tnc ON tnc.tenant_id = vat.tenant_id&#xA;WHERE tld_name in ('co.in','firm.in','gen.in','in','ind.in','net.in','org.in')&#x9;&#xA;&#x9;AND  tenant_name='enom'&#xA;ON CONFLICT DO NOTHING;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\00 Schemas creation\00_4 Create Enom_TDP_domain table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{ADEF0D69-8742-4990-B5E9-FD6C5C6F1BFE}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="00_4 Create Enom_TDP_domain table"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{EA1AB8D1-1F16-4E59-BEBD-75ADB38848AE}"
              SQLTask:SqlStatementSource="USE EnomMigrationDB&#xA;GO&#xA;&#xA;if not exists (select * from sysobjects where name='TDP_domain' and xtype='U')&#xA;CREATE TABLE [dbo].[TDP_domain](&#xA;&#x9;[TLD] varchar(15) NOT NULL,&#xA;&#x9;[TDP_domain_id] [uniqueidentifier] NOT NULL,&#xA;&#x9;[DomainNameId] [int] NOT NULL,&#xA;&#x9;[Migration_date] [datetime] NOT NULL default  getdate(),&#xA;&#x9;[Migration_phase] varchar(15) NOT NULL,&#xA;&#x9;[Status] varchar(100) NOT NULL, -- Migrated domain, host, public contact   ; exists in TDP; &#xA;&#x9;[Private_Contact_Migration_date] [datetime] NULL,&#xA;&#x9;[Contact_Attribute_Migration_date] [datetime] NULL,&#xA;&#x9;Constraint TDP_domain_PK PRIMARY KEY ([DomainNameId])&#xA;) &#xA;GO&#xA;&#xA;if not exists (select * from sysobjects where name='TDP_domain_test' and xtype='U')&#xA;CREATE TABLE [dbo].[TDP_domain_test](&#xA;&#x9;[TLD] varchar(15) NOT NULL,&#xA;&#x9;[TDP_domain_id] [uniqueidentifier] NOT NULL,&#xA;&#x9;[DomainNameId] [int] NOT NULL,&#xA;&#x9;[Migration_date] [datetime] NOT NULL default  getdate(),&#xA;&#x9;[Migration_phase] varchar(15) NOT NULL,&#xA;&#x9;[Status] varchar(100) NOT NULL, -- Migrated domain, host, public contact   ; exists in TDP; &#xA;&#x9;[Private_Contact_Migration_date] [datetime] NULL,&#xA;&#x9;[Contact_Attribute_Migration_date] [datetime] NULL,&#xA;&#x9;Constraint TDP_domain_test_PK PRIMARY KEY ([DomainNameId])&#xA;) &#xA;GO&#xA;&#xA;if not exists (select * from sysobjects where name='TDP_domain_' and xtype='U')&#xA;CREATE TABLE [dbo].[TDP_domain_](&#xA;&#x9;[TLD] varchar(15) NOT NULL,&#xA;&#x9;[TDP_domain_id] [uniqueidentifier] NOT NULL,&#xA;&#x9;[DomainNameId] [int] NOT NULL,&#xA;&#x9;[Migration_date] [datetime] NOT NULL default  getdate(),&#xA;&#x9;[Migration_phase] varchar(15) NOT NULL,&#xA;&#x9;[Status] varchar(100) NOT NULL, -- Migrated domain, host, public contact   ; exists in TDP; &#xA;&#x9;[Private_Contact_Migration_date] [datetime] NULL,&#xA;&#x9;[Contact_Attribute_Migration_date] [datetime] NULL,&#xA;) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\00 Schemas creation.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{98736527-A620-42F2-84A9-934672580958}"
          DTS:From="Package\00 Schemas creation\00_2 Create schema itdp"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\00 Schemas creation\00_3 Populate itdp_TLD list for data migration" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\01 Extract Enom domain, contact, host"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{7AA45ECC-407A-4764-B255-3CD2560A7BA2}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="01 Extract Enom domain, contact, host">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{327f6e67-8cef-4ecc-89d8-9536de7a98ed}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="01_1  Extract  Enom Domain">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">19,7,OnError,19,OnExecStatusChanged,13,OnInformation,27,OnPipelinePostComponentCall,25,OnPipelinePostEndOfRowset,25,OnPipelinePostPrimeOutput,26,OnPipelinePreComponentCall,24,OnPipelinePreEndOfRowset,24,OnPipelinePrePrimeOutput,18,OnPipelineRowsSent,13,OnPostExecute,14,OnPostValidate,12,OnPreExecute,13,OnPreValidate,10,OnProgress,13,OnQueryCancel,12,OnTaskFailed,22,OnVariableValueChanged,9,OnWarning</DTS:Property>
            <DTS:Property
              DTS:EventName="OnError"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnExecStatusChanged"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnInformation"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePostComponentCall"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePostEndOfRowset"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePostPrimeOutput"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePreComponentCall"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePreEndOfRowset"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePrePrimeOutput"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelineRowsSent"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPostExecute"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPostValidate"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPreExecute"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPreValidate"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnProgress"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnQueryCancel"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnTaskFailed"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnVariableValueChanged"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnWarning"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
          </DTS:LoggingOptions>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Clean Enom_TDP_domain (Exists TDP)"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{CC597A25-7FFC-4A10-8E95-44FF13C61DED}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Clean Enom_TDP_domain (Exists TDP)"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"DELETE FROM  [dbo]."+ @[$Package::Enom_TDP_domain_table_name] +"  WHERE Status ='Exists in TDP' AND TLD='"+ @[$Package::TLD] +"';"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{EA1AB8D1-1F16-4E59-BEBD-75ADB38848AE}"
                  SQLTask:SqlStatementSource="DELETE FROM  [dbo].TDP_domain_test  WHERE Status ='Exists in TDP' AND TLD='co.in';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:Disabled="True"
              DTS:DTSID="{594c70d7-7ac0-4e94-b25f-273b8db558a6}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Extract DomainName to DomainName__ADO"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="1">
                <DTS:Property
                  DTS:DataType="8"
                  DTS:Name="EventFilter">25,7,OnError,19,OnExecStatusChanged,13,OnInformation,27,OnPipelinePostComponentCall,25,OnPipelinePostEndOfRowset,25,OnPipelinePostPrimeOutput,26,OnPipelinePreComponentCall,24,OnPipelinePreEndOfRowset,24,OnPipelinePrePrimeOutput,18,OnPipelineRowsSent,13,OnPostExecute,14,OnPostValidate,12,OnPreExecute,13,OnPreValidate,10,OnProgress,13,OnQueryCancel,12,OnTaskFailed,22,OnVariableValueChanged,9,OnWarning,16,BufferSizeTuning,18,PipelineBufferLeak,21,PipelineComponentTime,21,PipelineExecutionPlan,22,PipelineExecutionTrees,22,PipelineInitialization</DTS:Property>
                <DTS:Property
                  DTS:EventName="BufferSizeTuning"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnError"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnExecStatusChanged"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnInformation"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPipelinePostComponentCall"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPipelinePostEndOfRowset"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPipelinePostPrimeOutput"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPipelinePreComponentCall"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPipelinePreEndOfRowset"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPipelinePrePrimeOutput"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPipelineRowsSent"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPostExecute"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPostValidate"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPreExecute"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPreValidate"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnProgress"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnQueryCancel"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnTaskFailed"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnVariableValueChanged"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnWarning"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="PipelineBufferLeak"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="PipelineComponentTime"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="PipelineExecutionPlan"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="PipelineExecutionTrees"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="PipelineInitialization"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
              </DTS:LoggingOptions>
              <DTS:PropertyExpression
                DTS:Name="[ADO NET Source].[SqlCommand]">"SELECT dn.*, de.ExpDate, ExpStatusID, StatusDate, CreationDate, EscrowHold, EscrowDate, 
	ROID, AuthInfo, svTRID, IsSync, IsVerified, LastSyncDate, LastAuthInfoSync, NSStatus,ed.max_deldate,r.TransferInDate
FROM dbo.DomainName dn (nolock)
LEFT JOIN dbo.DomainNameEPP dnp (nolock) on dn.DomainNameID=dnp.DomainNameID
LEFT JOIN dbo.DomainExpiration de (nolock) on dn.DomainNameID=de.DomainNameID

LEFT JOIN [EnomMigrationDB].[dbo]."+ @[$Package::Enom_TDP_domain_table_name] +" td (nolock) ON td.DomainNameID=dn.DomainNameID
LEFT JOIN [dbo].DomainDNS DNS (nolock)  ON DNS.DomainNameID=dn.DomainNameID
LEFT JOIN (SELECT MAX(deldate) as max_deldate,DomainNameID FROM [dbo].ExpiredDomains (nolock) group by  DomainNameID)ed
	  ON ed.DomainNameID=dn.DomainNameID
LEFT JOIN (SELECT tld,sld,cast(InsertDate as  date) as InsertDate1,max(InsertDate) as TransferInDate 
			FROM [RegistryQueueLog].[dbo].[RegistryLog] (nolock)   WHERE MsgType='TransferApproved' GROUP BY tld,sld,cast(InsertDate as  date))  r
 	 ON  r.tld=dn.tld and r.sld=dn.sld and   r.[InsertDate1] =cast(dn.[InsertedDate] as date)
WHERE  td.DomainNameID IS NULL AND  dn.TLD='" +  @[$Package::TLD] +"' 
	AND dn.registrationstatus IN ('"+ @[$Project::Enom_domain_statuses] +"')
	AND dn.RRProcessor IN ('"+ @[$Project::RRProcessor] +"');"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <pipeline
                  autoAdjustBufferSize="true"
                  defaultBufferMaxRows="100000"
                  version="1">
                  <components>
                    <component
                      refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
                      name="ADO NET Source"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement used by the component to extract data."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT dn.*, de.ExpDate, ExpStatusID, StatusDate, CreationDate, EscrowHold, EscrowDate, 
	ROID, AuthInfo, svTRID, IsSync, IsVerified, LastSyncDate, LastAuthInfoSync, NSStatus,ed.max_deldate,r.TransferInDate
FROM dbo.DomainName dn (nolock)
LEFT JOIN dbo.DomainNameEPP dnp (nolock) on dn.DomainNameID=dnp.DomainNameID
LEFT JOIN dbo.DomainExpiration de (nolock) on dn.DomainNameID=de.DomainNameID

LEFT JOIN [EnomMigrationDB].[dbo].TDP_domain_test td (nolock) ON td.DomainNameID=dn.DomainNameID
LEFT JOIN [dbo].DomainDNS DNS (nolock)  ON DNS.DomainNameID=dn.DomainNameID
LEFT JOIN (SELECT MAX(deldate) as max_deldate,DomainNameID FROM [dbo].ExpiredDomains (nolock) group by  DomainNameID)ed
	  ON ed.DomainNameID=dn.DomainNameID
LEFT JOIN (SELECT tld,sld,cast(InsertDate as  date) as InsertDate1,max(InsertDate) as TransferInDate 
			FROM [RegistryQueueLog].[dbo].[RegistryLog] (nolock)   WHERE MsgType='TransferApproved' GROUP BY tld,sld,cast(InsertDate as  date))  r
 	 ON  r.tld=dn.tld and r.sld=dn.sld and   r.[InsertDate1] =cast(dn.[InsertedDate] as date)
WHERE  td.DomainNameID IS NULL AND  dn.TLD='co.in' 
	AND dn.registrationstatus IN ('Registered', 'Expired', 'Extended RGP', 'RGP', 'RGP Deactivated', 'Imminent Delete')
	AND dn.RRProcessor IN ('E');</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">30</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                          name="AllowImplicitStringConversion">true</property>
                        <property
                          dataType="System.String"
                          description="The Source database table name."
                          expressionType="Notify"
                          name="TableOrViewName"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specify the mode to retrieve external column information"
                          name="AccessMode"
                          typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Connections[IDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Enom_ADO_NameHost]"
                          connectionManagerRefId="Package.ConnectionManagers[Enom_ADO_NameHost]"
                          description="Managed connection manager"
                          name="IDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output]"
                          name="ADO NET Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[DomainNameID]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[DomainNameID]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[DomainNameID]"
                              name="DomainNameID"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[SLD]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[SLD]"
                              length="256"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[SLD]"
                              name="SLD"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[TLD]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[TLD]"
                              length="15"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[TLD]"
                              name="TLD"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerDomainStatus]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CustomerDomainStatus]"
                              length="15"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerDomainStatus]"
                              name="CustomerDomainStatus"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[RegistrationStatus]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[RegistrationStatus]"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[RegistrationStatus]"
                              name="RegistrationStatus"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[Renew]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[Renew]"
                              length="5"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[Renew]"
                              name="Renew"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[RegPeriod]"
                              dataType="ui1"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[RegPeriod]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[RegPeriod]"
                              name="RegPeriod"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[WebSite]"
                              dataType="ui1"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[WebSite]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[WebSite]"
                              name="WebSite"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[EncodingType]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[EncodingType]"
                              length="10"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[EncodingType]"
                              name="EncodingType"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[Hold]"
                              dataType="bool"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[Hold]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[Hold]"
                              name="Hold"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[RRProcessor]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[RRProcessor]"
                              length="4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[RRProcessor]"
                              name="RRProcessor"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[AllowParent]"
                              dataType="bool"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[AllowParent]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[AllowParent]"
                              name="AllowParent"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[BulkWhois]"
                              dataType="bool"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[BulkWhois]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[BulkWhois]"
                              name="BulkWhois"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[PromotionId]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[PromotionId]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[PromotionId]"
                              name="PromotionId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[BillingPartyID]"
                              dataType="guid"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[BillingPartyID]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[BillingPartyID]"
                              name="BillingPartyID"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[FilterMask]"
                              dataType="i2"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[FilterMask]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[FilterMask]"
                              name="FilterMask"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[InsertedDate]"
                              dataType="dbTimeStamp"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[InsertedDate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[InsertedDate]"
                              name="InsertedDate"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[SLDdotTLD]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[SLDdotTLD]"
                              length="272"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[SLDdotTLD]"
                              name="SLDdotTLD"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[EndUserPartyId]"
                              dataType="guid"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[EndUserPartyId]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[EndUserPartyId]"
                              name="EndUserPartyId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[IsPremium]"
                              dataType="bool"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[IsPremium]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[IsPremium]"
                              name="IsPremium"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[NextAttemptTime]"
                              dataType="dbTimeStamp"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[NextAttemptTime]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[NextAttemptTime]"
                              name="NextAttemptTime"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[OriginalRegistrationStatus]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[OriginalRegistrationStatus]"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[OriginalRegistrationStatus]"
                              name="OriginalRegistrationStatus"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[ExpDate]"
                              dataType="dbTimeStamp"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ExpDate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[ExpDate]"
                              name="ExpDate"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[ExpStatusID]"
                              dataType="i2"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ExpStatusID]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[ExpStatusID]"
                              name="ExpStatusID"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[StatusDate]"
                              dataType="dbTimeStamp"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[StatusDate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[StatusDate]"
                              name="StatusDate"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[CreationDate]"
                              dataType="dbTimeStamp"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CreationDate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[CreationDate]"
                              name="CreationDate"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[EscrowHold]"
                              dataType="bool"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[EscrowHold]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[EscrowHold]"
                              name="EscrowHold"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[EscrowDate]"
                              dataType="dbTimeStamp"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[EscrowDate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[EscrowDate]"
                              name="EscrowDate"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[ROID]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ROID]"
                              length="89"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[ROID]"
                              name="ROID"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[AuthInfo]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[AuthInfo]"
                              length="255"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[AuthInfo]"
                              name="AuthInfo"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[svTRID]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[svTRID]"
                              length="64"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[svTRID]"
                              name="svTRID"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[IsSync]"
                              dataType="ui1"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[IsSync]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[IsSync]"
                              name="IsSync"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[IsVerified]"
                              dataType="bool"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[IsVerified]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[IsVerified]"
                              name="IsVerified"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[LastSyncDate]"
                              dataType="dbTimeStamp"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[LastSyncDate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[LastSyncDate]"
                              name="LastSyncDate"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[LastAuthInfoSync]"
                              dataType="dbTimeStamp"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[LastAuthInfoSync]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[LastAuthInfoSync]"
                              name="LastAuthInfoSync"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[NSStatus]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[NSStatus]"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[NSStatus]"
                              name="NSStatus"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[max_deldate]"
                              dataType="dbTimeStamp"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[max_deldate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[max_deldate]"
                              name="max_deldate"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[TransferInDate]"
                              dataType="dbTimeStamp"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[TransferInDate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[TransferInDate]"
                              name="TransferInDate"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[DomainNameID]"
                              dataType="i4"
                              name="DomainNameID" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[SLD]"
                              dataType="wstr"
                              length="256"
                              name="SLD" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[TLD]"
                              dataType="wstr"
                              length="15"
                              name="TLD" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CustomerDomainStatus]"
                              dataType="wstr"
                              length="15"
                              name="CustomerDomainStatus" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[RegistrationStatus]"
                              dataType="wstr"
                              length="20"
                              name="RegistrationStatus" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[Renew]"
                              dataType="wstr"
                              length="5"
                              name="Renew" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[RegPeriod]"
                              dataType="ui1"
                              name="RegPeriod" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[WebSite]"
                              dataType="ui1"
                              name="WebSite" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[EncodingType]"
                              dataType="wstr"
                              length="10"
                              name="EncodingType" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[Hold]"
                              dataType="bool"
                              name="Hold" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[RRProcessor]"
                              dataType="wstr"
                              length="4"
                              name="RRProcessor" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[AllowParent]"
                              dataType="bool"
                              name="AllowParent" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[BulkWhois]"
                              dataType="bool"
                              name="BulkWhois" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[PromotionId]"
                              dataType="i4"
                              name="PromotionId" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[BillingPartyID]"
                              dataType="guid"
                              name="BillingPartyID" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[FilterMask]"
                              dataType="i2"
                              name="FilterMask" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[InsertedDate]"
                              dataType="dbTimeStamp"
                              name="InsertedDate" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[SLDdotTLD]"
                              dataType="wstr"
                              length="272"
                              name="SLDdotTLD" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[EndUserPartyId]"
                              dataType="guid"
                              name="EndUserPartyId" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[IsPremium]"
                              dataType="bool"
                              name="IsPremium" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[NextAttemptTime]"
                              dataType="dbTimeStamp"
                              name="NextAttemptTime" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[OriginalRegistrationStatus]"
                              dataType="wstr"
                              length="20"
                              name="OriginalRegistrationStatus" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ExpDate]"
                              dataType="dbTimeStamp"
                              name="ExpDate" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ExpStatusID]"
                              dataType="i2"
                              name="ExpStatusID" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[StatusDate]"
                              dataType="dbTimeStamp"
                              name="StatusDate" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CreationDate]"
                              dataType="dbTimeStamp"
                              name="CreationDate" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[EscrowHold]"
                              dataType="bool"
                              name="EscrowHold" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[EscrowDate]"
                              dataType="dbTimeStamp"
                              name="EscrowDate" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ROID]"
                              dataType="wstr"
                              length="89"
                              name="ROID" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[AuthInfo]"
                              dataType="wstr"
                              length="255"
                              name="AuthInfo" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[svTRID]"
                              dataType="wstr"
                              length="64"
                              name="svTRID" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[IsSync]"
                              dataType="ui1"
                              name="IsSync" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[IsVerified]"
                              dataType="bool"
                              name="IsVerified" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[LastSyncDate]"
                              dataType="dbTimeStamp"
                              name="LastSyncDate" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[LastAuthInfoSync]"
                              dataType="dbTimeStamp"
                              name="LastAuthInfoSync" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[NSStatus]"
                              dataType="wstr"
                              length="20"
                              name="NSStatus" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[max_deldate]"
                              dataType="dbTimeStamp"
                              name="max_deldate" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[TransferInDate]"
                              dataType="dbTimeStamp"
                              name="TransferInDate" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output]"
                          isErrorOut="true"
                          name="ADO NET Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[DomainNameID]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[DomainNameID]"
                              name="DomainNameID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[SLD]"
                              dataType="wstr"
                              length="256"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[SLD]"
                              name="SLD" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[TLD]"
                              dataType="wstr"
                              length="15"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[TLD]"
                              name="TLD" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CustomerDomainStatus]"
                              dataType="wstr"
                              length="15"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CustomerDomainStatus]"
                              name="CustomerDomainStatus" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[RegistrationStatus]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[RegistrationStatus]"
                              name="RegistrationStatus" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[Renew]"
                              dataType="wstr"
                              length="5"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[Renew]"
                              name="Renew" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[RegPeriod]"
                              dataType="ui1"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[RegPeriod]"
                              name="RegPeriod" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[WebSite]"
                              dataType="ui1"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[WebSite]"
                              name="WebSite" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[EncodingType]"
                              dataType="wstr"
                              length="10"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[EncodingType]"
                              name="EncodingType" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[Hold]"
                              dataType="bool"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[Hold]"
                              name="Hold" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[RRProcessor]"
                              dataType="wstr"
                              length="4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[RRProcessor]"
                              name="RRProcessor" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[AllowParent]"
                              dataType="bool"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[AllowParent]"
                              name="AllowParent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[BulkWhois]"
                              dataType="bool"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[BulkWhois]"
                              name="BulkWhois" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[PromotionId]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[PromotionId]"
                              name="PromotionId" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[BillingPartyID]"
                              dataType="guid"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[BillingPartyID]"
                              name="BillingPartyID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[FilterMask]"
                              dataType="i2"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[FilterMask]"
                              name="FilterMask" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[InsertedDate]"
                              dataType="dbTimeStamp"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[InsertedDate]"
                              name="InsertedDate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[SLDdotTLD]"
                              dataType="wstr"
                              length="272"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[SLDdotTLD]"
                              name="SLDdotTLD" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[EndUserPartyId]"
                              dataType="guid"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[EndUserPartyId]"
                              name="EndUserPartyId" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[IsPremium]"
                              dataType="bool"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[IsPremium]"
                              name="IsPremium" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[NextAttemptTime]"
                              dataType="dbTimeStamp"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[NextAttemptTime]"
                              name="NextAttemptTime" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[OriginalRegistrationStatus]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[OriginalRegistrationStatus]"
                              name="OriginalRegistrationStatus" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ExpDate]"
                              dataType="dbTimeStamp"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ExpDate]"
                              name="ExpDate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ExpStatusID]"
                              dataType="i2"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ExpStatusID]"
                              name="ExpStatusID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[StatusDate]"
                              dataType="dbTimeStamp"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[StatusDate]"
                              name="StatusDate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CreationDate]"
                              dataType="dbTimeStamp"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CreationDate]"
                              name="CreationDate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[EscrowHold]"
                              dataType="bool"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[EscrowHold]"
                              name="EscrowHold" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[EscrowDate]"
                              dataType="dbTimeStamp"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[EscrowDate]"
                              name="EscrowDate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ROID]"
                              dataType="wstr"
                              length="89"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ROID]"
                              name="ROID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[AuthInfo]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[AuthInfo]"
                              name="AuthInfo" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[svTRID]"
                              dataType="wstr"
                              length="64"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[svTRID]"
                              name="svTRID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[IsSync]"
                              dataType="ui1"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[IsSync]"
                              name="IsSync" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[IsVerified]"
                              dataType="bool"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[IsVerified]"
                              name="IsVerified" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[LastSyncDate]"
                              dataType="dbTimeStamp"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[LastSyncDate]"
                              name="LastSyncDate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[LastAuthInfoSync]"
                              dataType="dbTimeStamp"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[LastAuthInfoSync]"
                              name="LastAuthInfoSync" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[NSStatus]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[NSStatus]"
                              name="NSStatus" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[max_deldate]"
                              dataType="dbTimeStamp"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[max_deldate]"
                              name="max_deldate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[TransferInDate]"
                              dataType="dbTimeStamp"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[TransferInDate]"
                              name="TransferInDate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_"
                      componentClassID="Microsoft.SSISODBCDst"
                      contactInfo="ODBC Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="ODBC Destination"
                      name="ODBC Destination DimainName_"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The name of the table to be fetched."
                          expressionType="Notify"
                          name="TableName">"dm_enom"."domainname_"</property>
                        <property
                          dataType="System.Int32"
                          description="Specify the number of rows fetched per batch."
                          expressionType="Notify"
                          name="BatchSize">100000</property>
                        <property
                          dataType="System.Int32"
                          description="The number of rows inserted under the same transaction."
                          expressionType="Notify"
                          name="TransactionSize">100000</property>
                        <property
                          dataType="System.Int32"
                          description="Determines the chunk size allocation for LOB columns"
                          expressionType="Notify"
                          name="LobChunkSize">32768</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                          expressionType="Notify"
                          name="StatementTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="The code page to use when code page information is unavailable from the data source."
                          expressionType="Notify"
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Int32"
                          description="The method used for inserting data. Possible values are 'Batch' or 'Row by row'."
                          expressionType="Notify"
                          name="InsertMethod">1</property>
                        <property
                          dataType="System.Int32"
                          description="The ODBC C data type for binding numeric data."
                          expressionType="Notify"
                          name="BindNumericAs">0</property>
                        <property
                          dataType="System.Int32"
                          description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                          expressionType="Notify"
                          name="BindCharColumnsAs">0</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Connections[ODBCConnection]"
                          connectionManagerID="Package.ConnectionManagers[tdpdb]"
                          connectionManagerRefId="Package.ConnectionManagers[tdpdb]"
                          description="The ODBC runtime connection used to access the database."
                          name="ODBCConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="ODBC Destination Input"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[DomainNameID]"
                              cachedDataType="i4"
                              cachedName="DomainNameID"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[domainnameid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[DomainNameID]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[SLD]"
                              cachedDataType="wstr"
                              cachedLength="256"
                              cachedName="SLD"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[sld]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[SLD]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[TLD]"
                              cachedDataType="wstr"
                              cachedLength="15"
                              cachedName="TLD"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[TLD]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[CustomerDomainStatus]"
                              cachedDataType="wstr"
                              cachedLength="15"
                              cachedName="CustomerDomainStatus"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[customerdomainstatus]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerDomainStatus]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[RegistrationStatus]"
                              cachedDataType="wstr"
                              cachedLength="20"
                              cachedName="RegistrationStatus"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[registrationstatus]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[RegistrationStatus]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[Renew]"
                              cachedDataType="wstr"
                              cachedLength="5"
                              cachedName="Renew"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[renew]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[Renew]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[RegPeriod]"
                              cachedDataType="ui1"
                              cachedName="RegPeriod"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[regperiod]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[RegPeriod]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[WebSite]"
                              cachedDataType="ui1"
                              cachedName="WebSite"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[website]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[WebSite]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[EncodingType]"
                              cachedDataType="wstr"
                              cachedLength="10"
                              cachedName="EncodingType"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[encodingtype]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[EncodingType]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[Hold]"
                              cachedDataType="bool"
                              cachedName="Hold"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[hold]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[Hold]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[RRProcessor]"
                              cachedDataType="wstr"
                              cachedLength="4"
                              cachedName="RRProcessor"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[rrprocessor]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[RRProcessor]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[AllowParent]"
                              cachedDataType="bool"
                              cachedName="AllowParent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[allowparent]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[AllowParent]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[BulkWhois]"
                              cachedDataType="bool"
                              cachedName="BulkWhois"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[bulkwhois]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[BulkWhois]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[PromotionId]"
                              cachedDataType="i4"
                              cachedName="PromotionId"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[promotionid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[PromotionId]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[BillingPartyID]"
                              cachedDataType="guid"
                              cachedName="BillingPartyID"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[billingpartyid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[BillingPartyID]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[FilterMask]"
                              cachedDataType="i2"
                              cachedName="FilterMask"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[filtermask]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[FilterMask]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[InsertedDate]"
                              cachedDataType="dbTimeStamp"
                              cachedName="InsertedDate"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[inserteddate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[InsertedDate]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[SLDdotTLD]"
                              cachedDataType="wstr"
                              cachedLength="272"
                              cachedName="SLDdotTLD"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[slddottld]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[SLDdotTLD]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[EndUserPartyId]"
                              cachedDataType="guid"
                              cachedName="EndUserPartyId"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[enduserpartyid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[EndUserPartyId]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[IsPremium]"
                              cachedDataType="bool"
                              cachedName="IsPremium"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[ispremium]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[IsPremium]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[NextAttemptTime]"
                              cachedDataType="dbTimeStamp"
                              cachedName="NextAttemptTime"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[nextattempttime]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[NextAttemptTime]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[OriginalRegistrationStatus]"
                              cachedDataType="wstr"
                              cachedLength="20"
                              cachedName="OriginalRegistrationStatus"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[originalregistrationstatus]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[OriginalRegistrationStatus]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[ExpDate]"
                              cachedDataType="dbTimeStamp"
                              cachedName="ExpDate"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[expdate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[ExpDate]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[ExpStatusID]"
                              cachedDataType="i2"
                              cachedName="ExpStatusID"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[expstatusid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[ExpStatusID]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[StatusDate]"
                              cachedDataType="dbTimeStamp"
                              cachedName="StatusDate"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[statusdate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[StatusDate]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[CreationDate]"
                              cachedDataType="dbTimeStamp"
                              cachedName="CreationDate"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[creationdate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[CreationDate]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[EscrowHold]"
                              cachedDataType="bool"
                              cachedName="EscrowHold"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[escrowhold]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[EscrowHold]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[EscrowDate]"
                              cachedDataType="dbTimeStamp"
                              cachedName="EscrowDate"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[escrowdate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[EscrowDate]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[ROID]"
                              cachedDataType="wstr"
                              cachedLength="89"
                              cachedName="ROID"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[roid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[ROID]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[AuthInfo]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="AuthInfo"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[authinfo]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[AuthInfo]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[svTRID]"
                              cachedDataType="wstr"
                              cachedLength="64"
                              cachedName="svTRID"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[svtrid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[svTRID]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[IsSync]"
                              cachedDataType="ui1"
                              cachedName="IsSync"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[issync]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[IsSync]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[IsVerified]"
                              cachedDataType="bool"
                              cachedName="IsVerified"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[isverified]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[IsVerified]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[LastSyncDate]"
                              cachedDataType="dbTimeStamp"
                              cachedName="LastSyncDate"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[lastsyncdate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[LastSyncDate]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[LastAuthInfoSync]"
                              cachedDataType="dbTimeStamp"
                              cachedName="LastAuthInfoSync"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[lastauthinfosync]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[LastAuthInfoSync]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[NSStatus]"
                              cachedDataType="wstr"
                              cachedLength="20"
                              cachedName="NSStatus"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[nsstatus]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[NSStatus]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[max_deldate]"
                              cachedDataType="dbTimeStamp"
                              cachedName="max_deldate"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[deldate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[max_deldate]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[TransferInDate]"
                              cachedDataType="dbTimeStamp"
                              cachedName="TransferInDate"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[transferindate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output].Columns[TransferInDate]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[domainnameid]"
                              dataType="i4"
                              name="domainnameid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[sld]"
                              dataType="wstr"
                              length="256"
                              name="sld" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                              dataType="wstr"
                              length="15"
                              name="tld" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[customerdomainstatus]"
                              dataType="wstr"
                              length="15"
                              name="customerdomainstatus" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[registrationstatus]"
                              dataType="wstr"
                              length="20"
                              name="registrationstatus" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[renew]"
                              dataType="wstr"
                              length="5"
                              name="renew" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[regperiod]"
                              dataType="i2"
                              name="regperiod" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[website]"
                              dataType="i2"
                              name="website" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[encodingtype]"
                              dataType="wstr"
                              length="10"
                              name="encodingtype" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[hold]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="hold" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[rrprocessor]"
                              dataType="wstr"
                              length="4"
                              name="rrprocessor" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[allowparent]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="allowparent" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[bulkwhois]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="bulkwhois" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[promotionid]"
                              dataType="i4"
                              name="promotionid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[billingpartyid]"
                              dataType="guid"
                              name="billingpartyid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[filtermask]"
                              dataType="i2"
                              name="filtermask" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[inserteddate]"
                              dataType="dbTimeStamp2"
                              name="inserteddate"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[slddottld]"
                              dataType="wstr"
                              length="272"
                              name="slddottld" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[enduserpartyid]"
                              dataType="guid"
                              name="enduserpartyid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[ispremium]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="ispremium" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[nextattempttime]"
                              dataType="dbTimeStamp2"
                              name="nextattempttime"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[originalregistrationstatus]"
                              dataType="wstr"
                              length="20"
                              name="originalregistrationstatus" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[roid]"
                              dataType="wstr"
                              length="89"
                              name="roid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[authinfo]"
                              dataType="wstr"
                              length="255"
                              name="authinfo" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[svtrid]"
                              dataType="wstr"
                              length="64"
                              name="svtrid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[issync]"
                              dataType="i2"
                              name="issync" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[isverified]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="isverified" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[lastsyncdate]"
                              dataType="dbTimeStamp2"
                              name="lastsyncdate"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[lastauthinfosync]"
                              dataType="dbTimeStamp2"
                              name="lastauthinfosync"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[expdate]"
                              dataType="dbTimeStamp2"
                              name="expdate"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[expstatusid]"
                              dataType="i2"
                              name="expstatusid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[statusdate]"
                              dataType="dbTimeStamp2"
                              name="statusdate"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[creationdate]"
                              dataType="dbTimeStamp2"
                              name="creationdate"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[escrowhold]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="escrowhold" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[escrowdate]"
                              dataType="dbTimeStamp2"
                              name="escrowdate"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[nsstatus]"
                              dataType="wstr"
                              length="20"
                              name="nsstatus" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[deldate]"
                              dataType="dbTimeStamp2"
                              name="deldate"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[transferindate]"
                              dataType="dbTimeStamp2"
                              name="transferindate"
                              scale="6" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Outputs[ODBC Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="ODBC Destination Error Output"
                          synchronousInputId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO.Paths[ADO NET Source Output]"
                      endId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_.Inputs[ODBC Destination Input]"
                      name="ADO NET Source Output"
                      startId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source.Outputs[ADO NET Source Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{3126c8ef-3ec9-474d-968a-d9c4ad9357c7}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Extract DomainName to DomainName__ODBC"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="1">
                <DTS:Property
                  DTS:DataType="8"
                  DTS:Name="EventFilter">25,7,OnError,19,OnExecStatusChanged,13,OnInformation,27,OnPipelinePostComponentCall,25,OnPipelinePostEndOfRowset,25,OnPipelinePostPrimeOutput,26,OnPipelinePreComponentCall,24,OnPipelinePreEndOfRowset,24,OnPipelinePrePrimeOutput,18,OnPipelineRowsSent,13,OnPostExecute,14,OnPostValidate,12,OnPreExecute,13,OnPreValidate,10,OnProgress,13,OnQueryCancel,12,OnTaskFailed,22,OnVariableValueChanged,9,OnWarning,16,BufferSizeTuning,18,PipelineBufferLeak,21,PipelineComponentTime,21,PipelineExecutionPlan,22,PipelineExecutionTrees,22,PipelineInitialization</DTS:Property>
                <DTS:Property
                  DTS:EventName="BufferSizeTuning"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnError"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnExecStatusChanged"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnInformation"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPipelinePostComponentCall"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPipelinePostEndOfRowset"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPipelinePostPrimeOutput"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPipelinePreComponentCall"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPipelinePreEndOfRowset"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPipelinePrePrimeOutput"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPipelineRowsSent"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPostExecute"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPostValidate"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPreExecute"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPreValidate"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnProgress"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnQueryCancel"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnTaskFailed"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnVariableValueChanged"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnWarning"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="PipelineBufferLeak"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="PipelineComponentTime"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="PipelineExecutionPlan"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="PipelineExecutionTrees"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="PipelineInitialization"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
              </DTS:LoggingOptions>
              <DTS:PropertyExpression
                DTS:Name="[ODBC Source].[SqlCommand]">"SELECT dn.*, de.ExpDate, ExpStatusID, StatusDate, CreationDate, EscrowHold, EscrowDate, 
	ROID, AuthInfo, svTRID, IsSync, IsVerified, LastSyncDate, LastAuthInfoSync, NSStatus,ed.max_deldate,r.TransferInDate,
 idn.SLDdotTLD as uname
FROM dbo.DomainName dn (nolock)
LEFT JOIN dbo.DomainNameEPP dnp (nolock) on dn.DomainNameID=dnp.DomainNameID
LEFT JOIN dbo.DomainExpiration de (nolock) on dn.DomainNameID=de.DomainNameID
LEFT JOIN [EnomMigrationDB].[dbo]."+ @[$Package::Enom_TDP_domain_table_name] +" td (nolock) ON td.DomainNameID=dn.DomainNameID
LEFT JOIN [dbo].DomainDNS DNS (nolock)  ON DNS.DomainNameID=dn.DomainNameID
LEFT JOIN (SELECT MAX(deldate) as max_deldate,DomainNameID FROM [dbo].ExpiredDomains (nolock) group by  DomainNameID)ed
	  ON ed.DomainNameID=dn.DomainNameID  AND dn.registrationstatus = 'RGP'
LEFT JOIN (SELECT tld,sld,cast(InsertDate as  date) as InsertDate1,max(InsertDate) as TransferInDate 
			FROM [RegistryQueueLog].[dbo].[RegistryLog] (nolock)   WHERE MsgType='TransferApproved' GROUP BY tld,sld,cast(InsertDate as  date))  r
 	 ON  r.tld=dn.tld and r.sld=dn.sld and   r.[InsertDate1] =cast(dn.[InsertedDate] as date)
LEFT JOIN dbo.IDNDomainName idn (nolock)  on dn.DomainNameID=idn.DomainNameID
WHERE  td.DomainNameID IS NULL AND  dn.TLD='" +  @[$Package::TLD] +"' 
	AND dn.registrationstatus IN ('"+ @[$Project::Enom_domain_statuses] +"')
	AND dn.RRProcessor IN ('"+ @[$Project::RRProcessor] +"');"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <pipeline
                  autoAdjustBufferSize="true"
                  defaultBufferMaxRows="100000"
                  version="1">
                  <components>
                    <component
                      refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_"
                      componentClassID="Microsoft.SSISODBCDst"
                      contactInfo="ODBC Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="ODBC Destination"
                      name="ODBC Destination DimainName_"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The name of the table to be fetched."
                          expressionType="Notify"
                          name="TableName">"dm_enom"."domainname_"</property>
                        <property
                          dataType="System.Int32"
                          description="Specify the number of rows fetched per batch."
                          expressionType="Notify"
                          name="BatchSize">100000</property>
                        <property
                          dataType="System.Int32"
                          description="The number of rows inserted under the same transaction."
                          expressionType="Notify"
                          name="TransactionSize">100000</property>
                        <property
                          dataType="System.Int32"
                          description="Determines the chunk size allocation for LOB columns"
                          expressionType="Notify"
                          name="LobChunkSize">32768</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                          expressionType="Notify"
                          name="StatementTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="The code page to use when code page information is unavailable from the data source."
                          expressionType="Notify"
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Int32"
                          description="The method used for inserting data. Possible values are 'Batch' or 'Row by row'."
                          expressionType="Notify"
                          name="InsertMethod">1</property>
                        <property
                          dataType="System.Int32"
                          description="The ODBC C data type for binding numeric data."
                          expressionType="Notify"
                          name="BindNumericAs">0</property>
                        <property
                          dataType="System.Int32"
                          description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                          expressionType="Notify"
                          name="BindCharColumnsAs">0</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Connections[ODBCConnection]"
                          connectionManagerID="Package.ConnectionManagers[tdpdb]"
                          connectionManagerRefId="Package.ConnectionManagers[tdpdb]"
                          description="The ODBC runtime connection used to access the database."
                          name="ODBCConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="ODBC Destination Input"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[DomainNameID]"
                              cachedDataType="i4"
                              cachedName="DomainNameID"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[domainnameid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[DomainNameID]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[SLD]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="256"
                              cachedName="SLD"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[sld]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[SLD]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[TLD]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="15"
                              cachedName="TLD"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[TLD]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[CustomerDomainStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="15"
                              cachedName="CustomerDomainStatus"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[customerdomainstatus]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[CustomerDomainStatus]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[RegistrationStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="RegistrationStatus"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[registrationstatus]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[RegistrationStatus]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[Renew]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="5"
                              cachedName="Renew"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[renew]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[Renew]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[RegPeriod]"
                              cachedDataType="ui1"
                              cachedName="RegPeriod"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[regperiod]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[RegPeriod]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[WebSite]"
                              cachedDataType="ui1"
                              cachedName="WebSite"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[website]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[WebSite]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[EncodingType]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="10"
                              cachedName="EncodingType"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[encodingtype]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[EncodingType]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[Hold]"
                              cachedDataType="bool"
                              cachedName="Hold"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[hold]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[Hold]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[RRProcessor]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="4"
                              cachedName="RRProcessor"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[rrprocessor]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[RRProcessor]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[AllowParent]"
                              cachedDataType="bool"
                              cachedName="AllowParent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[allowparent]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[AllowParent]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[BulkWhois]"
                              cachedDataType="bool"
                              cachedName="BulkWhois"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[bulkwhois]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[BulkWhois]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[PromotionId]"
                              cachedDataType="i4"
                              cachedName="PromotionId"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[promotionid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[PromotionId]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[BillingPartyID]"
                              cachedDataType="guid"
                              cachedName="BillingPartyID"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[billingpartyid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[BillingPartyID]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[FilterMask]"
                              cachedDataType="i2"
                              cachedName="FilterMask"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[filtermask]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[FilterMask]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[InsertedDate]"
                              cachedDataType="dbTimeStamp"
                              cachedName="InsertedDate"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[inserteddate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[InsertedDate]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[SLDdotTLD]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="272"
                              cachedName="SLDdotTLD"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[slddottld]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[SLDdotTLD]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[EndUserPartyId]"
                              cachedDataType="guid"
                              cachedName="EndUserPartyId"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[enduserpartyid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[EndUserPartyId]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[IsPremium]"
                              cachedDataType="bool"
                              cachedName="IsPremium"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[ispremium]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[IsPremium]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[NextAttemptTime]"
                              cachedDataType="dbTimeStamp"
                              cachedName="NextAttemptTime"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[nextattempttime]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[NextAttemptTime]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[OriginalRegistrationStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="OriginalRegistrationStatus"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[originalregistrationstatus]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[OriginalRegistrationStatus]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[ExpDate]"
                              cachedDataType="dbTimeStamp"
                              cachedName="ExpDate"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[expdate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[ExpDate]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[ExpStatusID]"
                              cachedDataType="i2"
                              cachedName="ExpStatusID"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[expstatusid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[ExpStatusID]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[StatusDate]"
                              cachedDataType="dbTimeStamp"
                              cachedName="StatusDate"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[statusdate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[StatusDate]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[CreationDate]"
                              cachedDataType="dbTimeStamp"
                              cachedName="CreationDate"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[creationdate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[CreationDate]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[EscrowHold]"
                              cachedDataType="bool"
                              cachedName="EscrowHold"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[escrowhold]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[EscrowHold]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[EscrowDate]"
                              cachedDataType="dbTimeStamp"
                              cachedName="EscrowDate"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[escrowdate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[EscrowDate]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[ROID]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="89"
                              cachedName="ROID"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[roid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[ROID]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[AuthInfo]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="AuthInfo"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[authinfo]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[AuthInfo]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[svTRID]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="64"
                              cachedName="svTRID"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[svtrid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[svTRID]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[IsSync]"
                              cachedDataType="ui1"
                              cachedName="IsSync"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[issync]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[IsSync]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[IsVerified]"
                              cachedDataType="bool"
                              cachedName="IsVerified"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[isverified]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[IsVerified]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[LastSyncDate]"
                              cachedDataType="dbTimeStamp"
                              cachedName="LastSyncDate"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[lastsyncdate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[LastSyncDate]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[LastAuthInfoSync]"
                              cachedDataType="dbTimeStamp"
                              cachedName="LastAuthInfoSync"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[lastauthinfosync]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[LastAuthInfoSync]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[NSStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="NSStatus"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[nsstatus]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[NSStatus]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[max_deldate]"
                              cachedDataType="dbTimeStamp"
                              cachedName="max_deldate"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[deldate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[max_deldate]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].Columns[TransferInDate]"
                              cachedDataType="wstr"
                              cachedLength="24"
                              cachedName="TransferInDate"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[transferindate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[TransferInDate]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[domainnameid]"
                              dataType="i4"
                              name="domainnameid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[sld]"
                              dataType="wstr"
                              length="256"
                              name="sld" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                              dataType="wstr"
                              length="15"
                              name="tld" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[customerdomainstatus]"
                              dataType="wstr"
                              length="15"
                              name="customerdomainstatus" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[registrationstatus]"
                              dataType="wstr"
                              length="20"
                              name="registrationstatus" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[renew]"
                              dataType="wstr"
                              length="5"
                              name="renew" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[regperiod]"
                              dataType="i2"
                              name="regperiod" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[website]"
                              dataType="i2"
                              name="website" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[encodingtype]"
                              dataType="wstr"
                              length="10"
                              name="encodingtype" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[hold]"
                              codePage="1252"
                              dataType="str"
                              length="500"
                              name="hold" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[rrprocessor]"
                              dataType="wstr"
                              length="4"
                              name="rrprocessor" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[allowparent]"
                              codePage="1252"
                              dataType="str"
                              length="500"
                              name="allowparent" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[bulkwhois]"
                              codePage="1252"
                              dataType="str"
                              length="500"
                              name="bulkwhois" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[promotionid]"
                              dataType="i4"
                              name="promotionid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[billingpartyid]"
                              dataType="guid"
                              name="billingpartyid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[filtermask]"
                              dataType="i2"
                              name="filtermask" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[inserteddate]"
                              dataType="dbTimeStamp2"
                              name="inserteddate"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[slddottld]"
                              dataType="wstr"
                              length="272"
                              name="slddottld" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[enduserpartyid]"
                              dataType="guid"
                              name="enduserpartyid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[ispremium]"
                              codePage="1252"
                              dataType="str"
                              length="500"
                              name="ispremium" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[nextattempttime]"
                              dataType="dbTimeStamp2"
                              name="nextattempttime"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[originalregistrationstatus]"
                              dataType="wstr"
                              length="20"
                              name="originalregistrationstatus" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[roid]"
                              dataType="wstr"
                              length="89"
                              name="roid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[authinfo]"
                              dataType="wstr"
                              length="255"
                              name="authinfo" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[svtrid]"
                              dataType="wstr"
                              length="64"
                              name="svtrid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[issync]"
                              dataType="i2"
                              name="issync" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[isverified]"
                              codePage="1252"
                              dataType="str"
                              length="500"
                              name="isverified" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[lastsyncdate]"
                              dataType="dbTimeStamp2"
                              name="lastsyncdate"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[lastauthinfosync]"
                              dataType="dbTimeStamp2"
                              name="lastauthinfosync"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[expdate]"
                              dataType="dbTimeStamp2"
                              name="expdate"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[expstatusid]"
                              dataType="i2"
                              name="expstatusid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[statusdate]"
                              dataType="dbTimeStamp2"
                              name="statusdate"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[creationdate]"
                              dataType="dbTimeStamp2"
                              name="creationdate"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[escrowhold]"
                              codePage="1252"
                              dataType="str"
                              length="500"
                              name="escrowhold" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[escrowdate]"
                              dataType="dbTimeStamp2"
                              name="escrowdate"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[nsstatus]"
                              dataType="wstr"
                              length="20"
                              name="nsstatus" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[deldate]"
                              dataType="dbTimeStamp2"
                              name="deldate"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[transferindate]"
                              dataType="dbTimeStamp2"
                              name="transferindate"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input].ExternalColumns[uname]"
                              dataType="nText"
                              name="uname" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Outputs[ODBC Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="ODBC Destination Error Output"
                          synchronousInputId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source"
                      componentClassID="Microsoft.SSISODBCSrc"
                      contactInfo="ODBC Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="ODBC Source"
                      name="ODBC Source"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The name of the table to be fetched."
                          expressionType="Notify"
                          name="TableName"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT dn.*, de.ExpDate, ExpStatusID, StatusDate, CreationDate, EscrowHold, EscrowDate, 
	ROID, AuthInfo, svTRID, IsSync, IsVerified, LastSyncDate, LastAuthInfoSync, NSStatus,ed.max_deldate,r.TransferInDate,
 idn.SLDdotTLD as uname
FROM dbo.DomainName dn (nolock)
LEFT JOIN dbo.DomainNameEPP dnp (nolock) on dn.DomainNameID=dnp.DomainNameID
LEFT JOIN dbo.DomainExpiration de (nolock) on dn.DomainNameID=de.DomainNameID
LEFT JOIN [EnomMigrationDB].[dbo].TDP_domain_test td (nolock) ON td.DomainNameID=dn.DomainNameID
LEFT JOIN [dbo].DomainDNS DNS (nolock)  ON DNS.DomainNameID=dn.DomainNameID
LEFT JOIN (SELECT MAX(deldate) as max_deldate,DomainNameID FROM [dbo].ExpiredDomains (nolock) group by  DomainNameID)ed
	  ON ed.DomainNameID=dn.DomainNameID  AND dn.registrationstatus = 'RGP'
LEFT JOIN (SELECT tld,sld,cast(InsertDate as  date) as InsertDate1,max(InsertDate) as TransferInDate 
			FROM [RegistryQueueLog].[dbo].[RegistryLog] (nolock)   WHERE MsgType='TransferApproved' GROUP BY tld,sld,cast(InsertDate as  date))  r
 	 ON  r.tld=dn.tld and r.sld=dn.sld and   r.[InsertDate1] =cast(dn.[InsertedDate] as date)
LEFT JOIN dbo.IDNDomainName idn (nolock)  on dn.DomainNameID=idn.DomainNameID
WHERE  td.DomainNameID IS NULL AND  dn.TLD='co.in' 
	AND dn.registrationstatus IN ('Registered', 'Expired', 'Extended RGP', 'RGP', 'RGP Deactivated', 'Imminent Delete')
	AND dn.RRProcessor IN ('E');</property>
                        <property
                          dataType="System.Int32"
                          description="Specify the number of rows fetched per batch."
                          expressionType="Notify"
                          name="BatchSize">100000</property>
                        <property
                          dataType="System.Int32"
                          description="Determines the chunk size allocation for LOB columns"
                          expressionType="Notify"
                          name="LobChunkSize">32768</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines how the component exposes CHAR columns. If False, CHAR columns are exposed as (multi-)byte strings (DT_STR), if True, CHAR columns are exposed as wide strings (DT_WSTR)"
                          expressionType="Notify"
                          name="ExposeCharColumnsAsUnicode">false</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                          expressionType="Notify"
                          name="StatementTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="The code page to use when code page information is unavailable from the data source."
                          expressionType="Notify"
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Int32"
                          description="The method used for fetching data."
                          expressionType="Notify"
                          name="FetchMethod">1</property>
                        <property
                          dataType="System.Int32"
                          description="The ODBC C data type for binding numeric data."
                          expressionType="Notify"
                          name="BindNumericAs">0</property>
                        <property
                          dataType="System.Int32"
                          description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                          expressionType="Notify"
                          name="BindCharColumnsAs">0</property>
                        <property
                          dataType="System.Int32"
                          description="The mode used to access the database."
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="AccessMode">1</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Connections[ODBCConnection]"
                          connectionManagerID="Package.ConnectionManagers[Enom_ODBC_NameHost]"
                          connectionManagerRefId="Package.ConnectionManagers[Enom_ODBC_NameHost]"
                          description="The ODBC runtime connection used to access the database."
                          name="ODBCConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output]"
                          errorRowDisposition="FailComponent"
                          name="ODBC Source Output"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[DomainNameID]"
                              dataType="i4"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[DomainNameID]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[DomainNameID]"
                              name="DomainNameID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[SLD]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[SLD]"
                              length="256"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[SLD]"
                              name="SLD" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[TLD]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[TLD]"
                              length="15"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[TLD]"
                              name="TLD" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[CustomerDomainStatus]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[CustomerDomainStatus]"
                              length="15"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[CustomerDomainStatus]"
                              name="CustomerDomainStatus" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[RegistrationStatus]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[RegistrationStatus]"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[RegistrationStatus]"
                              name="RegistrationStatus" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[Renew]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[Renew]"
                              length="5"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[Renew]"
                              name="Renew" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[RegPeriod]"
                              dataType="ui1"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[RegPeriod]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[RegPeriod]"
                              name="RegPeriod" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[WebSite]"
                              dataType="ui1"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[WebSite]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[WebSite]"
                              name="WebSite" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[EncodingType]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[EncodingType]"
                              length="10"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[EncodingType]"
                              name="EncodingType" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[Hold]"
                              dataType="bool"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[Hold]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[Hold]"
                              name="Hold" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[RRProcessor]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[RRProcessor]"
                              length="4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[RRProcessor]"
                              name="RRProcessor" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[AllowParent]"
                              dataType="bool"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[AllowParent]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[AllowParent]"
                              name="AllowParent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[BulkWhois]"
                              dataType="bool"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[BulkWhois]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[BulkWhois]"
                              name="BulkWhois" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[PromotionId]"
                              dataType="i4"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[PromotionId]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[PromotionId]"
                              name="PromotionId" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[BillingPartyID]"
                              dataType="guid"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[BillingPartyID]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[BillingPartyID]"
                              name="BillingPartyID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[FilterMask]"
                              dataType="i2"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[FilterMask]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[FilterMask]"
                              name="FilterMask" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[InsertedDate]"
                              dataType="dbTimeStamp"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[InsertedDate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[InsertedDate]"
                              name="InsertedDate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[SLDdotTLD]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[SLDdotTLD]"
                              length="272"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[SLDdotTLD]"
                              name="SLDdotTLD" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[EndUserPartyId]"
                              dataType="guid"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[EndUserPartyId]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[EndUserPartyId]"
                              name="EndUserPartyId" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[IsPremium]"
                              dataType="bool"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[IsPremium]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[IsPremium]"
                              name="IsPremium" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[NextAttemptTime]"
                              dataType="dbTimeStamp"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[NextAttemptTime]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[NextAttemptTime]"
                              name="NextAttemptTime" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[OriginalRegistrationStatus]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[OriginalRegistrationStatus]"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[OriginalRegistrationStatus]"
                              name="OriginalRegistrationStatus" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[ExpDate]"
                              dataType="dbTimeStamp"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[ExpDate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[ExpDate]"
                              name="ExpDate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[ExpStatusID]"
                              dataType="i2"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[ExpStatusID]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[ExpStatusID]"
                              name="ExpStatusID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[StatusDate]"
                              dataType="dbTimeStamp"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[StatusDate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[StatusDate]"
                              name="StatusDate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[CreationDate]"
                              dataType="dbTimeStamp"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[CreationDate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[CreationDate]"
                              name="CreationDate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[EscrowHold]"
                              dataType="bool"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[EscrowHold]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[EscrowHold]"
                              name="EscrowHold" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[EscrowDate]"
                              dataType="dbTimeStamp"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[EscrowDate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[EscrowDate]"
                              name="EscrowDate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[ROID]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[ROID]"
                              length="89"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[ROID]"
                              name="ROID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[AuthInfo]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[AuthInfo]"
                              length="255"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[AuthInfo]"
                              name="AuthInfo" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[svTRID]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[svTRID]"
                              length="64"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[svTRID]"
                              name="svTRID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[IsSync]"
                              dataType="ui1"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[IsSync]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[IsSync]"
                              name="IsSync" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[IsVerified]"
                              dataType="bool"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[IsVerified]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[IsVerified]"
                              name="IsVerified" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[LastSyncDate]"
                              dataType="dbTimeStamp"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[LastSyncDate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[LastSyncDate]"
                              name="LastSyncDate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[LastAuthInfoSync]"
                              dataType="dbTimeStamp"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[LastAuthInfoSync]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[LastAuthInfoSync]"
                              name="LastAuthInfoSync" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[NSStatus]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[NSStatus]"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[NSStatus]"
                              name="NSStatus" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[max_deldate]"
                              dataType="dbTimeStamp"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[max_deldate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[max_deldate]"
                              name="max_deldate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[TransferInDate]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[TransferInDate]"
                              length="24"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[TransferInDate]"
                              name="TransferInDate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[uname]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[uname]"
                              length="271"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].Columns[uname]"
                              name="uname" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[DomainNameID]"
                              dataType="i4"
                              name="DomainNameID" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[SLD]"
                              codePage="1252"
                              dataType="str"
                              length="256"
                              name="SLD" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[TLD]"
                              codePage="1252"
                              dataType="str"
                              length="15"
                              name="TLD" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[CustomerDomainStatus]"
                              codePage="1252"
                              dataType="str"
                              length="15"
                              name="CustomerDomainStatus" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[RegistrationStatus]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              name="RegistrationStatus" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[Renew]"
                              codePage="1252"
                              dataType="str"
                              length="5"
                              name="Renew" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[RegPeriod]"
                              dataType="ui1"
                              name="RegPeriod" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[WebSite]"
                              dataType="ui1"
                              name="WebSite" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[EncodingType]"
                              codePage="1252"
                              dataType="str"
                              length="10"
                              name="EncodingType" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[Hold]"
                              dataType="bool"
                              name="Hold" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[RRProcessor]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              name="RRProcessor" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[AllowParent]"
                              dataType="bool"
                              name="AllowParent" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[BulkWhois]"
                              dataType="bool"
                              name="BulkWhois" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[PromotionId]"
                              dataType="i4"
                              name="PromotionId" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[BillingPartyID]"
                              dataType="guid"
                              name="BillingPartyID" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[FilterMask]"
                              dataType="i2"
                              name="FilterMask" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[InsertedDate]"
                              dataType="dbTimeStamp"
                              name="InsertedDate" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[SLDdotTLD]"
                              codePage="1252"
                              dataType="str"
                              length="272"
                              name="SLDdotTLD" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[EndUserPartyId]"
                              dataType="guid"
                              name="EndUserPartyId" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[IsPremium]"
                              dataType="bool"
                              name="IsPremium" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[NextAttemptTime]"
                              dataType="dbTimeStamp"
                              name="NextAttemptTime" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[OriginalRegistrationStatus]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              name="OriginalRegistrationStatus" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[ExpDate]"
                              dataType="dbTimeStamp"
                              name="ExpDate" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[ExpStatusID]"
                              dataType="i2"
                              name="ExpStatusID" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[StatusDate]"
                              dataType="dbTimeStamp"
                              name="StatusDate" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[CreationDate]"
                              dataType="dbTimeStamp"
                              name="CreationDate" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[EscrowHold]"
                              dataType="bool"
                              name="EscrowHold" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[EscrowDate]"
                              dataType="dbTimeStamp"
                              name="EscrowDate" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[ROID]"
                              codePage="1252"
                              dataType="str"
                              length="89"
                              name="ROID" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[AuthInfo]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="AuthInfo" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[svTRID]"
                              codePage="1252"
                              dataType="str"
                              length="64"
                              name="svTRID" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[IsSync]"
                              dataType="ui1"
                              name="IsSync" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[IsVerified]"
                              dataType="bool"
                              name="IsVerified" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[LastSyncDate]"
                              dataType="dbTimeStamp"
                              name="LastSyncDate" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[LastAuthInfoSync]"
                              dataType="dbTimeStamp"
                              name="LastAuthInfoSync" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[NSStatus]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              name="NSStatus" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[max_deldate]"
                              dataType="dbTimeStamp"
                              name="max_deldate" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[TransferInDate]"
                              dataType="wstr"
                              length="24"
                              name="TransferInDate" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[uname]"
                              dataType="wstr"
                              length="271"
                              name="uname" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output]"
                          isErrorOut="true"
                          name="ODBC Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[DomainNameID]"
                              dataType="i4"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[DomainNameID]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[DomainNameID]"
                              name="DomainNameID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[SLD]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[SLD]"
                              length="256"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[SLD]"
                              name="SLD" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[TLD]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[TLD]"
                              length="15"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[TLD]"
                              name="TLD" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[CustomerDomainStatus]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[CustomerDomainStatus]"
                              length="15"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[CustomerDomainStatus]"
                              name="CustomerDomainStatus" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[RegistrationStatus]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[RegistrationStatus]"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[RegistrationStatus]"
                              name="RegistrationStatus" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[Renew]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[Renew]"
                              length="5"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[Renew]"
                              name="Renew" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[RegPeriod]"
                              dataType="ui1"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[RegPeriod]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[RegPeriod]"
                              name="RegPeriod" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[WebSite]"
                              dataType="ui1"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[WebSite]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[WebSite]"
                              name="WebSite" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[EncodingType]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[EncodingType]"
                              length="10"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[EncodingType]"
                              name="EncodingType" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[Hold]"
                              dataType="bool"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[Hold]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[Hold]"
                              name="Hold" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[RRProcessor]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[RRProcessor]"
                              length="4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[RRProcessor]"
                              name="RRProcessor" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[AllowParent]"
                              dataType="bool"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[AllowParent]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[AllowParent]"
                              name="AllowParent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[BulkWhois]"
                              dataType="bool"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[BulkWhois]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[BulkWhois]"
                              name="BulkWhois" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[PromotionId]"
                              dataType="i4"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[PromotionId]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[PromotionId]"
                              name="PromotionId" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[BillingPartyID]"
                              dataType="guid"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[BillingPartyID]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[BillingPartyID]"
                              name="BillingPartyID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[FilterMask]"
                              dataType="i2"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[FilterMask]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[FilterMask]"
                              name="FilterMask" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[InsertedDate]"
                              dataType="dbTimeStamp"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[InsertedDate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[InsertedDate]"
                              name="InsertedDate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[SLDdotTLD]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[SLDdotTLD]"
                              length="272"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[SLDdotTLD]"
                              name="SLDdotTLD" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[EndUserPartyId]"
                              dataType="guid"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[EndUserPartyId]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[EndUserPartyId]"
                              name="EndUserPartyId" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[IsPremium]"
                              dataType="bool"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[IsPremium]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[IsPremium]"
                              name="IsPremium" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[NextAttemptTime]"
                              dataType="dbTimeStamp"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[NextAttemptTime]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[NextAttemptTime]"
                              name="NextAttemptTime" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[OriginalRegistrationStatus]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[OriginalRegistrationStatus]"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[OriginalRegistrationStatus]"
                              name="OriginalRegistrationStatus" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[ExpDate]"
                              dataType="dbTimeStamp"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[ExpDate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[ExpDate]"
                              name="ExpDate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[ExpStatusID]"
                              dataType="i2"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[ExpStatusID]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[ExpStatusID]"
                              name="ExpStatusID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[StatusDate]"
                              dataType="dbTimeStamp"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[StatusDate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[StatusDate]"
                              name="StatusDate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[CreationDate]"
                              dataType="dbTimeStamp"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[CreationDate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[CreationDate]"
                              name="CreationDate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[EscrowHold]"
                              dataType="bool"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[EscrowHold]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[EscrowHold]"
                              name="EscrowHold" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[EscrowDate]"
                              dataType="dbTimeStamp"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[EscrowDate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[EscrowDate]"
                              name="EscrowDate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[ROID]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[ROID]"
                              length="89"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[ROID]"
                              name="ROID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[AuthInfo]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[AuthInfo]"
                              length="255"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[AuthInfo]"
                              name="AuthInfo" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[svTRID]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[svTRID]"
                              length="64"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[svTRID]"
                              name="svTRID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[IsSync]"
                              dataType="ui1"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[IsSync]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[IsSync]"
                              name="IsSync" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[IsVerified]"
                              dataType="bool"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[IsVerified]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[IsVerified]"
                              name="IsVerified" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[LastSyncDate]"
                              dataType="dbTimeStamp"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[LastSyncDate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[LastSyncDate]"
                              name="LastSyncDate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[LastAuthInfoSync]"
                              dataType="dbTimeStamp"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[LastAuthInfoSync]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[LastAuthInfoSync]"
                              name="LastAuthInfoSync" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[NSStatus]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[NSStatus]"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[NSStatus]"
                              name="NSStatus" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[max_deldate]"
                              dataType="dbTimeStamp"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[max_deldate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[max_deldate]"
                              name="max_deldate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[TransferInDate]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[TransferInDate]"
                              length="24"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[TransferInDate]"
                              name="TransferInDate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[uname]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[uname]"
                              length="271"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[uname]"
                              name="uname" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC.Paths[ODBC Source Output]"
                      endId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_.Inputs[ODBC Destination Input]"
                      name="ODBC Source Output"
                      startId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source.Outputs[ODBC Source Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP"
              DTS:CreationName="STOCK:SEQUENCE"
              DTS:Description="Sequence Container"
              DTS:DTSID="{C1D6B683-0067-4B4A-8B48-D78B57B5C6AE}"
              DTS:ExecutableType="STOCK:SEQUENCE"
              DTS:LocaleID="-1"
              DTS:ObjectName="Mark in Enom that domain exists in TDP">
              <DTS:Variables />
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Clean Enom_TDP_domain_"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{079cbab2-478a-447a-a654-a45799ea13e4}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Clean Enom_TDP_domain_"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="0">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:FilterKind="0" />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{EA1AB8D1-1F16-4E59-BEBD-75ADB38848AE}"
                      SQLTask:SqlStatementSource="TRUNCATE TABLE [EnomMigrationDB].[dbo].[TDP_domain_]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_"
                  DTS:CreationName="Microsoft.Pipeline"
                  DTS:Description="Data Flow Task"
                  DTS:DTSID="{ec9c265d-bfa0-48e8-90c3-9db6d2719686}"
                  DTS:ExecutableType="Microsoft.Pipeline"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Mark domain as Exists TDP in Enom_TDP_domain_"
                  DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:FilterKind="0" />
                  <DTS:PropertyExpression
                    DTS:Name="[ODBC Source dm_enom_domainname_].[SqlCommand]">"SELECT d.id,  dn_.domainnameid ,  lower(dn_.tld)::varchar(15)  as tld1,''::varchar(15)  as phase, 'Exists in TDP'::varchar(50) as Status  
 FROM dm_enom.domainname_  dn_
 JOIN public.domain d ON  d.name=dn_.slddottld
 WHERE  lower(tld) ='"+ @[$Package::TLD] +"';"</DTS:PropertyExpression>
                  <DTS:ObjectData>
                    <pipeline
                      autoAdjustBufferSize="true"
                      defaultBufferMaxRows="100000"
                      version="1">
                      <components>
                        <component
                          refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination"
                          componentClassID="Microsoft.ManagedComponentHost"
                          contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                          description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
                          name="ADO NET Destination"
                          usesDispositions="true"
                          version="2">
                          <properties>
                            <property
                              dataType="System.String"
                              description="The Destination database table name."
                              expressionType="Notify"
                              name="TableOrViewName"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."TDP_domain_"</property>
                            <property
                              dataType="System.Int32"
                              description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                              expressionType="Notify"
                              name="BatchSize">100000</property>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                              expressionType="Notify"
                              name="CommandTimeout">30</property>
                            <property
                              dataType="System.Boolean"
                              description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                              expressionType="Notify"
                              name="UseBulkInsertWhenPossible">true</property>
                            <property
                              dataType="System.String"
                              name="UserComponentTypeName">Microsoft.ADONETDestination</property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Connections[IDbConnection]"
                              connectionManagerID="Package.ConnectionManagers[Enom_ADO_EnomMigrationDB]"
                              connectionManagerRefId="Package.ConnectionManagers[Enom_ADO_EnomMigrationDB]"
                              description="Managed connection manager"
                              name="IDbConnection" />
                          </connections>
                          <inputs>
                            <input
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Inputs[ADO NET Destination Input]"
                              errorRowDisposition="FailComponent"
                              hasSideEffects="true"
                              name="ADO NET Destination Input">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[domainnameid]"
                                  cachedDataType="i4"
                                  cachedName="domainnameid"
                                  externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[DomainNameId]"
                                  lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].Columns[domainnameid]" />
                                <inputColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[status]"
                                  cachedDataType="wstr"
                                  cachedLength="50"
                                  cachedName="status"
                                  externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Status]"
                                  lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].Columns[status]" />
                                <inputColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[id]"
                                  cachedDataType="guid"
                                  cachedName="id"
                                  externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[TDP_domain_id]"
                                  lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].Columns[id]" />
                                <inputColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[phase]"
                                  cachedDataType="wstr"
                                  cachedLength="15"
                                  cachedName="phase"
                                  externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Migration_phase]"
                                  lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].Columns[phase]" />
                                <inputColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[tld1]"
                                  cachedDataType="wstr"
                                  cachedLength="15"
                                  cachedName="tld1"
                                  externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[TLD]"
                                  lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].Columns[tld1]" />
                              </inputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[TLD]"
                                  dataType="wstr"
                                  length="15"
                                  name="TLD" />
                                <externalMetadataColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[TDP_domain_id]"
                                  dataType="guid"
                                  name="TDP_domain_id" />
                                <externalMetadataColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[DomainNameId]"
                                  dataType="i4"
                                  name="DomainNameId" />
                                <externalMetadataColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Migration_date]"
                                  dataType="dbTimeStamp"
                                  name="Migration_date" />
                                <externalMetadataColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Migration_phase]"
                                  dataType="wstr"
                                  length="15"
                                  name="Migration_phase" />
                                <externalMetadataColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Status]"
                                  dataType="wstr"
                                  length="100"
                                  name="Status" />
                              </externalMetadataColumns>
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Outputs[ADO NET Destination Error Output]"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="ADO NET Destination Error Output"
                              synchronousInputId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Inputs[ADO NET Destination Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_"
                          componentClassID="Microsoft.SSISODBCSrc"
                          contactInfo="ODBC Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                          description="ODBC Source"
                          name="ODBC Source dm_enom_domainname_"
                          usesDispositions="true"
                          version="1">
                          <properties>
                            <property
                              dataType="System.String"
                              description="The name of the table to be fetched."
                              expressionType="Notify"
                              name="TableName"></property>
                            <property
                              dataType="System.String"
                              description="The SQL command to be executed."
                              expressionType="Notify"
                              name="SqlCommand"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT d.id,  dn_.domainnameid ,  lower(dn_.tld)::varchar(15)  as tld1,''::varchar(15)  as phase, 'Exists in TDP'::varchar(50) as Status  
 FROM dm_enom.domainname_  dn_
 JOIN public.domain d ON  d.name=dn_.slddottld
 WHERE  lower(tld) ='co.in';</property>
                            <property
                              dataType="System.Int32"
                              description="Specify the number of rows fetched per batch."
                              expressionType="Notify"
                              name="BatchSize">100000</property>
                            <property
                              dataType="System.Int32"
                              description="Determines the chunk size allocation for LOB columns"
                              expressionType="Notify"
                              name="LobChunkSize">32768</property>
                            <property
                              dataType="System.Boolean"
                              description="Determines how the component exposes CHAR columns. If False, CHAR columns are exposed as (multi-)byte strings (DT_STR), if True, CHAR columns are exposed as wide strings (DT_WSTR)"
                              expressionType="Notify"
                              name="ExposeCharColumnsAsUnicode">false</property>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                              expressionType="Notify"
                              name="StatementTimeout">0</property>
                            <property
                              dataType="System.Int32"
                              description="The code page to use when code page information is unavailable from the data source."
                              expressionType="Notify"
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Int32"
                              description="The method used for fetching data."
                              expressionType="Notify"
                              name="FetchMethod">1</property>
                            <property
                              dataType="System.Int32"
                              description="The ODBC C data type for binding numeric data."
                              expressionType="Notify"
                              name="BindNumericAs">0</property>
                            <property
                              dataType="System.Int32"
                              description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                              expressionType="Notify"
                              name="BindCharColumnsAs">0</property>
                            <property
                              dataType="System.Int32"
                              description="The mode used to access the database."
                              expressionType="Notify"
                              name="AccessMode"
                              typeConverter="AccessMode">1</property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Connections[ODBCConnection]"
                              connectionManagerID="Package.ConnectionManagers[tdpdb]"
                              connectionManagerRefId="Package.ConnectionManagers[tdpdb]"
                              description="The ODBC runtime connection used to access the database."
                              name="ODBCConnection" />
                          </connections>
                          <outputs>
                            <output
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output]"
                              errorRowDisposition="FailComponent"
                              name="ODBC Source Output"
                              truncationRowDisposition="FailComponent">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].Columns[id]"
                                  dataType="guid"
                                  externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].ExternalColumns[id]"
                                  lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].Columns[id]"
                                  name="id" />
                                <outputColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].Columns[phase]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].ExternalColumns[phase]"
                                  length="15"
                                  lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].Columns[phase]"
                                  name="phase" />
                                <outputColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].Columns[domainnameid]"
                                  dataType="i4"
                                  externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].ExternalColumns[domainnameid]"
                                  lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].Columns[domainnameid]"
                                  name="domainnameid" />
                                <outputColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].Columns[status]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].ExternalColumns[status]"
                                  length="50"
                                  lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].Columns[status]"
                                  name="status" />
                                <outputColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].Columns[tld1]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].ExternalColumns[tld1]"
                                  length="15"
                                  lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].Columns[tld1]"
                                  name="tld1" />
                              </outputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].ExternalColumns[id]"
                                  dataType="guid"
                                  name="id" />
                                <externalMetadataColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].ExternalColumns[phase]"
                                  dataType="wstr"
                                  length="15"
                                  name="phase" />
                                <externalMetadataColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].ExternalColumns[domainnameid]"
                                  dataType="i4"
                                  name="domainnameid" />
                                <externalMetadataColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].ExternalColumns[status]"
                                  dataType="wstr"
                                  length="50"
                                  name="status" />
                                <externalMetadataColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].ExternalColumns[tld1]"
                                  dataType="wstr"
                                  length="15"
                                  name="tld1" />
                              </externalMetadataColumns>
                            </output>
                            <output
                              refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Error Output]"
                              isErrorOut="true"
                              name="ODBC Source Error Output">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Error Output].Columns[id]"
                                  dataType="guid"
                                  externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].ExternalColumns[id]"
                                  lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Error Output].Columns[id]"
                                  name="id" />
                                <outputColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Error Output].Columns[phase]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].ExternalColumns[phase]"
                                  length="15"
                                  lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Error Output].Columns[phase]"
                                  name="phase" />
                                <outputColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Error Output].Columns[domainnameid]"
                                  dataType="i4"
                                  externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].ExternalColumns[domainnameid]"
                                  lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Error Output].Columns[domainnameid]"
                                  name="domainnameid" />
                                <outputColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Error Output].Columns[status]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].ExternalColumns[status]"
                                  length="50"
                                  lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Error Output].Columns[status]"
                                  name="status" />
                                <outputColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Error Output].Columns[tld1]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output].ExternalColumns[tld1]"
                                  length="15"
                                  lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Error Output].Columns[tld1]"
                                  name="tld1" />
                                <outputColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                      </components>
                      <paths>
                        <path
                          refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_.Paths[ODBC Source Output]"
                          endId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination.Inputs[ADO NET Destination Input]"
                          name="ODBC Source Output"
                          startId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_.Outputs[ODBC Source Output]" />
                      </paths>
                    </pipeline>
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Merge Enom_TDP_domain_ to Enom_TDP_domain"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{f2e19c9c-4336-4afa-b7de-a2bc9df65fb8}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Merge Enom_TDP_domain_ to Enom_TDP_domain"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="0">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:FilterKind="0" />
                  <DTS:PropertyExpression
                    DTS:Name="SqlStatementSource">"BEGIN
INSERT INTO dbo."+ @[$Package::Enom_TDP_domain_table_name] +" ([TLD] ,[TDP_domain_id] ,[DomainNameId]  ,[Migration_phase], [Status])
 SELECT d_.TLD, d_.TDP_domain_id, d_.DomainNameId,  d_.Migration_phase,d_.[Status] 
 FROM [dbo].[TDP_domain_]  d_
 LEFT JOIN  dbo."+ @[$Package::Enom_TDP_domain_table_name] +" d on d.[DomainNameId]=d_.[DomainNameId]
 WHERE d.DomainNameId IS NULL;
END"</DTS:PropertyExpression>
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{EA1AB8D1-1F16-4E59-BEBD-75ADB38848AE}"
                      SQLTask:SqlStatementSource="BEGIN&#xA;INSERT INTO dbo.TDP_domain_test ([TLD] ,[TDP_domain_id] ,[DomainNameId]  ,[Migration_phase], [Status])&#xA; SELECT d_.TLD, d_.TDP_domain_id, d_.DomainNameId,  d_.Migration_phase,d_.[Status] &#xA; FROM [dbo].[TDP_domain_]  d_&#xA; LEFT JOIN  dbo.TDP_domain_test d on d.[DomainNameId]=d_.[DomainNameId]&#xA; WHERE d.DomainNameId IS NULL;&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
              <DTS:PrecedenceConstraints>
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP.PrecedenceConstraints[Constraint 1]"
                  DTS:CreationName=""
                  DTS:DTSID="{5C632EE4-10B3-4CA9-AC94-974031F4EBC2}"
                  DTS:From="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Clean Enom_TDP_domain_"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint 1"
                  DTS:To="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_" />
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP.PrecedenceConstraints[Constraint 2]"
                  DTS:CreationName=""
                  DTS:DTSID="{A1415595-1E8C-4AAF-A257-FFEBC53C0519}"
                  DTS:From="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint 2"
                  DTS:To="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Merge Enom_TDP_domain_ to Enom_TDP_domain" />
              </DTS:PrecedenceConstraints>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Merge DomainName_ to DomainNmae"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{1bb33438-b567-4cc0-b658-d8a1905bf06b}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Merge DomainName_ to DomainNmae"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="1">
                <DTS:Property
                  DTS:DataType="8"
                  DTS:Name="EventFilter">13,7,OnError,19,OnExecStatusChanged,13,OnInformation,13,OnPostExecute,14,OnPostValidate,12,OnPreExecute,13,OnPreValidate,10,OnProgress,13,OnQueryCancel,12,OnTaskFailed,22,OnVariableValueChanged,9,OnWarning,24,ExecuteSQLExecutingQuery</DTS:Property>
                <DTS:Property
                  DTS:EventName="ExecuteSQLExecutingQuery"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnError"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnExecStatusChanged"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnInformation"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPostExecute"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPostValidate"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPreExecute"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPreValidate"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnProgress"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnQueryCancel"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnTaskFailed"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnVariableValueChanged"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnWarning"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
              </DTS:LoggingOptions>
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN; 
DELETE  FROM dm_enom.DomainName_ dn_
USING  public.domain d
WHERE d.name=dn_.slddottld;

DELETE  FROM dm_enom.DomainName dn
WHERE dn. itdp_domain_id IS  NULL AND TLD ='"+ @[$Package::TLD] +"';

INSERT INTO dm_enom.DomainName (domainnameid, sld, tld, customerdomainstatus, registrationstatus, renew, regperiod, website, encodingtype, hold, rrprocessor, allowparent, bulkwhois, promotionid, billingpartyid, filtermask, inserteddate, slddottld, enduserpartyid, ispremium, nextattempttime, originalregistrationstatus,
ExpDate, ExpStatusID, StatusDate, CreationDate, EscrowHold, EscrowDate, ROID, AuthInfo, svTRID, IsSync, IsVerified, LastSyncDate,
LastAuthInfoSync, NSStatus, deldate,TransferInDate, uname)
SELECT d.domainnameid, d.sld, lower(d.tld), d.customerdomainstatus, d.registrationstatus, d.renew, d.regperiod, d.website, d.encodingtype, d.hold,d.rrprocessor, d.allowparent, d.bulkwhois, d.promotionid, d.billingpartyid, d.filtermask, d.inserteddate, lower(d.slddottld), d.enduserpartyid, d.ispremium, d.nextattempttime, d.originalregistrationstatus,
d.ExpDate, d.ExpStatusID, d.StatusDate, d.CreationDate, d.EscrowHold, d.EscrowDate, d.ROID, d.AuthInfo, d.svTRID,
d.IsSync, d.IsVerified, d.LastSyncDate, d.LastAuthInfoSync, COALESCE(d.NSStatus,'unknown'), d.deldate, d.TransferInDate, d.uname
FROM dm_enom.DomainName_ d
WHERE NOT EXISTS (
    SELECT 1 FROM dm_enom.DomainName dn WHERE dn.DomainNameID = d.DomainNameID
) ;
ANALYSE dm_enom.DomainName;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN; &#xA;DELETE  FROM dm_enom.DomainName_ dn_&#xA;USING  public.domain d&#xA;WHERE d.name=dn_.slddottld;&#xA;&#xA;DELETE  FROM dm_enom.DomainName dn&#xA;WHERE dn. itdp_domain_id IS  NULL AND TLD ='co.in';&#xA;&#xA;INSERT INTO dm_enom.DomainName (domainnameid, sld, tld, customerdomainstatus, registrationstatus, renew, regperiod, website, encodingtype, hold, rrprocessor, allowparent, bulkwhois, promotionid, billingpartyid, filtermask, inserteddate, slddottld, enduserpartyid, ispremium, nextattempttime, originalregistrationstatus,&#xA;ExpDate, ExpStatusID, StatusDate, CreationDate, EscrowHold, EscrowDate, ROID, AuthInfo, svTRID, IsSync, IsVerified, LastSyncDate,&#xA;LastAuthInfoSync, NSStatus, deldate,TransferInDate, uname)&#xA;SELECT d.domainnameid, d.sld, lower(d.tld), d.customerdomainstatus, d.registrationstatus, d.renew, d.regperiod, d.website, d.encodingtype, d.hold,d.rrprocessor, d.allowparent, d.bulkwhois, d.promotionid, d.billingpartyid, d.filtermask, d.inserteddate, lower(d.slddottld), d.enduserpartyid, d.ispremium, d.nextattempttime, d.originalregistrationstatus,&#xA;d.ExpDate, d.ExpStatusID, d.StatusDate, d.CreationDate, d.EscrowHold, d.EscrowDate, d.ROID, d.AuthInfo, d.svTRID,&#xA;d.IsSync, d.IsVerified, d.LastSyncDate, d.LastAuthInfoSync, COALESCE(d.NSStatus,'unknown'), d.deldate, d.TransferInDate, d.uname&#xA;FROM dm_enom.DomainName_ d&#xA;WHERE NOT EXISTS (&#xA;    SELECT 1 FROM dm_enom.DomainName dn WHERE dn.DomainNameID = d.DomainNameID&#xA;) ;&#xA;ANALYSE dm_enom.DomainName;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Truncate DomainName_"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{1a0a5e7f-9fca-40d3-bf87-4a520e84f33d}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Truncate DomainName_"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="1">
                <DTS:Property
                  DTS:DataType="8"
                  DTS:Name="EventFilter">13,7,OnError,19,OnExecStatusChanged,13,OnInformation,13,OnPostExecute,14,OnPostValidate,12,OnPreExecute,13,OnPreValidate,10,OnProgress,13,OnQueryCancel,12,OnTaskFailed,22,OnVariableValueChanged,9,OnWarning,24,ExecuteSQLExecutingQuery</DTS:Property>
                <DTS:Property
                  DTS:EventName="ExecuteSQLExecutingQuery"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnError"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnExecStatusChanged"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnInformation"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPostExecute"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPostValidate"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPreExecute"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPreValidate"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnProgress"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnQueryCancel"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnTaskFailed"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnVariableValueChanged"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnWarning"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
              </DTS:LoggingOptions>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="TRUNCATE table dm_enom.domainname_" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{47BB29DF-1E2B-4CCE-ABE7-6E958CDF5F95}"
              DTS:From="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Truncate DomainName_"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Clean Enom_TDP_domain (Exists TDP)" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{1A21ACC0-CA7E-4B69-A282-76C815DB0A6D}"
              DTS:From="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Clean Enom_TDP_domain (Exists TDP)"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{03C47DA5-C568-4607-8FEE-F2F395D66C1F}"
              DTS:From="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Merge DomainName_ to DomainNmae" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{9013AFA1-CC57-448F-A357-1CCEB7AC45AA}"
              DTS:From="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\01 Extract Enom domain, contact, host\01_1_4 Add DNS host to nameservers table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{F5E29143-8BCE-4218-8216-89610B016CFA}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="01_1_4 Add DNS host to nameservers table"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">13,7,OnError,19,OnExecStatusChanged,13,OnInformation,13,OnPostExecute,14,OnPostValidate,12,OnPreExecute,13,OnPreValidate,10,OnProgress,13,OnQueryCancel,12,OnTaskFailed,22,OnVariableValueChanged,9,OnWarning,24,ExecuteSQLExecutingQuery</DTS:Property>
            <DTS:Property
              DTS:EventName="ExecuteSQLExecutingQuery"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnError"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnExecStatusChanged"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnInformation"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPostExecute"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPostValidate"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPreExecute"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPreValidate"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnProgress"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnQueryCancel"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnTaskFailed"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnVariableValueChanged"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnWarning"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
          </DTS:LoggingOptions>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"BEGIN;
WITH dns AS 
( SELECT 'dns1.name-services.com' AS name
UNION ALL 
SELECT 'dns2.name-services.com' AS name
UNION ALL 
 SELECT 'dns3.name-services.com' AS name
UNION ALL 
 SELECT 'dns4.name-services.com' AS name
UNION ALL 
 SELECT 'dns5.name-services.com' AS name)
 
INSERT INTO dm_enom.nameservers (DomainNameID,name)
SELECT domainnameid, dns.name FROM dm_enom.domainname d
CROSS JOIN dns
WHERE NSStatus = 'Yes' AND NOT EXISTS (SELECT 1 FROM dm_enom.nameservers n1 WHERE n1.domainnameid=d.domainnameid)
	AND d.TLD = ('"+ @[$Package::TLD]  +"');
COMMIT;"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
              SQLTask:SqlStatementSource="BEGIN;&#xA;WITH dns AS &#xA;( SELECT 'dns1.name-services.com' AS name&#xA;UNION ALL &#xA;SELECT 'dns2.name-services.com' AS name&#xA;UNION ALL &#xA; SELECT 'dns3.name-services.com' AS name&#xA;UNION ALL &#xA; SELECT 'dns4.name-services.com' AS name&#xA;UNION ALL &#xA; SELECT 'dns5.name-services.com' AS name)&#xA; &#xA;INSERT INTO dm_enom.nameservers (DomainNameID,name)&#xA;SELECT domainnameid, dns.name FROM dm_enom.domainname d&#xA;CROSS JOIN dns&#xA;WHERE NSStatus = 'Yes' AND NOT EXISTS (SELECT 1 FROM dm_enom.nameservers n1 WHERE n1.domainnameid=d.domainnameid)&#xA;&#x9;AND d.TLD = ('co.in');&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{d1a49e1f-e8af-47d6-922d-89e186ad2b05}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="01_2 Extract Enom DomainContact">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">19,7,OnError,19,OnExecStatusChanged,13,OnInformation,27,OnPipelinePostComponentCall,25,OnPipelinePostEndOfRowset,25,OnPipelinePostPrimeOutput,26,OnPipelinePreComponentCall,24,OnPipelinePreEndOfRowset,24,OnPipelinePrePrimeOutput,18,OnPipelineRowsSent,13,OnPostExecute,14,OnPostValidate,12,OnPreExecute,13,OnPreValidate,10,OnProgress,13,OnQueryCancel,12,OnTaskFailed,22,OnVariableValueChanged,9,OnWarning</DTS:Property>
            <DTS:Property
              DTS:EventName="OnError"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnExecStatusChanged"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnInformation"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePostComponentCall"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePostEndOfRowset"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePostPrimeOutput"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePreComponentCall"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePreEndOfRowset"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePrePrimeOutput"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelineRowsSent"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPostExecute"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPostValidate"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPreExecute"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPreValidate"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnProgress"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnQueryCancel"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnTaskFailed"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnVariableValueChanged"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnWarning"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
          </DTS:LoggingOptions>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{9a395ffa-1cd5-4d6b-9d7d-82d8c70ba425}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Extract Enom_DomainContact to DomainContact_"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="[ADO NET Source].[SqlCommand]">"SELECT c.* FROM DomainContact c  (nolock)
 JOIN DomainName d (nolock) ON c.DomainNameID = d.DomainNameID  

 LEFT JOIN [EnomMigrationDB].[dbo]."+ @[$Package::Enom_TDP_domain_table_name] +" td (nolock) ON td.DomainNameID=d.DomainNameID
 WHERE td.DomainNameID IS NULL AND   d.TLD='" + @[$Package::TLD]   +"' 
	AND d.registrationstatus in ('"+ @[$Project::Enom_domain_statuses] +"')
	AND d.RRProcessor IN ('"+ @[$Project::RRProcessor] +"');"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <pipeline
                  autoAdjustBufferSize="true"
                  defaultBufferMaxRows="100000"
                  version="1">
                  <components>
                    <component
                      refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
                      name="ADO NET Source"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement used by the component to extract data."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT c.* FROM DomainContact c  (nolock)
 JOIN DomainName d (nolock) ON c.DomainNameID = d.DomainNameID  

 LEFT JOIN [EnomMigrationDB].[dbo].TDP_domain_test td (nolock) ON td.DomainNameID=d.DomainNameID
 WHERE td.DomainNameID IS NULL AND   d.TLD='co.in' 
	AND d.registrationstatus in ('Registered', 'Expired', 'Extended RGP', 'RGP', 'RGP Deactivated', 'Imminent Delete')
	AND d.RRProcessor IN ('E');</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">30</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                          name="AllowImplicitStringConversion">true</property>
                        <property
                          dataType="System.String"
                          description="The Source database table name."
                          expressionType="Notify"
                          name="TableOrViewName"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specify the mode to retrieve external column information"
                          name="AccessMode"
                          typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Connections[IDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Enom_ADO_NameHost]"
                          connectionManagerRefId="Package.ConnectionManagers[Enom_ADO_NameHost]"
                          description="Managed connection manager"
                          name="IDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output]"
                          name="ADO NET Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[Idx]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[Idx]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[Idx]"
                              name="Idx"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[DomainNameId]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[DomainNameId]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[DomainNameId]"
                              name="DomainNameId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[RegContactId]"
                              dataType="guid"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[RegContactId]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[RegContactId]"
                              name="RegContactId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[AdminContactId]"
                              dataType="guid"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[AdminContactId]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[AdminContactId]"
                              name="AdminContactId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[TechContactId]"
                              dataType="guid"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[TechContactId]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[TechContactId]"
                              name="TechContactId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[BillContactId]"
                              dataType="guid"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[BillContactId]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[BillContactId]"
                              name="BillContactId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[RegRoid]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[RegRoid]"
                              length="100"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[RegRoid]"
                              name="RegRoid"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[AdminRoid]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[AdminRoid]"
                              length="100"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[AdminRoid]"
                              name="AdminRoid"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[TechRoid]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[TechRoid]"
                              length="100"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[TechRoid]"
                              name="TechRoid"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[BillRoid]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[BillRoid]"
                              length="100"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[BillRoid]"
                              name="BillRoid"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[RaaCheck]"
                              dataType="ui1"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[RaaCheck]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[RaaCheck]"
                              name="RaaCheck"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[Idx]"
                              dataType="i4"
                              name="Idx" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[DomainNameId]"
                              dataType="i4"
                              name="DomainNameId" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[RegContactId]"
                              dataType="guid"
                              name="RegContactId" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[AdminContactId]"
                              dataType="guid"
                              name="AdminContactId" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[TechContactId]"
                              dataType="guid"
                              name="TechContactId" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[BillContactId]"
                              dataType="guid"
                              name="BillContactId" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[RegRoid]"
                              dataType="wstr"
                              length="100"
                              name="RegRoid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[AdminRoid]"
                              dataType="wstr"
                              length="100"
                              name="AdminRoid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[TechRoid]"
                              dataType="wstr"
                              length="100"
                              name="TechRoid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[BillRoid]"
                              dataType="wstr"
                              length="100"
                              name="BillRoid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[RaaCheck]"
                              dataType="ui1"
                              name="RaaCheck" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output]"
                          isErrorOut="true"
                          name="ADO NET Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[Idx]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[Idx]"
                              name="Idx" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[DomainNameId]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[DomainNameId]"
                              name="DomainNameId" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[RegContactId]"
                              dataType="guid"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[RegContactId]"
                              name="RegContactId" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[AdminContactId]"
                              dataType="guid"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[AdminContactId]"
                              name="AdminContactId" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[TechContactId]"
                              dataType="guid"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[TechContactId]"
                              name="TechContactId" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[BillContactId]"
                              dataType="guid"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[BillContactId]"
                              name="BillContactId" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[RegRoid]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[RegRoid]"
                              name="RegRoid" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[AdminRoid]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[AdminRoid]"
                              name="AdminRoid" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[TechRoid]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[TechRoid]"
                              name="TechRoid" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[BillRoid]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[BillRoid]"
                              name="BillRoid" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[RaaCheck]"
                              dataType="ui1"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[RaaCheck]"
                              name="RaaCheck" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_"
                      componentClassID="Microsoft.SSISODBCDst"
                      contactInfo="ODBC Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="ODBC Destination"
                      name="ODBC Destination DomainContact_"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The name of the table to be fetched."
                          expressionType="Notify"
                          name="TableName">"dm_enom"."domaincontact_"</property>
                        <property
                          dataType="System.Int32"
                          description="Specify the number of rows fetched per batch."
                          expressionType="Notify"
                          name="BatchSize">100000</property>
                        <property
                          dataType="System.Int32"
                          description="The number of rows inserted under the same transaction."
                          expressionType="Notify"
                          name="TransactionSize">100000</property>
                        <property
                          dataType="System.Int32"
                          description="Determines the chunk size allocation for LOB columns"
                          expressionType="Notify"
                          name="LobChunkSize">32768</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                          expressionType="Notify"
                          name="StatementTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="The code page to use when code page information is unavailable from the data source."
                          expressionType="Notify"
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Int32"
                          description="The method used for inserting data. Possible values are 'Batch' or 'Row by row'."
                          expressionType="Notify"
                          name="InsertMethod">1</property>
                        <property
                          dataType="System.Int32"
                          description="The ODBC C data type for binding numeric data."
                          expressionType="Notify"
                          name="BindNumericAs">0</property>
                        <property
                          dataType="System.Int32"
                          description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                          expressionType="Notify"
                          name="BindCharColumnsAs">0</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Connections[ODBCConnection]"
                          connectionManagerID="Package.ConnectionManagers[tdpdb]"
                          connectionManagerRefId="Package.ConnectionManagers[tdpdb]"
                          description="The ODBC runtime connection used to access the database."
                          name="ODBCConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="ODBC Destination Input"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].Columns[Idx]"
                              cachedDataType="i4"
                              cachedName="Idx"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].ExternalColumns[idx]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[Idx]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].Columns[DomainNameId]"
                              cachedDataType="i4"
                              cachedName="DomainNameId"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].ExternalColumns[domainnameid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[DomainNameId]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].Columns[RegContactId]"
                              cachedDataType="guid"
                              cachedName="RegContactId"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].ExternalColumns[regcontactid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[RegContactId]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].Columns[AdminContactId]"
                              cachedDataType="guid"
                              cachedName="AdminContactId"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].ExternalColumns[admincontactid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[AdminContactId]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].Columns[TechContactId]"
                              cachedDataType="guid"
                              cachedName="TechContactId"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].ExternalColumns[techcontactid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[TechContactId]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].Columns[BillContactId]"
                              cachedDataType="guid"
                              cachedName="BillContactId"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].ExternalColumns[billcontactid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[BillContactId]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].Columns[RegRoid]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="RegRoid"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].ExternalColumns[regroid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[RegRoid]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].Columns[AdminRoid]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="AdminRoid"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].ExternalColumns[adminroid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[AdminRoid]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].Columns[TechRoid]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="TechRoid"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].ExternalColumns[techroid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[TechRoid]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].Columns[BillRoid]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="BillRoid"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].ExternalColumns[billroid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[BillRoid]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].Columns[RaaCheck]"
                              cachedDataType="ui1"
                              cachedName="RaaCheck"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].ExternalColumns[raacheck]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output].Columns[RaaCheck]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].ExternalColumns[idx]"
                              dataType="i4"
                              name="idx" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].ExternalColumns[domainnameid]"
                              dataType="i4"
                              name="domainnameid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].ExternalColumns[regcontactid]"
                              dataType="guid"
                              name="regcontactid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].ExternalColumns[admincontactid]"
                              dataType="guid"
                              name="admincontactid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].ExternalColumns[techcontactid]"
                              dataType="guid"
                              name="techcontactid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].ExternalColumns[billcontactid]"
                              dataType="guid"
                              name="billcontactid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].ExternalColumns[regroid]"
                              dataType="wstr"
                              length="100"
                              name="regroid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].ExternalColumns[adminroid]"
                              dataType="wstr"
                              length="100"
                              name="adminroid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].ExternalColumns[techroid]"
                              dataType="wstr"
                              length="100"
                              name="techroid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].ExternalColumns[billroid]"
                              dataType="wstr"
                              length="100"
                              name="billroid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input].ExternalColumns[raacheck]"
                              dataType="i2"
                              name="raacheck" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Outputs[ODBC Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="ODBC Destination Error Output"
                          synchronousInputId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_.Paths[ADO NET Source Output]"
                      endId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_.Inputs[ODBC Destination Input]"
                      name="ADO NET Source Output"
                      startId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source.Outputs[ADO NET Source Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Merge DomainContact_ to DomainContact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{25844460-4b9d-4cdf-a657-9fc3d0e3a9b8}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Merge DomainContact_ to DomainContact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
DELETE  FROM dm_enom.domaincontact dc 
USING dm_enom.domainname dn
WHERE dn.domainnameid=dc.domainnameid
  AND dc.itdp_domain_id IS  NULL AND tld='"+ @[$Package::TLD] +"';

INSERT INTO dm_enom.domaincontact ( idx, domainnameid, regcontactid, admincontactid, techcontactid, billcontactid, regroid, adminroid, techroid, billroid, raacheck)
SELECT  d.idx, d.domainnameid, d.regcontactid, d.admincontactid, d.techcontactid, d.billcontactid, d.regroid, d.adminroid, d.techroid, d.billroid, d.raacheck 
FROM dm_enom.domaincontact_ d
WHERE NOT EXISTS (
    SELECT 1 FROM dm_enom.domaincontact dc WHERE dc.Idx = d.Idx
);
ANALYSE dm_enom.domaincontact;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;DELETE  FROM dm_enom.domaincontact dc &#xA;USING dm_enom.domainname dn&#xA;WHERE dn.domainnameid=dc.domainnameid&#xA;  AND dc.itdp_domain_id IS  NULL AND tld='co.in';&#xA;&#xA;INSERT INTO dm_enom.domaincontact ( idx, domainnameid, regcontactid, admincontactid, techcontactid, billcontactid, regroid, adminroid, techroid, billroid, raacheck)&#xA;SELECT  d.idx, d.domainnameid, d.regcontactid, d.admincontactid, d.techcontactid, d.billcontactid, d.regroid, d.adminroid, d.techroid, d.billroid, d.raacheck &#xA;FROM dm_enom.domaincontact_ d&#xA;WHERE NOT EXISTS (&#xA;    SELECT 1 FROM dm_enom.domaincontact dc WHERE dc.Idx = d.Idx&#xA;);&#xA;ANALYSE dm_enom.domaincontact;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Truncate DomainContact_"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{d1136b2b-9dd3-48f9-b91e-2df2f3bb4d83}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Truncate DomainContact_"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="TRUNCATE TABLE dm_enom.DomainContact_" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{5325310b-3b99-42b8-9641-d73afeb46847}"
              DTS:From="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Merge DomainContact_ to DomainContact" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{aefcdcf7-c2d5-48ab-a213-adf3f58abeba}"
              DTS:From="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Truncate DomainContact_"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{ef0c9e4b-c3e8-4c07-a4a2-266e56e62354}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="01_3  Extract  Enom Domain NameServers">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">19,7,OnError,19,OnExecStatusChanged,13,OnInformation,27,OnPipelinePostComponentCall,25,OnPipelinePostEndOfRowset,25,OnPipelinePostPrimeOutput,26,OnPipelinePreComponentCall,24,OnPipelinePreEndOfRowset,24,OnPipelinePrePrimeOutput,18,OnPipelineRowsSent,13,OnPostExecute,14,OnPostValidate,12,OnPreExecute,13,OnPreValidate,10,OnProgress,13,OnQueryCancel,12,OnTaskFailed,22,OnVariableValueChanged,9,OnWarning</DTS:Property>
            <DTS:Property
              DTS:EventName="OnError"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnExecStatusChanged"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnInformation"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePostComponentCall"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePostEndOfRowset"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePostPrimeOutput"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePreComponentCall"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePreEndOfRowset"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelinePrePrimeOutput"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPipelineRowsSent"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPostExecute"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPostValidate"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPreExecute"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnPreValidate"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnProgress"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnQueryCancel"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnTaskFailed"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnVariableValueChanged"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnWarning"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
          </DTS:LoggingOptions>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Delete duplicate"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{1D17E916-9F4B-4197-9DBC-25B4D36CFFFA}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Delete duplicate"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
DELETE FROM  dm_enom.nameservers_  ns_ 
USING (SELECT ROW_NUMBER() OVER( PARTITION BY domainnameid,name) AS rn,domainnameid,name,idx FROM dm_enom.nameservers_  ) r
JOIN dm_enom.domainname dn ON dn.domainnameid=r.domainnameid
WHERE ns_.idx=r.idx AND r.rn&gt;1 AND tld='"+ @[$Package::TLD] +"' ;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;DELETE FROM  dm_enom.nameservers_  ns_ &#xA;USING (SELECT ROW_NUMBER() OVER( PARTITION BY domainnameid,name) AS rn,domainnameid,name,idx FROM dm_enom.nameservers_  ) r&#xA;JOIN dm_enom.domainname dn ON dn.domainnameid=r.domainnameid&#xA;WHERE ns_.idx=r.idx AND r.rn&gt;1 AND tld='co.in' ;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{de4fc747-37c9-4dad-be60-20c332e51dd5}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Extract NameServers table to NameServers_"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="[ADO NET Source NameServers].[SqlCommand]">"SELECT h.* FROM dbo.nameservers h (nolock)
 JOIN DomainName d (nolock) on d.DomainNameID= h.DomainNameID 
 
LEFT JOIN [EnomMigrationDB].[dbo]."+ @[$Package::Enom_TDP_domain_table_name] +" td (nolock) ON td.DomainNameID=d.DomainNameID
 WHERE td.DomainNameID IS NULL AND  d.TLD='" +  @[$Package::TLD] +"' 
 AND d.registrationstatus in ('"+ @[$Project::Enom_domain_statuses] +"')
 AND d.RRProcessor IN ('"+ @[$Project::RRProcessor] +"');"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <pipeline
                  autoAdjustBufferSize="true"
                  defaultBufferMaxRows="100000"
                  version="1">
                  <components>
                    <component
                      refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
                      name="ADO NET Source NameServers"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement used by the component to extract data."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT h.* FROM dbo.nameservers h (nolock)
 JOIN DomainName d (nolock) on d.DomainNameID= h.DomainNameID 
 
LEFT JOIN [EnomMigrationDB].[dbo].TDP_domain_test td (nolock) ON td.DomainNameID=d.DomainNameID
 WHERE td.DomainNameID IS NULL AND  d.TLD='co.in' 
 AND d.registrationstatus in ('Registered', 'Expired', 'Extended RGP', 'RGP', 'RGP Deactivated', 'Imminent Delete')
 AND d.RRProcessor IN ('E');</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">30</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                          name="AllowImplicitStringConversion">true</property>
                        <property
                          dataType="System.String"
                          description="The Source database table name."
                          expressionType="Notify"
                          name="TableOrViewName"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specify the mode to retrieve external column information"
                          name="AccessMode"
                          typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Connections[IDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Enom_ADO_NameHost]"
                          connectionManagerRefId="Package.ConnectionManagers[Enom_ADO_NameHost]"
                          description="Managed connection manager"
                          name="IDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output]"
                          name="ADO NET Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].Columns[Idx]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].ExternalColumns[Idx]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].Columns[Idx]"
                              name="Idx"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].Columns[DomainNameID]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].ExternalColumns[DomainNameID]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].Columns[DomainNameID]"
                              name="DomainNameID"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].Columns[Name]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].ExternalColumns[Name]"
                              length="255"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].Columns[Name]"
                              name="Name"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].Columns[IPAddress]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].ExternalColumns[IPAddress]"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].Columns[IPAddress]"
                              name="IPAddress"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].Columns[InsertedDate]"
                              dataType="dbTimeStamp"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].ExternalColumns[InsertedDate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].Columns[InsertedDate]"
                              name="InsertedDate"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].ExternalColumns[Idx]"
                              dataType="i4"
                              name="Idx" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].ExternalColumns[DomainNameID]"
                              dataType="i4"
                              name="DomainNameID" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].ExternalColumns[Name]"
                              dataType="wstr"
                              length="255"
                              name="Name" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].ExternalColumns[IPAddress]"
                              dataType="wstr"
                              length="20"
                              name="IPAddress" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].ExternalColumns[InsertedDate]"
                              dataType="dbTimeStamp"
                              name="InsertedDate" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Error Output]"
                          isErrorOut="true"
                          name="ADO NET Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Error Output].Columns[Idx]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Error Output].Columns[Idx]"
                              name="Idx" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Error Output].Columns[DomainNameID]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Error Output].Columns[DomainNameID]"
                              name="DomainNameID" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Error Output].Columns[Name]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Error Output].Columns[Name]"
                              name="Name" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Error Output].Columns[IPAddress]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Error Output].Columns[IPAddress]"
                              name="IPAddress" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Error Output].Columns[InsertedDate]"
                              dataType="dbTimeStamp"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Error Output].Columns[InsertedDate]"
                              name="InsertedDate" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_"
                      componentClassID="Microsoft.SSISODBCDst"
                      contactInfo="ODBC Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="ODBC Destination"
                      name="ODBC Destination Nameservers_"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The name of the table to be fetched."
                          expressionType="Notify"
                          name="TableName">"dm_enom"."nameservers_"</property>
                        <property
                          dataType="System.Int32"
                          description="Specify the number of rows fetched per batch."
                          expressionType="Notify"
                          name="BatchSize">100000</property>
                        <property
                          dataType="System.Int32"
                          description="The number of rows inserted under the same transaction."
                          expressionType="Notify"
                          name="TransactionSize">100000</property>
                        <property
                          dataType="System.Int32"
                          description="Determines the chunk size allocation for LOB columns"
                          expressionType="Notify"
                          name="LobChunkSize">32768</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                          expressionType="Notify"
                          name="StatementTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="The code page to use when code page information is unavailable from the data source."
                          expressionType="Notify"
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Int32"
                          description="The method used for inserting data. Possible values are 'Batch' or 'Row by row'."
                          expressionType="Notify"
                          name="InsertMethod">1</property>
                        <property
                          dataType="System.Int32"
                          description="The ODBC C data type for binding numeric data."
                          expressionType="Notify"
                          name="BindNumericAs">0</property>
                        <property
                          dataType="System.Int32"
                          description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                          expressionType="Notify"
                          name="BindCharColumnsAs">0</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Connections[ODBCConnection]"
                          connectionManagerID="Package.ConnectionManagers[tdpdb]"
                          connectionManagerRefId="Package.ConnectionManagers[tdpdb]"
                          description="The ODBC runtime connection used to access the database."
                          name="ODBCConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Inputs[ODBC Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="ODBC Destination Input"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Inputs[ODBC Destination Input].Columns[DomainNameID]"
                              cachedDataType="i4"
                              cachedName="DomainNameID"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Inputs[ODBC Destination Input].ExternalColumns[domainnameid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].Columns[DomainNameID]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Inputs[ODBC Destination Input].Columns[Idx]"
                              cachedDataType="i4"
                              cachedName="Idx"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Inputs[ODBC Destination Input].ExternalColumns[idx]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].Columns[Idx]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Inputs[ODBC Destination Input].Columns[Name]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Name"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Inputs[ODBC Destination Input].ExternalColumns[name]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].Columns[Name]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Inputs[ODBC Destination Input].Columns[IPAddress]"
                              cachedDataType="wstr"
                              cachedLength="20"
                              cachedName="IPAddress"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Inputs[ODBC Destination Input].ExternalColumns[ipaddress]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].Columns[IPAddress]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Inputs[ODBC Destination Input].Columns[InsertedDate]"
                              cachedDataType="dbTimeStamp"
                              cachedName="InsertedDate"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Inputs[ODBC Destination Input].ExternalColumns[inserteddate]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output].Columns[InsertedDate]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Inputs[ODBC Destination Input].ExternalColumns[domainnameid]"
                              dataType="i4"
                              name="domainnameid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Inputs[ODBC Destination Input].ExternalColumns[idx]"
                              dataType="i4"
                              name="idx" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Inputs[ODBC Destination Input].ExternalColumns[name]"
                              dataType="wstr"
                              length="255"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Inputs[ODBC Destination Input].ExternalColumns[ipaddress]"
                              dataType="wstr"
                              length="20"
                              name="ipaddress" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Inputs[ODBC Destination Input].ExternalColumns[inserteddate]"
                              dataType="dbTimeStamp2"
                              name="inserteddate"
                              scale="6" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Outputs[ODBC Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="ODBC Destination Error Output"
                          synchronousInputId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Inputs[ODBC Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_.Paths[ADO NET Source Output]"
                      endId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_.Inputs[ODBC Destination Input]"
                      name="ADO NET Source Output"
                      startId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers.Outputs[ADO NET Source Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Merge NameServers_ to NameServers"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{7774c54f-2a07-43ee-98d2-58ab38f5e33e}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Merge NameServers_ to NameServers"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
DELETE  FROM dm_enom.nameservers ht 
WHERE  ht.itdp_host_id IS  NULL AND TLD = '"+ @[$Package::TLD]+"' ;


INSERT INTO dm_enom.nameservers ( idx, DomainNameID, Name, IPAddress, InsertedDate,TLD)
SELECT  h.Idx, h.DomainNameID, lower(h.Name), h.IPAddress, h.InsertedDate,'"+ @[$Package::TLD]+"' 
FROM dm_enom.nameservers_ h
WHERE NOT EXISTS (
    SELECT 1 FROM dm_enom.nameservers ht WHERE ht.Idx = h.Idx
);
ANALYSE dm_enom.nameservers ;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;DELETE  FROM dm_enom.nameservers ht &#xA;WHERE  ht.itdp_host_id IS  NULL AND TLD = 'co.in' ;&#xA;&#xA;&#xA;INSERT INTO dm_enom.nameservers ( idx, DomainNameID, Name, IPAddress, InsertedDate,TLD)&#xA;SELECT  h.Idx, h.DomainNameID, lower(h.Name), h.IPAddress, h.InsertedDate,'co.in' &#xA;FROM dm_enom.nameservers_ h&#xA;WHERE NOT EXISTS (&#xA;    SELECT 1 FROM dm_enom.nameservers ht WHERE ht.Idx = h.Idx&#xA;);&#xA;ANALYSE dm_enom.nameservers ;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Truncate NameServers_"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{978414ba-6e05-4bdd-a9fd-14a196aecf4b}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Truncate NameServers_"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="TRUNCATE table dm_enom.nameservers_" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{71a11453-8e0e-45d4-838e-70579b508b19}"
              DTS:From="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Truncate NameServers_"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{9406EB46-E361-4D3E-8B8F-92261C63AAF4}"
              DTS:From="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Delete duplicate" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{B04FDB80-3833-4006-9FE6-4AE9966C31F2}"
              DTS:From="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Delete duplicate"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Merge NameServers_ to NameServers" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Extract contact with domaincontact in nazca"
          DTS:Disabled="True"
          DTS:DTSID="{a2d5d59d-7609-4868-bcd4-2780128bb3e9}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="01_4 Extract Private Contact with domaincontact in nazca">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[$Package::private_contact] == True ? False:True</DTS:PropertyExpression>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\Create or truncate nazca_domaincontact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{5c42a5f9-7612-4b73-bb58-42ec0be520cd}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create or truncate nazca_domaincontact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="5">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{56322024-C1E9-4853-834F-3B8041DA787D}"
                  SQLTask:SqlStatementSource="CREATE TABLE  IF NOT EXISTS public.domaincontact ( &#xA; idx int4 NOT NULL,&#xA; domainnameid int4 NOT NULL,&#xA; regcontactid uuid NOT NULL,&#xA; admincontactid uuid NOT NULL,&#xA; techcontactid uuid NOT NULL,&#xA; billcontactid uuid NOT NULL &#xA;);&#xA;&#xA;TRUNCATE TABLE public.domaincontact;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{47bafc6b-1527-4572-8b2b-36395b82c45f}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="extract domaincontact from MSSQL to nazca"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="[ADO NET Source DomainContact].[SqlCommand]">"SELECT idx, d.domainnameid, regcontactid, admincontactid, techcontactid, billcontactid
FROM  DomainContact d (nolock)
JOIN DomainName dn (nolock) on dn.DomainNameId=d.DomainNameId
 
LEFT JOIN [EnomMigrationDB].[dbo]."+ @[$Package::Enom_TDP_domain_table_name] +" td (nolock) ON td.DomainNameID=d.DomainNameID
WHERE td.DomainNameID IS NULL AND   dn.TLD='" + @[$Package::TLD]+"' 
	AND dn.registrationstatus in ('"+ @[$Project::Enom_domain_statuses] +"')
	AND dn.RRProcessor IN ('"+ @[$Project::RRProcessor] +"');"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <pipeline
                  autoAdjustBufferSize="true"
                  BLOBTempStoragePath="E:\SSIS_TEMP"
                  bufferTempStoragePath="E:\SSIS_TEMP"
                  defaultBufferMaxRows="500000"
                  version="1">
                  <components>
                    <component
                      refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
                      name="ADO NET Source DomainContact"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement used by the component to extract data."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT idx, d.domainnameid, regcontactid, admincontactid, techcontactid, billcontactid
FROM  DomainContact d (nolock)
JOIN DomainName dn (nolock) on dn.DomainNameId=d.DomainNameId
 
LEFT JOIN [EnomMigrationDB].[dbo].TDP_domain_test td (nolock) ON td.DomainNameID=d.DomainNameID
WHERE td.DomainNameID IS NULL AND   dn.TLD='co.in' 
	AND dn.registrationstatus in ('Registered', 'Expired', 'Extended RGP', 'RGP', 'RGP Deactivated', 'Imminent Delete')
	AND dn.RRProcessor IN ('E');</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">30</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                          name="AllowImplicitStringConversion">true</property>
                        <property
                          dataType="System.String"
                          description="The Source database table name."
                          expressionType="Notify"
                          name="TableOrViewName"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specify the mode to retrieve external column information"
                          name="AccessMode"
                          typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Connections[IDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[Enom_ADO_NameHost]"
                          connectionManagerRefId="Package.ConnectionManagers[Enom_ADO_NameHost]"
                          description="Managed connection manager"
                          name="IDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output]"
                          name="ADO NET Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].Columns[idx]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].ExternalColumns[idx]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].Columns[idx]"
                              name="idx"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].Columns[domainnameid]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].ExternalColumns[domainnameid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].Columns[domainnameid]"
                              name="domainnameid"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].Columns[regcontactid]"
                              dataType="guid"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].ExternalColumns[regcontactid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].Columns[regcontactid]"
                              name="regcontactid"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].Columns[admincontactid]"
                              dataType="guid"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].ExternalColumns[admincontactid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].Columns[admincontactid]"
                              name="admincontactid"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].Columns[techcontactid]"
                              dataType="guid"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].ExternalColumns[techcontactid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].Columns[techcontactid]"
                              name="techcontactid"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].Columns[billcontactid]"
                              dataType="guid"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].ExternalColumns[billcontactid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].Columns[billcontactid]"
                              name="billcontactid"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].ExternalColumns[idx]"
                              dataType="i4"
                              name="idx" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].ExternalColumns[domainnameid]"
                              dataType="i4"
                              name="domainnameid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].ExternalColumns[regcontactid]"
                              dataType="guid"
                              name="regcontactid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].ExternalColumns[admincontactid]"
                              dataType="guid"
                              name="admincontactid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].ExternalColumns[techcontactid]"
                              dataType="guid"
                              name="techcontactid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].ExternalColumns[billcontactid]"
                              dataType="guid"
                              name="billcontactid" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Error Output]"
                          isErrorOut="true"
                          name="ADO NET Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Error Output].Columns[idx]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Error Output].Columns[idx]"
                              name="idx" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Error Output].Columns[domainnameid]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Error Output].Columns[domainnameid]"
                              name="domainnameid" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Error Output].Columns[regcontactid]"
                              dataType="guid"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Error Output].Columns[regcontactid]"
                              name="regcontactid" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Error Output].Columns[admincontactid]"
                              dataType="guid"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Error Output].Columns[admincontactid]"
                              name="admincontactid" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Error Output].Columns[techcontactid]"
                              dataType="guid"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Error Output].Columns[techcontactid]"
                              name="techcontactid" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Error Output].Columns[billcontactid]"
                              dataType="guid"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Error Output].Columns[billcontactid]"
                              name="billcontactid" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact"
                      componentClassID="Microsoft.SSISODBCDst"
                      contactInfo="ODBC Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="ODBC Destination"
                      name="ODBC Destination Nazca DomainContact"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The name of the table to be fetched."
                          expressionType="Notify"
                          name="TableName">"public"."domaincontact"</property>
                        <property
                          dataType="System.Int32"
                          description="Specify the number of rows fetched per batch."
                          expressionType="Notify"
                          name="BatchSize">500000</property>
                        <property
                          dataType="System.Int32"
                          description="The number of rows inserted under the same transaction."
                          expressionType="Notify"
                          name="TransactionSize">500000</property>
                        <property
                          dataType="System.Int32"
                          description="Determines the chunk size allocation for LOB columns"
                          expressionType="Notify"
                          name="LobChunkSize">32768</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                          expressionType="Notify"
                          name="StatementTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="The code page to use when code page information is unavailable from the data source."
                          expressionType="Notify"
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Int32"
                          description="The method used for inserting data. Possible values are 'Batch' or 'Row by row'."
                          expressionType="Notify"
                          name="InsertMethod">1</property>
                        <property
                          dataType="System.Int32"
                          description="The ODBC C data type for binding numeric data."
                          expressionType="Notify"
                          name="BindNumericAs">0</property>
                        <property
                          dataType="System.Int32"
                          description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                          expressionType="Notify"
                          name="BindCharColumnsAs">0</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Connections[ODBCConnection]"
                          connectionManagerID="Package.ConnectionManagers[Enom_nazca_identity_01]"
                          connectionManagerRefId="Package.ConnectionManagers[Enom_nazca_identity_01]"
                          description="The ODBC runtime connection used to access the database."
                          name="ODBCConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Inputs[ODBC Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="ODBC Destination Input"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Inputs[ODBC Destination Input].Columns[idx]"
                              cachedDataType="i4"
                              cachedName="idx"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Inputs[ODBC Destination Input].ExternalColumns[idx]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].Columns[idx]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Inputs[ODBC Destination Input].Columns[domainnameid]"
                              cachedDataType="i4"
                              cachedName="domainnameid"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Inputs[ODBC Destination Input].ExternalColumns[domainnameid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].Columns[domainnameid]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Inputs[ODBC Destination Input].Columns[regcontactid]"
                              cachedDataType="guid"
                              cachedName="regcontactid"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Inputs[ODBC Destination Input].ExternalColumns[regcontactid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].Columns[regcontactid]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Inputs[ODBC Destination Input].Columns[admincontactid]"
                              cachedDataType="guid"
                              cachedName="admincontactid"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Inputs[ODBC Destination Input].ExternalColumns[admincontactid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].Columns[admincontactid]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Inputs[ODBC Destination Input].Columns[techcontactid]"
                              cachedDataType="guid"
                              cachedName="techcontactid"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Inputs[ODBC Destination Input].ExternalColumns[techcontactid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].Columns[techcontactid]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Inputs[ODBC Destination Input].Columns[billcontactid]"
                              cachedDataType="guid"
                              cachedName="billcontactid"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Inputs[ODBC Destination Input].ExternalColumns[billcontactid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output].Columns[billcontactid]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Inputs[ODBC Destination Input].ExternalColumns[idx]"
                              dataType="i4"
                              name="idx" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Inputs[ODBC Destination Input].ExternalColumns[domainnameid]"
                              dataType="i4"
                              name="domainnameid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Inputs[ODBC Destination Input].ExternalColumns[regcontactid]"
                              dataType="guid"
                              name="regcontactid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Inputs[ODBC Destination Input].ExternalColumns[admincontactid]"
                              dataType="guid"
                              name="admincontactid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Inputs[ODBC Destination Input].ExternalColumns[techcontactid]"
                              dataType="guid"
                              name="techcontactid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Inputs[ODBC Destination Input].ExternalColumns[billcontactid]"
                              dataType="guid"
                              name="billcontactid" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Outputs[ODBC Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="ODBC Destination Error Output"
                          synchronousInputId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Inputs[ODBC Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca.Paths[ADO NET Source Output]"
                      endId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact.Inputs[ODBC Destination Input]"
                      name="ADO NET Source Output"
                      startId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact.Outputs[ADO NET Source Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:DelayValidation="True"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{e839aea6-2749-4773-b9b2-cf2833eeab7e}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:MaxErrorCount="10"
              DTS:ObjectName="extract nazca_contact to dm_enom_contact_private"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <pipeline
                  autoAdjustBufferSize="true"
                  BLOBTempStoragePath="E:\SSIS_TEMP"
                  bufferTempStoragePath="E:\SSIS_TEMP"
                  defaultBufferMaxRows="500000"
                  version="1">
                  <components>
                    <component
                      refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private"
                      componentClassID="Microsoft.SSISODBCDst"
                      contactInfo="ODBC Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="ODBC Destination"
                      name="ODBC Destination Contact_private"
                      usesDispositions="true"
                      validateExternalMetadata="False"
                      version="1">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The name of the table to be fetched."
                          expressionType="Notify"
                          name="TableName">"dm_enom"."contact_private"</property>
                        <property
                          dataType="System.Int32"
                          description="Specify the number of rows fetched per batch."
                          expressionType="Notify"
                          name="BatchSize">500000</property>
                        <property
                          dataType="System.Int32"
                          description="The number of rows inserted under the same transaction."
                          expressionType="Notify"
                          name="TransactionSize">500000</property>
                        <property
                          dataType="System.Int32"
                          description="Determines the chunk size allocation for LOB columns"
                          expressionType="Notify"
                          name="LobChunkSize">32768</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                          expressionType="Notify"
                          name="StatementTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="The code page to use when code page information is unavailable from the data source."
                          expressionType="Notify"
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Int32"
                          description="The method used for inserting data. Possible values are 'Batch' or 'Row by row'."
                          expressionType="Notify"
                          name="InsertMethod">1</property>
                        <property
                          dataType="System.Int32"
                          description="The ODBC C data type for binding numeric data."
                          expressionType="Notify"
                          name="BindNumericAs">0</property>
                        <property
                          dataType="System.Int32"
                          description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                          expressionType="Notify"
                          name="BindCharColumnsAs">0</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Connections[ODBCConnection]"
                          connectionManagerID="Package.ConnectionManagers[tdpdb]"
                          connectionManagerRefId="Package.ConnectionManagers[tdpdb]"
                          description="The ODBC runtime connection used to access the database."
                          name="ODBCConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="ODBC Destination Input"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].Columns[id]"
                              cachedDataType="guid"
                              cachedName="id"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[id]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[id]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].Columns[contact_type]"
                              cachedDataType="wstr"
                              cachedLength="20"
                              cachedName="contact_type"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[contact_type]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[contact_type]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].Columns[first_name]"
                              cachedDataType="wstr"
                              cachedLength="200"
                              cachedName="first_name"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[first_name]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[first_name]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].Columns[last_name]"
                              cachedDataType="wstr"
                              cachedLength="200"
                              cachedName="last_name"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[last_name]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[last_name]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].Columns[email_address]"
                              cachedDataType="wstr"
                              cachedLength="320"
                              cachedName="email_address"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[email_address]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[email_address]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].Columns[organization]"
                              cachedDataType="wstr"
                              cachedLength="300"
                              cachedName="organization"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[organization]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[organization]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].Columns[address1]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="address1"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[address1]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[address1]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].Columns[address2]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="address2"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[address2]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[address2]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].Columns[address3]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="address3"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[address3]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[address3]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].Columns[city]"
                              cachedDataType="wstr"
                              cachedLength="120"
                              cachedName="city"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[city]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[city]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].Columns[state]"
                              cachedDataType="wstr"
                              cachedLength="120"
                              cachedName="state"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[state]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[state]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].Columns[postal_code]"
                              cachedDataType="wstr"
                              cachedLength="30"
                              cachedName="postal_code"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[postal_code]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[postal_code]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].Columns[country_code]"
                              cachedDataType="wstr"
                              cachedLength="2"
                              cachedName="country_code"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[country_code]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[country_code]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].Columns[phone_number]"
                              cachedDataType="wstr"
                              cachedLength="31"
                              cachedName="phone_number"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[phone_number]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[phone_number]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].Columns[phone_extension]"
                              cachedDataType="wstr"
                              cachedLength="15"
                              cachedName="phone_extension"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[phone_extension]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[phone_extension]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].Columns[fax_number]"
                              cachedDataType="wstr"
                              cachedLength="31"
                              cachedName="fax_number"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[fax_number]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[fax_number]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].Columns[reseller_id]"
                              cachedDataType="i4"
                              cachedName="reseller_id"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[reseller_id]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[reseller_id]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].Columns[domainnameid]"
                              cachedDataType="i4"
                              cachedName="domainnameid"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[domainnameid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[domainnameid]" />
                            <inputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].Columns[c_type_int]"
                              cachedDataType="i4"
                              cachedName="c_type_int"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[c_type_int]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[c_type_int]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[id]"
                              dataType="guid"
                              name="id" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[contact_type]"
                              dataType="wstr"
                              length="20"
                              name="contact_type" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[first_name]"
                              dataType="wstr"
                              length="200"
                              name="first_name" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[last_name]"
                              dataType="wstr"
                              length="200"
                              name="last_name" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[email_address]"
                              dataType="wstr"
                              length="320"
                              name="email_address" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[organization]"
                              dataType="wstr"
                              length="300"
                              name="organization" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[address1]"
                              dataType="wstr"
                              length="255"
                              name="address1" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[address2]"
                              dataType="wstr"
                              length="255"
                              name="address2" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[address3]"
                              dataType="wstr"
                              length="255"
                              name="address3" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[city]"
                              dataType="wstr"
                              length="120"
                              name="city" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[state]"
                              dataType="wstr"
                              length="120"
                              name="state" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[postal_code]"
                              dataType="wstr"
                              length="30"
                              name="postal_code" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[country_code]"
                              dataType="wstr"
                              length="2"
                              name="country_code" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[phone_number]"
                              dataType="wstr"
                              length="31"
                              name="phone_number" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[phone_extension]"
                              dataType="wstr"
                              length="15"
                              name="phone_extension" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[fax_number]"
                              dataType="wstr"
                              length="31"
                              name="fax_number" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[reseller_id]"
                              dataType="i4"
                              name="reseller_id" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                              dataType="wstr"
                              length="15"
                              name="tld" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[c_type]"
                              dataType="wstr"
                              length="20"
                              name="c_type" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[domainnameid]"
                              dataType="i4"
                              name="domainnameid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input].ExternalColumns[c_type_int]"
                              dataType="i4"
                              name="c_type_int" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Outputs[ODBC Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="ODBC Destination Error Output"
                          synchronousInputId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact"
                      componentClassID="Microsoft.SSISODBCSrc"
                      contactInfo="ODBC Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="ODBC Source"
                      name="ODBC Source Contact"
                      usesDispositions="true"
                      validateExternalMetadata="False"
                      version="1">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The name of the table to be fetched."
                          expressionType="Notify"
                          name="TableName">"public"."tld_contact"</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT domainnameid, c.*,1  as c_type_int FROM  public.domaincontact dc
JOIN nazca_identity.contact c ON c.id =dc.regcontactid 
union all
SELECT  domainnameid, c.*,2 as c_type_int FROM  public.domaincontact dc
JOIN nazca_identity.contact c ON c.id =dc.admincontactid 
union all
SELECT  domainnameid, c.*,3  as c_type_int FROM  public.domaincontact dc
JOIN nazca_identity.contact c ON c.id =dc.techcontactid 
union all
SELECT  domainnameid, c.*,4 as c_type_int FROM  public.domaincontact dc
JOIN nazca_identity.contact c ON c.id =dc.billcontactid ;</property>
                        <property
                          dataType="System.Int32"
                          description="Specify the number of rows fetched per batch."
                          expressionType="Notify"
                          name="BatchSize">500000</property>
                        <property
                          dataType="System.Int32"
                          description="Determines the chunk size allocation for LOB columns"
                          expressionType="Notify"
                          name="LobChunkSize">32768</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines how the component exposes CHAR columns. If False, CHAR columns are exposed as (multi-)byte strings (DT_STR), if True, CHAR columns are exposed as wide strings (DT_WSTR)"
                          expressionType="Notify"
                          name="ExposeCharColumnsAsUnicode">false</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                          expressionType="Notify"
                          name="StatementTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="The code page to use when code page information is unavailable from the data source."
                          expressionType="Notify"
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Int32"
                          description="The method used for fetching data."
                          expressionType="Notify"
                          name="FetchMethod">1</property>
                        <property
                          dataType="System.Int32"
                          description="The ODBC C data type for binding numeric data."
                          expressionType="Notify"
                          name="BindNumericAs">0</property>
                        <property
                          dataType="System.Int32"
                          description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                          expressionType="Notify"
                          name="BindCharColumnsAs">0</property>
                        <property
                          dataType="System.Int32"
                          description="The mode used to access the database."
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="AccessMode">1</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Connections[ODBCConnection]"
                          connectionManagerID="Package.ConnectionManagers[Enom_nazca_identity]"
                          connectionManagerRefId="Package.ConnectionManagers[Enom_nazca_identity]"
                          description="The ODBC runtime connection used to access the database."
                          name="ODBCConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output]"
                          errorRowDisposition="FailComponent"
                          name="ODBC Source Output"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[id]"
                              dataType="guid"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[id]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[id]"
                              name="id" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[contact_type]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[contact_type]"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[contact_type]"
                              name="contact_type" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[first_name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[first_name]"
                              length="200"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[first_name]"
                              name="first_name" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[last_name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[last_name]"
                              length="200"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[last_name]"
                              name="last_name" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[email_address]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[email_address]"
                              length="320"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[email_address]"
                              name="email_address" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[organization]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[organization]"
                              length="300"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[organization]"
                              name="organization" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[address1]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[address1]"
                              length="255"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[address1]"
                              name="address1" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[address2]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[address2]"
                              length="255"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[address2]"
                              name="address2" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[address3]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[address3]"
                              length="255"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[address3]"
                              name="address3" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[city]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[city]"
                              length="120"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[city]"
                              name="city" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[state]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[state]"
                              length="120"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[state]"
                              name="state" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[postal_code]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[postal_code]"
                              length="30"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[postal_code]"
                              name="postal_code" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[country_code]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[country_code]"
                              length="2"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[country_code]"
                              name="country_code" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[phone_number]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[phone_number]"
                              length="31"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[phone_number]"
                              name="phone_number" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[phone_extension]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[phone_extension]"
                              length="15"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[phone_extension]"
                              name="phone_extension" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[fax_number]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[fax_number]"
                              length="31"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[fax_number]"
                              name="fax_number" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[reseller_id]"
                              dataType="i4"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[reseller_id]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[reseller_id]"
                              name="reseller_id" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[domainnameid]"
                              dataType="i4"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[domainnameid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[domainnameid]"
                              name="domainnameid" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[c_type_int]"
                              dataType="i4"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[c_type_int]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].Columns[c_type_int]"
                              name="c_type_int" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[id]"
                              dataType="guid"
                              name="id" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[contact_type]"
                              dataType="wstr"
                              length="20"
                              name="contact_type" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[first_name]"
                              dataType="wstr"
                              length="200"
                              name="first_name" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[last_name]"
                              dataType="wstr"
                              length="200"
                              name="last_name" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[email_address]"
                              dataType="wstr"
                              length="320"
                              name="email_address" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[organization]"
                              dataType="wstr"
                              length="300"
                              name="organization" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[address1]"
                              dataType="wstr"
                              length="255"
                              name="address1" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[address2]"
                              dataType="wstr"
                              length="255"
                              name="address2" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[address3]"
                              dataType="wstr"
                              length="255"
                              name="address3" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[city]"
                              dataType="wstr"
                              length="120"
                              name="city" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[state]"
                              dataType="wstr"
                              length="120"
                              name="state" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[postal_code]"
                              dataType="wstr"
                              length="30"
                              name="postal_code" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[country_code]"
                              dataType="wstr"
                              length="2"
                              name="country_code" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[phone_number]"
                              dataType="wstr"
                              length="31"
                              name="phone_number" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[phone_extension]"
                              dataType="wstr"
                              length="15"
                              name="phone_extension" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[fax_number]"
                              dataType="wstr"
                              length="31"
                              name="fax_number" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[reseller_id]"
                              dataType="i4"
                              name="reseller_id" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[creation_date]"
                              dataType="dbTimeStamp2"
                              name="creation_date"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[modification_date]"
                              dataType="dbTimeStamp2"
                              name="modification_date"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[reported_active_date]"
                              dataType="dbTimeStamp2"
                              name="reported_active_date"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[domainnameid]"
                              dataType="i4"
                              name="domainnameid" />
                            <externalMetadataColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[c_type_int]"
                              dataType="i4"
                              name="c_type_int" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output]"
                          isErrorOut="true"
                          name="ODBC Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[id]"
                              dataType="guid"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[id]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[id]"
                              name="id" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[contact_type]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[contact_type]"
                              length="20"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[contact_type]"
                              name="contact_type" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[first_name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[first_name]"
                              length="200"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[first_name]"
                              name="first_name" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[last_name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[last_name]"
                              length="200"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[last_name]"
                              name="last_name" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[email_address]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[email_address]"
                              length="320"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[email_address]"
                              name="email_address" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[organization]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[organization]"
                              length="300"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[organization]"
                              name="organization" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[address1]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[address1]"
                              length="255"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[address1]"
                              name="address1" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[address2]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[address2]"
                              length="255"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[address2]"
                              name="address2" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[address3]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[address3]"
                              length="255"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[address3]"
                              name="address3" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[city]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[city]"
                              length="120"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[city]"
                              name="city" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[state]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[state]"
                              length="120"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[state]"
                              name="state" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[postal_code]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[postal_code]"
                              length="30"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[postal_code]"
                              name="postal_code" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[country_code]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[country_code]"
                              length="2"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[country_code]"
                              name="country_code" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[phone_number]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[phone_number]"
                              length="31"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[phone_number]"
                              name="phone_number" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[phone_extension]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[phone_extension]"
                              length="15"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[phone_extension]"
                              name="phone_extension" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[fax_number]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[fax_number]"
                              length="31"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[fax_number]"
                              name="fax_number" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[reseller_id]"
                              dataType="i4"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[reseller_id]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[reseller_id]"
                              name="reseller_id" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[domainnameid]"
                              dataType="i4"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[domainnameid]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[domainnameid]"
                              name="domainnameid" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[c_type_int]"
                              dataType="i4"
                              externalMetadataColumnId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output].ExternalColumns[c_type_int]"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[c_type_int]"
                              name="c_type_int" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private.Paths[ODBC Source Output]"
                      endId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private.Inputs[ODBC Destination Input]"
                      name="ODBC Source Output"
                      startId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact.Outputs[ODBC Source Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\Merge Contact_Private to Contact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{d389ba4e-7cc6-4c0a-a919-f11ffc01a114}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Merge Contact_Private to Contact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="5">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
	DELETE  FROM dm_enom.contact dc 
	WHERE  dc.itdp_contact_id IS NULL AND tld ='"+ @[$Package::TLD] +"' ;
	
	INSERT INTO dm_enom.contact (Enom_contact_id,contact_type, first_name, last_name, email_address, organization, address1, address2, 
address3, city, state, postal_code, country_code, phone_number, phone_extension, fax_number,reseller_id,c_type,domainnameid,tld, is_private)
	SELECT  distinct  c.id, c.contact_type, c.first_name, c.last_name, c.email_address, c.organization, c.address1, c.address2, c.address3,
 c.city, c.state, c.postal_code, c.country_code, c.phone_number, c.phone_extension, c.fax_number,c.reseller_id, c.c_type,
c.domainnameid, c.tld,  TRUE
	FROM dm_enom.contact_private c	
	JOIN dm_enom.domainname d ON d.domainnameid =c.domainnameid
	WHERE NOT EXISTS (  SELECT 1 FROM dm_enom.contact dc WHERE dc.Enom_contact_id = c.Id )
		AND c.tld = '"+ @[$Package::TLD] +"';
	ANALYSE dm_enom.contact; 
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;&#x9;DELETE  FROM dm_enom.contact dc &#xA;&#x9;WHERE  dc.itdp_contact_id IS NULL AND tld ='co.in' ;&#xA;&#x9;&#xA;&#x9;INSERT INTO dm_enom.contact (Enom_contact_id,contact_type, first_name, last_name, email_address, organization, address1, address2, &#xA;address3, city, state, postal_code, country_code, phone_number, phone_extension, fax_number,reseller_id,c_type,domainnameid,tld, is_private)&#xA;&#x9;SELECT  distinct  c.id, c.contact_type, c.first_name, c.last_name, c.email_address, c.organization, c.address1, c.address2, c.address3,&#xA; c.city, c.state, c.postal_code, c.country_code, c.phone_number, c.phone_extension, c.fax_number,c.reseller_id, c.c_type,&#xA;c.domainnameid, c.tld,  TRUE&#xA;&#x9;FROM dm_enom.contact_private c&#x9;&#xA;&#x9;JOIN dm_enom.domainname d ON d.domainnameid =c.domainnameid&#xA;&#x9;WHERE NOT EXISTS (  SELECT 1 FROM dm_enom.contact dc WHERE dc.Enom_contact_id = c.Id )&#xA;&#x9;&#x9;AND c.tld = 'co.in';&#xA;&#x9;ANALYSE dm_enom.contact; &#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\Set TLD, type_c"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{AEC98EFB-9CB8-4377-A89B-5B82393F1D38}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Set TLD, type_c"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="5">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">" BEGIN;
UPDATE dm_enom.contact_private SET TLD = '"+ @[$Package::TLD]+"',
c_type = CASE c_type_int  WHEN 1 THEN 'registrant' WHEN 2 THEN 'admin' WHEN 3 THEN 'tech' WHEN 4 THEN 'billing' END ; 
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource=" BEGIN;&#xA;UPDATE dm_enom.contact_private SET TLD = 'co.in',&#xA;c_type = CASE c_type_int  WHEN 1 THEN 'registrant' WHEN 2 THEN 'admin' WHEN 3 THEN 'tech' WHEN 4 THEN 'billing' END ; &#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\Truncate dm_enom_contact_private"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{74b61b99-cef9-43a9-8d8d-e5a1d7457c59}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Truncate dm_enom_contact_private"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="5">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="Truncate table dm_enom.contact_private" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{749c6395-20e6-4352-869f-311a436544c4}"
              DTS:From="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\Create or truncate nazca_domaincontact"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{e90ffc9c-2412-46f1-9a7a-1b6b2a0bace0}"
              DTS:From="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\Truncate dm_enom_contact_private" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{ee60d6c2-6093-47ad-9d76-02198b0bda03}"
              DTS:From="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\Truncate dm_enom_contact_private"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{49E80062-F950-4E8C-919C-16F9993D8488}"
              DTS:From="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\Set TLD, type_c" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{206D6E22-BBE6-422F-9960-1BF978F847B8}"
              DTS:From="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\Set TLD, type_c"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\Merge Contact_Private to Contact" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{C125BC86-98BD-4FB5-83ED-636DBB283AED}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="01_5 Extract public contact">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[$Package::private_contact] == True ? True : False</DTS:PropertyExpression>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Merge Contact_ to Contact only for thick TLD"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{fb13bfe9-b1e7-4a39-b800-2b8d3ba6c18f}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Merge Contact_ to Contact only for thick TLD"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"DO $$
BEGIN
IF (SELECT count(*) FROM itdp.tld WHERE tld_name = '"+ @[$Package::TLD] +"' AND NOT(is_thin)) &gt; 0  THEN 
	DELETE  FROM dm_enom.contact dc 
	WHERE  dc.itdp_contact_id IS NULL AND tld ='"+ @[$Package::TLD] +"';
	
	INSERT INTO dm_enom.contact (Enom_contact_id,contact_type, first_name, last_name, email_address, organization, address1, address2, 
address3, city, state, postal_code, country_code, phone_number, phone_extension, fax_number,reseller_id,c_type,domainnameid,tld,npd, is_private)
	SELECT  distinct  c.id, c.contact_type, c.first_name, c.last_name, c.email_address, c.organization, c.address1, c.address2, c.address3,
 c.city, c.state, c.postal_code, c.country_code, c.phone_number, c.phone_extension, c.fax_number,c.reseller_id, c.c_type,
c.domainnameid, c.tld, c.npd, FALSE
	FROM dm_enom.contact_ c	
	JOIN dm_enom.domainname d ON d.domainnameid =c.domainnameid
	WHERE NOT EXISTS (  SELECT 1 FROM dm_enom.contact dc WHERE dc.Enom_contact_id = c.Id)
		AND c.tld = '"+ @[$Package::TLD] +"';
	ANALYSE dm_enom.contact; 
	COMMIT;
END IF;
END $$  "</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="DO $$&#xA;BEGIN&#xA;IF (SELECT count(*) FROM itdp.tld WHERE tld_name = 'co.in' AND NOT(is_thin)) &gt; 0  THEN &#xA;&#x9;DELETE  FROM dm_enom.contact dc &#xA;&#x9;WHERE  dc.itdp_contact_id IS NULL AND tld ='co.in';&#xA;&#x9;&#xA;&#x9;INSERT INTO dm_enom.contact (Enom_contact_id,contact_type, first_name, last_name, email_address, organization, address1, address2, &#xA;address3, city, state, postal_code, country_code, phone_number, phone_extension, fax_number,reseller_id,c_type,domainnameid,tld,npd, is_private)&#xA;&#x9;SELECT  distinct  c.id, c.contact_type, c.first_name, c.last_name, c.email_address, c.organization, c.address1, c.address2, c.address3,&#xA; c.city, c.state, c.postal_code, c.country_code, c.phone_number, c.phone_extension, c.fax_number,c.reseller_id, c.c_type,&#xA;c.domainnameid, c.tld, c.npd, FALSE&#xA;&#x9;FROM dm_enom.contact_ c&#x9;&#xA;&#x9;JOIN dm_enom.domainname d ON d.domainnameid =c.domainnameid&#xA;&#x9;WHERE NOT EXISTS (  SELECT 1 FROM dm_enom.contact dc WHERE dc.Enom_contact_id = c.Id)&#xA;&#x9;&#x9;AND c.tld = 'co.in';&#xA;&#x9;ANALYSE dm_enom.contact; &#xA;&#x9;COMMIT;&#xA;END IF;&#xA;END $$  " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Populate contact__c_type"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{18AD03A3-276A-4279-AEAF-BB53BD3B8E19}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Populate contact__c_type"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"UPDATE dm_enom.contact_
SET c_type =
CASE contact_type  WHEN 'registrant' THEN 'registrant'
WHEN 'billing' THEN 'billing'
WHEN 'technical' THEN 'tech'
WHEN  'administrator' THEN 'admin' END 
WHERE c_type IS NULL AND  tld='"+ @[$Package::TLD] +"';"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{ABDE7B26-BFF2-467F-980A-2292D0F21D32}"
                  SQLTask:SqlStatementSource="UPDATE dm_enom.contact_&#xA;SET c_type =&#xA;CASE contact_type  WHEN 'registrant' THEN 'registrant'&#xA;WHEN 'billing' THEN 'billing'&#xA;WHEN 'technical' THEN 'tech'&#xA;WHEN  'administrator' THEN 'admin' END &#xA;WHERE c_type IS NULL AND  tld='co.in';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{09D8A4B3-FB71-4D04-8C4C-36BCC940760F}"
              DTS:From="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Populate contact__c_type"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Merge Contact_ to Contact only for thick TLD" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\01 Extract Enom domain, contact, host\dm_log - dm_start"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{8728F913-58B4-425C-84C1-CC9619766521}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="dm_log - dm_start"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"BEGIN ;
INSERT INTO itdp.dm_log
( id, phase, dm_source, tld, start_date, status)
VALUES( "+ (DT_WSTR, 5) @[User::dm_log_id] +",'"+  @[$Package::Migration_phase] +"', '"+ @[$Package::Tenant]  +"', '"+ @[$Package::TLD] +"', NOW(), 'enom_dm started' );

UPDATE  itdp.tld t
SET migration_status = NULL , 
	result_domain.extract = NULL ,
	result_host.extract =  NULL ,
	result_contact.extract = NULL ,
	result_domain.dm_enom = NULL ,
	result_domain.itdp = NULL ,
	result_domain.error = NULL ,
	result_domain.tdp  = NULL ,
	result_host.dm_enom = NULL ,
	result_host.itdp = NULL ,
	result_host.error = NULL ,
	result_host.tdp = NULL ,
	result_contact.dm_enom = NULL ,
	result_contact.itdp = NULL ,
	result_contact.error = NULL ,
	result_contact.tdp = NULL ,
	result_domain.dm_enom_itdp_pk  = NULL ,
	result_contact.dm_enom_itdp_pk = NULL ,
result_host.dm_enom_itdp_pk  = NULL ,
	updated_date = now()
WHERE t.TLD_name  = '"+ @[$Package::TLD] +"' AND t.dm_source='"+ @[$Package::Tenant] +"'  AND phase = '"+@[$Package::Migration_phase]+"';
COMMIT;"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
              SQLTask:SqlStatementSource="BEGIN ;&#xA;INSERT INTO itdp.dm_log&#xA;( id, phase, dm_source, tld, start_date, status)&#xA;VALUES( 1,'1.3', 'enom', 'co.in', NOW(), 'enom_dm started' );&#xA;&#xA;UPDATE  itdp.tld t&#xA;SET migration_status = NULL , &#xA;&#x9;result_domain.extract = NULL ,&#xA;&#x9;result_host.extract =  NULL ,&#xA;&#x9;result_contact.extract = NULL ,&#xA;&#x9;result_domain.dm_enom = NULL ,&#xA;&#x9;result_domain.itdp = NULL ,&#xA;&#x9;result_domain.error = NULL ,&#xA;&#x9;result_domain.tdp  = NULL ,&#xA;&#x9;result_host.dm_enom = NULL ,&#xA;&#x9;result_host.itdp = NULL ,&#xA;&#x9;result_host.error = NULL ,&#xA;&#x9;result_host.tdp = NULL ,&#xA;&#x9;result_contact.dm_enom = NULL ,&#xA;&#x9;result_contact.itdp = NULL ,&#xA;&#x9;result_contact.error = NULL ,&#xA;&#x9;result_contact.tdp = NULL ,&#xA;&#x9;result_domain.dm_enom_itdp_pk  = NULL ,&#xA;&#x9;result_contact.dm_enom_itdp_pk = NULL ,&#xA;result_host.dm_enom_itdp_pk  = NULL ,&#xA;&#x9;updated_date = now()&#xA;WHERE t.TLD_name  = 'co.in' AND t.dm_source='enom'  AND phase = '1.3';&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\01 Extract Enom domain, contact, host\Get max dm_log"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{9F91095D-E835-4CFA-8334-77D71C7E539A}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get max dm_log"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{ABDE7B26-BFF2-467F-980A-2292D0F21D32}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::max_dm_log_query"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::dm_log_id" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\01 Extract Enom domain, contact, host.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{AA556F9B-5BD7-4EE0-A0C0-BA5A2A99F5DB}"
          DTS:From="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\01 Extract Enom domain, contact, host.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{E6CE43BE-3416-427A-AEF7-F4D8FC02DAEB}"
          DTS:From="Package\01 Extract Enom domain, contact, host\Get max dm_log"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\01 Extract Enom domain, contact, host\dm_log - dm_start" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\01 Extract Enom domain, contact, host.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{0795458C-4C45-4CE0-B6A1-7EFF35FC58F7}"
          DTS:From="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\01 Extract Enom domain, contact, host.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{1933995A-7D03-48FA-B660-0718EB1B41B8}"
          DTS:From="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\01 Extract Enom domain, contact, host.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{FCE1B372-CF49-4D18-8755-9384997991C3}"
          DTS:From="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{b7f94f25-bd29-420b-ae54-b11b692a1475}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{789b3e0b-eb3b-4bc3-a8b9-9b9d0174c6a3}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="02_1 domain and host">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Add DNS host to nameservers table"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{4974c1ae-1d12-41ed-bd73-7de093eba944}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Add DNS host to nameservers table"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0">
                <DTS:Property
                  DTS:DataType="8"
                  DTS:Name="EventFilter">13,7,OnError,19,OnExecStatusChanged,13,OnInformation,13,OnPostExecute,14,OnPostValidate,12,OnPreExecute,13,OnPreValidate,10,OnProgress,13,OnQueryCancel,12,OnTaskFailed,22,OnVariableValueChanged,9,OnWarning,24,ExecuteSQLExecutingQuery</DTS:Property>
                <DTS:Property
                  DTS:EventName="ExecuteSQLExecutingQuery"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnError"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnExecStatusChanged"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnInformation"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPostExecute"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPostValidate"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPreExecute"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPreValidate"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnProgress"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnQueryCancel"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnTaskFailed"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnVariableValueChanged"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnWarning"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
              </DTS:LoggingOptions>
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
;WITH dns AS 
( SELECT 'dns1.name-services.com' AS name
UNION ALL 
SELECT 'dns2.name-services.com' AS name
UNION ALL 
 SELECT 'dns3.name-services.com' AS name
UNION ALL 
 SELECT 'dns4.name-services.com' AS name
UNION ALL 
 SELECT 'dns5.name-services.com' AS name)
 
INSERT INTO itdp.host (tld,itdp_domain_id,source_domain_id,name,dm_source)
SELECT d.tld,id,source_domain_id, dns.name , '"+@[$Package::Tenant]+"' as  dm_source
FROM itdp.domain d
JOIN dm_enom.domainname dd on dd.domainnameid =d.source_domain_id
CROSS JOIN dns
WHERE d.dm_source = '"+@[$Package::Tenant]+"' and d.tld= '"+ @[$Package::TLD]  +"'  and 
dd.NSStatus = 'Yes' AND NOT EXISTS (SELECT 1 FROM itdp.host h1 WHERE h1.dm_source = '"+@[$Package::Tenant]+"' 
and h1.tld= '"+ @[$Package::TLD]  +"' and h1.itdp_domain_id=d.id)
	AND d.TLD = ('"+ @[$Package::TLD]  +"');
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;;WITH dns AS &#xA;( SELECT 'dns1.name-services.com' AS name&#xA;UNION ALL &#xA;SELECT 'dns2.name-services.com' AS name&#xA;UNION ALL &#xA; SELECT 'dns3.name-services.com' AS name&#xA;UNION ALL &#xA; SELECT 'dns4.name-services.com' AS name&#xA;UNION ALL &#xA; SELECT 'dns5.name-services.com' AS name)&#xA; &#xA;INSERT INTO itdp.host (tld,itdp_domain_id,source_domain_id,name,dm_source)&#xA;SELECT d.tld,id,source_domain_id, dns.name , 'enom' as  dm_source&#xA;FROM itdp.domain d&#xA;JOIN dm_enom.domainname dd on dd.domainnameid =d.source_domain_id&#xA;CROSS JOIN dns&#xA;WHERE d.dm_source = 'enom' and d.tld= 'co.in'  and &#xA;dd.NSStatus = 'Yes' AND NOT EXISTS (SELECT 1 FROM itdp.host h1 WHERE h1.dm_source = 'enom' &#xA;and h1.tld= 'co.in' and h1.itdp_domain_id=d.id)&#xA;&#x9;AND d.TLD = ('co.in');&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Add host error for not migrated domains"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{71BF21B7-6E04-404C-8E64-E60949853B5A}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Add host error for not migrated domains"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
 ANALYSE itdp.domain;  
	INSERT INTO itdp.host_error_records  (dm_source, tld, source_host_id, source_domain_id,   name,   errordescription)
	SELECT DISTINCT  der.dm_source,der.tld,h.idx, h.domainnameid,   h.name,  'domain was not migrated'
	FROM  dm_enom.nameservers  h
	JOIN  itdp.domain_error_records der   ON  der.source_domain_id = h.DomainNameID 
	LEFT JOIN itdp.host_error_records her   ON  her.source_host_id = h.idx
	WHERE  her.id IS null  AND h.tld  = '"+ @[$Package::TLD] +"';
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA; ANALYSE itdp.domain;  &#xA;&#x9;INSERT INTO itdp.host_error_records  (dm_source, tld, source_host_id, source_domain_id,   name,   errordescription)&#xA;&#x9;SELECT DISTINCT  der.dm_source,der.tld,h.idx, h.domainnameid,   h.name,  'domain was not migrated'&#xA;&#x9;FROM  dm_enom.nameservers  h&#xA;&#x9;JOIN  itdp.domain_error_records der   ON  der.source_domain_id = h.DomainNameID &#xA;&#x9;LEFT JOIN itdp.host_error_records her   ON  her.source_host_id = h.idx&#xA;&#x9;WHERE  her.id IS null  AND h.tld  = 'co.in';&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Create itdp_domain_itemp"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{FB6FDB51-12A6-447F-A578-8648220207CB}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create itdp_domain_itemp"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"DROP TABLE IF EXISTS itdp.domain_itemp ;
--set timezone to 'UTC';
CREATE TABLE IF NOT EXISTS  itdp.domain_itemp AS 
(SELECT d.domainnameid, d.tld, CASE WHEN d.renew='Yes' THEN TRUE ELSE FALSE END ::boolean AS auto_renew , d.regperiod,  d.slddottld,  d.roid, d.authinfo,mds.itdp_id  AS itdp_status_id,
	d.creationdate AT time zone 'UTC'  as  creationdate1 ,
 	expdate AT time zone 'UTC'  as  expdate1, expdate AT time zone 'UTC'  as  expdate2 , 
-- 2022-01-15 Enom server was moved from UTC-7 to UTC-6
 	CASE WHEN CAST(deldate AS date) &lt;'2022-01-15' THEN     (deldate  + interval '7 hour') AT time zone 'UTC'
    	 WHEN CAST(deldate AS date)&gt;='2022-01-15' THEN     (deldate  + interval '6 hour') AT time zone 'UTC'
    END     as deldate1,
    CASE WHEN CAST(transferindate AS date) &lt;'2022-01-15' THEN     (transferindate  + interval '7 hour') AT time zone 'UTC'
    	 WHEN CAST(transferindate AS date)&gt;='2022-01-15' THEN     (transferindate  + interval '6 hour') AT time zone 'UTC'
    END     as transferindate1,
 	COALESCE(d.uname,d.slddottld)::VARCHAR(300) AS uname1
FROM dm_enom.domainname d
LEFT JOIN  dm_enom.map_domain_status_enom_itdp AS mds ON upper(d.registrationstatus) =upper(mds.enom_name)
LEFT JOIN itdp.domain_error_records der ON der.source_domain_id =d.domainnameid 
WHERE  itdp_domain_id IS NULL AND UPPER(registrationstatus)  in ('"+ @[$Project::ITDP_domain_statuses]  +"') 
 	AND d.tld='" + @[$Package::TLD]+"' 
AND der.source_domain_id IS NULL )
"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="DROP TABLE IF EXISTS itdp.domain_itemp ;&#xA;--set timezone to 'UTC';&#xA;CREATE TABLE IF NOT EXISTS  itdp.domain_itemp AS &#xA;(SELECT d.domainnameid, d.tld, CASE WHEN d.renew='Yes' THEN TRUE ELSE FALSE END ::boolean AS auto_renew , d.regperiod,  d.slddottld,  d.roid, d.authinfo,mds.itdp_id  AS itdp_status_id,&#xA;&#x9;d.creationdate AT time zone 'UTC'  as  creationdate1 ,&#xA; &#x9;expdate AT time zone 'UTC'  as  expdate1, expdate AT time zone 'UTC'  as  expdate2 , &#xA;-- 2022-01-15 Enom server was moved from UTC-7 to UTC-6&#xA; &#x9;CASE WHEN CAST(deldate AS date) &lt;'2022-01-15' THEN     (deldate  + interval '7 hour') AT time zone 'UTC'&#xA;    &#x9; WHEN CAST(deldate AS date)&gt;='2022-01-15' THEN     (deldate  + interval '6 hour') AT time zone 'UTC'&#xA;    END     as deldate1,&#xA;    CASE WHEN CAST(transferindate AS date) &lt;'2022-01-15' THEN     (transferindate  + interval '7 hour') AT time zone 'UTC'&#xA;    &#x9; WHEN CAST(transferindate AS date)&gt;='2022-01-15' THEN     (transferindate  + interval '6 hour') AT time zone 'UTC'&#xA;    END     as transferindate1,&#xA; &#x9;COALESCE(d.uname,d.slddottld)::VARCHAR(300) AS uname1&#xA;FROM dm_enom.domainname d&#xA;LEFT JOIN  dm_enom.map_domain_status_enom_itdp AS mds ON upper(d.registrationstatus) =upper(mds.enom_name)&#xA;LEFT JOIN itdp.domain_error_records der ON der.source_domain_id =d.domainnameid &#xA;WHERE  itdp_domain_id IS NULL AND UPPER(registrationstatus)  in ('REGISTERED', 'EXPIRED', 'RGP', 'EXTENDED RGP', ' RGP DEACTIVATED', 'IMMINENT DELETE') &#xA; &#x9;AND d.tld='co.in' &#xA;AND der.source_domain_id IS NULL )&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Mark domain with min_nameservers problem"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{EC3757BA-23F3-4772-B14E-066B9E859251}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Mark domain with min_nameservers problem"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
	WITH cte AS 
		(SELECT get_tld_setting(p_key =&gt; 'tld.dns.allowed_nameserver_count',	p_tld_id=&gt;vat.tld_id,    p_tenant_id=&gt;vat.tenant_id) AS range_nameservers
		FROM public.v_accreditation_tld vat
		WHERE vat.tenant_name ='"+@[$Package::Tenant]+"' and tld_name ='"+ @[$Package::TLD] +"'),   
	cte1 AS 
		(SELECT count(h.itdp_domain_id) AS number_hosts, d.id AS domain_id, min(range_nameservers) AS min_s, min(range_nameservers)::int4range
		FROM itdp.domain d
		LEFT JOIN itdp.host h ON  h.tld= '"+ @[$Package::TLD] +"' and h.dm_source = '"+@[$Package::Tenant]+"' and d.id=h.itdp_domain_id 
		, cte 		
		WHERE d.tld= '"+ @[$Package::TLD] +"' and d.dm_source = '"+@[$Package::Tenant]+"'
		GROUP BY d.id
		HAVING NOT(count(h.itdp_domain_id)::int &lt;@ 	(min(range_nameservers))::int4range)
		)
		
	UPDATE itdp.DOMAIN d SET TDP_min_namesrvers_issue=TRUE
		FROM CTE1 h 
		WHERE h.domain_id=d.id and d.tld= '"+ @[$Package::TLD] +"' and d.dm_source = '"+@[$Package::Tenant]+"' ;		
	    
	ANALYSE itdp.DOMAIN ;	
COMMIT;	"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;&#x9;WITH cte AS &#xA;&#x9;&#x9;(SELECT get_tld_setting(p_key =&gt; 'tld.dns.allowed_nameserver_count',&#x9;p_tld_id=&gt;vat.tld_id,    p_tenant_id=&gt;vat.tenant_id) AS range_nameservers&#xA;&#x9;&#x9;FROM public.v_accreditation_tld vat&#xA;&#x9;&#x9;WHERE vat.tenant_name ='enom' and tld_name ='co.in'),   &#xA;&#x9;cte1 AS &#xA;&#x9;&#x9;(SELECT count(h.itdp_domain_id) AS number_hosts, d.id AS domain_id, min(range_nameservers) AS min_s, min(range_nameservers)::int4range&#xA;&#x9;&#x9;FROM itdp.domain d&#xA;&#x9;&#x9;LEFT JOIN itdp.host h ON  h.tld= 'co.in' and h.dm_source = 'enom' and d.id=h.itdp_domain_id &#xA;&#x9;&#x9;, cte &#x9;&#x9;&#xA;&#x9;&#x9;WHERE d.tld= 'co.in' and d.dm_source = 'enom'&#xA;&#x9;&#x9;GROUP BY d.id&#xA;&#x9;&#x9;HAVING NOT(count(h.itdp_domain_id)::int &lt;@ &#x9;(min(range_nameservers))::int4range)&#xA;&#x9;&#x9;)&#xA;&#x9;&#x9;&#xA;&#x9;UPDATE itdp.DOMAIN d SET TDP_min_namesrvers_issue=TRUE&#xA;&#x9;&#x9;FROM CTE1 h &#xA;&#x9;&#x9;WHERE h.domain_id=d.id and d.tld= 'co.in' and d.dm_source = 'enom' ;&#x9;&#x9;&#xA;&#x9;    &#xA;&#x9;ANALYSE itdp.DOMAIN ;&#x9;&#xA;COMMIT;&#x9;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Move domains with host error to domain_error"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{d85b6784-8e82-4cda-8c7e-b34685b1b1a6}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Move domains with host error to domain_error"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;		
	INSERT INTO itdp.domain_error_records (tld, source_domain_id, id, tenant_customer_id, accreditation_tld_id, name, auth_info, roid,
		ry_created_date, ry_expiry_date, ry_updated_date, ry_transfered_date, deleted_date, expiry_date,
		status_id, auto_renew, errordescription)

	SELECT distinct d.tld, d.source_domain_id, d.id, d.tenant_customer_id, d.accreditation_tld_id, d.name, d.auth_info, d.roid, 
		d.ry_created_date, d.ry_expiry_date, d.ry_updated_date, d.ry_transfered_date, d.deleted_date, d.expiry_date,
		d.status_id, d.auto_renew, 'host_error' 
	FROM  itdp.domain d 
	JOIN  itdp.host_error_records her   ON  her.source_domain_id = d.source_domain_id  WHERE d.tld = '"+ @[$Package::TLD] + "'; 

	-- delete from itdp.domain
	DELETE FROM itdp.domain d	
	WHERE d.source_domain_id  IN 
		(SELECT source_domain_id FROM itdp.host_error_records  WHERE  tld = '"+ @[$Package::TLD] +"' )
		AND d.tld = '"+ @[$Package::TLD] +"';	
	INSERT INTO itdp.host_error_records  (tld, source_host_id, source_domain_id, id, itdp_domain_id, tenant_customer_id, name, domain_id,  errordescription)
	SELECT distinct h.tld,h.source_host_id, h.source_domain_id,h.id, h.itdp_domain_id, h.tenant_customer_id, h.name, h.domain_id, 'domain has another host  record with error' FROM  itdp.host h 
	JOIN  itdp.host_error_records her   ON  her.source_domain_id = h.source_domain_id 
	WHERE h.tld  = '"+ @[$Package::TLD] + "';		
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#x9;&#x9;&#xA;&#x9;INSERT INTO itdp.domain_error_records (tld, source_domain_id, id, tenant_customer_id, accreditation_tld_id, name, auth_info, roid,&#xA;&#x9;&#x9;ry_created_date, ry_expiry_date, ry_updated_date, ry_transfered_date, deleted_date, expiry_date,&#xA;&#x9;&#x9;status_id, auto_renew, errordescription)&#xA;&#xA;&#x9;SELECT distinct d.tld, d.source_domain_id, d.id, d.tenant_customer_id, d.accreditation_tld_id, d.name, d.auth_info, d.roid, &#xA;&#x9;&#x9;d.ry_created_date, d.ry_expiry_date, d.ry_updated_date, d.ry_transfered_date, d.deleted_date, d.expiry_date,&#xA;&#x9;&#x9;d.status_id, d.auto_renew, 'host_error' &#xA;&#x9;FROM  itdp.domain d &#xA;&#x9;JOIN  itdp.host_error_records her   ON  her.source_domain_id = d.source_domain_id  WHERE d.tld = 'co.in'; &#xA;&#xA;&#x9;-- delete from itdp.domain&#xA;&#x9;DELETE FROM itdp.domain d&#x9;&#xA;&#x9;WHERE d.source_domain_id  IN &#xA;&#x9;&#x9;(SELECT source_domain_id FROM itdp.host_error_records  WHERE  tld = 'co.in' )&#xA;&#x9;&#x9;AND d.tld = 'co.in';&#x9;&#xA;&#x9;INSERT INTO itdp.host_error_records  (tld, source_host_id, source_domain_id, id, itdp_domain_id, tenant_customer_id, name, domain_id,  errordescription)&#xA;&#x9;SELECT distinct h.tld,h.source_host_id, h.source_domain_id,h.id, h.itdp_domain_id, h.tenant_customer_id, h.name, h.domain_id, 'domain has another host  record with error' FROM  itdp.host h &#xA;&#x9;JOIN  itdp.host_error_records her   ON  her.source_domain_id = h.source_domain_id &#xA;&#x9;WHERE h.tld  = 'co.in';&#x9;&#x9;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Move domains with number of  host &lt;min_nameservers to domain_error"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{CFA62E10-0937-4607-A4EF-030811A2E0A0}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Move domains with number of  host &lt;min_nameservers to domain_error"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"DO $$
BEGIN 
   IF (SELECT min_nameservers FROM itdp.tld where tld_name='"+ @[$Package::TLD] +"' )&gt;0  THEN 
		WITH hosts AS (
		SELECT count(h.itdp_domain_id) AS number_hosts, d.id FROM itdp.domain d
		LEFT JOIN itdp.host h ON d.id=h.itdp_domain_id 
		WHERE d.tld= '"+ @[$Package::TLD] +"'
		GROUP BY d.id
		)
		--- move to domain error domains without host
		INSERT INTO itdp.domain_error_records (tld, source_domain_id, id, tenant_customer_id, accreditation_tld_id, name, auth_info, roid,
			ry_created_date, ry_expiry_date, ry_updated_date, ry_transfered_date, deleted_date, expiry_date,
			status_id, auto_renew, errordescription)
		SELECT distinct d.tld, d.source_domain_id, d.id, d.tenant_customer_id, d.accreditation_tld_id, d.name, d.auth_info, d.roid, 
			d.ry_created_date, d.ry_expiry_date, d.ry_updated_date, d.ry_transfered_date, d.deleted_date, d.expiry_date,
			d.status_id, d.auto_renew, CONCAT(hosts.number_hosts,', domain with number of host &lt; TDP.min_nameservers') 
			FROM  itdp.domain d 	
		JOIN hosts ON hosts.id=d.id AND  hosts.number_hosts &lt; (SELECT min_nameservers FROM itdp.tld where tld_name='"+ @[$Package::TLD] +"') 
		WHERE  d.tld ='"+ @[$Package::TLD] +"' ;
		
		-- delete from itdp.domain
		DELETE FROM itdp.domain d	
		WHERE d.source_domain_id  IN (SELECT source_domain_id FROM itdp.domain_error_records  WHERE tld = '"+ @[$Package::TLD] +"' )
				AND d.tld = '"+ @[$Package::TLD] +"' ;
	COMMIT;	
END IF;
END $$
"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="DO $$&#xA;BEGIN &#xA;   IF (SELECT min_nameservers FROM itdp.tld where tld_name='co.in' )&gt;0  THEN &#xA;&#x9;&#x9;WITH hosts AS (&#xA;&#x9;&#x9;SELECT count(h.itdp_domain_id) AS number_hosts, d.id FROM itdp.domain d&#xA;&#x9;&#x9;LEFT JOIN itdp.host h ON d.id=h.itdp_domain_id &#xA;&#x9;&#x9;WHERE d.tld= 'co.in'&#xA;&#x9;&#x9;GROUP BY d.id&#xA;&#x9;&#x9;)&#xA;&#x9;&#x9;--- move to domain error domains without host&#xA;&#x9;&#x9;INSERT INTO itdp.domain_error_records (tld, source_domain_id, id, tenant_customer_id, accreditation_tld_id, name, auth_info, roid,&#xA;&#x9;&#x9;&#x9;ry_created_date, ry_expiry_date, ry_updated_date, ry_transfered_date, deleted_date, expiry_date,&#xA;&#x9;&#x9;&#x9;status_id, auto_renew, errordescription)&#xA;&#x9;&#x9;SELECT distinct d.tld, d.source_domain_id, d.id, d.tenant_customer_id, d.accreditation_tld_id, d.name, d.auth_info, d.roid, &#xA;&#x9;&#x9;&#x9;d.ry_created_date, d.ry_expiry_date, d.ry_updated_date, d.ry_transfered_date, d.deleted_date, d.expiry_date,&#xA;&#x9;&#x9;&#x9;d.status_id, d.auto_renew, CONCAT(hosts.number_hosts,', domain with number of host &lt; TDP.min_nameservers') &#xA;&#x9;&#x9;&#x9;FROM  itdp.domain d &#x9;&#xA;&#x9;&#x9;JOIN hosts ON hosts.id=d.id AND  hosts.number_hosts &lt; (SELECT min_nameservers FROM itdp.tld where tld_name='co.in') &#xA;&#x9;&#x9;WHERE  d.tld ='co.in' ;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;-- delete from itdp.domain&#xA;&#x9;&#x9;DELETE FROM itdp.domain d&#x9;&#xA;&#x9;&#x9;WHERE d.source_domain_id  IN (SELECT source_domain_id FROM itdp.domain_error_records  WHERE tld = 'co.in' )&#xA;&#x9;&#x9;&#x9;&#x9;AND d.tld = 'co.in' ;&#xA;&#x9;COMMIT;&#x9;&#xA;END IF;&#xA;END $$&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Move host with domain error to host error table"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{c6e15c2d-b56b-41cd-a83c-57568b0b9500}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Move host with domain error to host error table"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
	INSERT INTO itdp.host_error_records  (tld, source_host_id, source_domain_id, id, itdp_domain_id, tenant_customer_id, name, domain_id,  errordescription)
	SELECT DISTINCT  h.tld,h.source_host_id, h.source_domain_id,h.id, h.itdp_domain_id, h.tenant_customer_id, h.name, h.domain_id, der.errordescription
	FROM  itdp.host h 
	JOIN  itdp.domain_error_records der   ON  der.source_domain_id = h.source_domain_id 
	WHERE   h.tld  = '"+ @[$Package::TLD] +"';


-- delete from itdp.host 
	
DELETE FROM itdp.host h
	WHERE h.source_domain_id  IN (SELECT source_domain_id FROM itdp.host_error_records  WHERE  tld = '"+ @[$Package::TLD] +"' ) 
		AND h.tld = '"+ @[$Package::TLD] +"' ;
COMMIT ;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;&#x9;INSERT INTO itdp.host_error_records  (tld, source_host_id, source_domain_id, id, itdp_domain_id, tenant_customer_id, name, domain_id,  errordescription)&#xA;&#x9;SELECT DISTINCT  h.tld,h.source_host_id, h.source_domain_id,h.id, h.itdp_domain_id, h.tenant_customer_id, h.name, h.domain_id, der.errordescription&#xA;&#x9;FROM  itdp.host h &#xA;&#x9;JOIN  itdp.domain_error_records der   ON  der.source_domain_id = h.source_domain_id &#xA;&#x9;WHERE   h.tld  = 'co.in';&#xA;&#xA;&#xA;-- delete from itdp.host &#xA;&#x9;&#xA;DELETE FROM itdp.host h&#xA;&#x9;WHERE h.source_domain_id  IN (SELECT source_domain_id FROM itdp.host_error_records  WHERE  tld = 'co.in' ) &#xA;&#x9;&#x9;AND h.tld = 'co.in' ;&#xA;COMMIT ;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Populate itdp-domain"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{50E30A96-70C8-48B2-B785-997DF38C8FF0}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Populate itdp-domain"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"
DO $$
 DECLARE    _sql text;  
BEGIN
SET work_mem TO '1900MB';

	IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
			DROP TABLE IF EXISTS itdp.temp_list_constraints;	
			DROP TABLE IF EXISTS itdp.temp_list_index;
		--save list of CONSTRAINTS 
		CREATE TABLE itdp.temp_list_constraints
			AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname
			FROM pg_constraint
			INNER JOIN pg_class ON conrelid=pg_class.oid
			INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            
			WHERE relname = 'domain_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"'  AND nspname='itdp' AND contype&lt;&gt;'p');
		 
		--DROP constraints
		SELECT string_agg('ALTER TABLE itdp.domain_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"  DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint	
			INNER JOIN pg_class ON conrelid=pg_class.oid
			INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace 								
		 	WHERE relname = 'domain_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"'  AND nspname='itdp' AND contype&lt;&gt;'p'  INTO _sql;
		IF _sql IS NOT NULL THEN                  
	        EXECUTE _sql;
	    END IF;   

	--save list of indexes		
	CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'itdp' AND TABLEname='domain_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"');
	
	 -- drop  indexes --   
		 SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')
			   FROM   pg_index  i   
			   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'
			   WHERE  i.indrelid = 'itdp.domain_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"'::regclass AND    d.objid IS NULL   INTO _sql;
		IF _sql IS NOT NULL THEN                  
	    	    EXECUTE _sql;
	    END IF;	
   
	END IF;
	
	INSERT INTO itdp.domain (tld, dm_source, source_domain_id,  name, auth_info, roid,
		 ry_created_date, ry_expiry_date, ry_transfered_date, deleted_date,  expiry_date,
		 status_id, auto_renew, registration_period,  uname  )	
	SELECT   tld,'enom' as  dm_source, domainnameid,slddottld, authinfo,roid,
		 creationdate1,expdate1,transferindate1,deldate1,expdate1,
		itdp_status_id,auto_renew, regperiod, uname1	
		FROM itdp.domain_itemp d;
	
	IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
			-- recreate constraints	 
	     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN 
			 EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);
		 END IF;			
		 --recreate indexes
	 	IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN 
			EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);
		END IF;		
	END IF;
ANALYSE itdp.domain;
COMMIT;  
END$$"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="&#xA;DO $$&#xA; DECLARE    _sql text;  &#xA;BEGIN&#xA;SET work_mem TO '1900MB';&#xA;&#xA;&#x9;IF  'co.in' in ('com' ,'net') THEN&#xA;&#x9;&#x9;&#x9;DROP TABLE IF EXISTS itdp.temp_list_constraints;&#x9;&#xA;&#x9;&#x9;&#x9;DROP TABLE IF EXISTS itdp.temp_list_index;&#xA;&#x9;&#x9;--save list of CONSTRAINTS &#xA;&#x9;&#x9;CREATE TABLE itdp.temp_list_constraints&#xA;&#x9;&#x9;&#x9;AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname&#xA;&#x9;&#x9;&#x9;FROM pg_constraint&#xA;&#x9;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            &#xA;&#x9;&#x9;&#x9;WHERE relname = 'domain_enom_co.in'  AND nspname='itdp' AND contype&lt;&gt;'p');&#xA;&#x9;&#x9; &#xA;&#x9;&#x9;--DROP constraints&#xA;&#x9;&#x9;SELECT string_agg('ALTER TABLE itdp.domain_enom_co.in  DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint&#x9;&#xA;&#x9;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9; &#x9;WHERE relname = 'domain_enom_co.in'  AND nspname='itdp' AND contype&lt;&gt;'p'  INTO _sql;&#xA;&#x9;&#x9;IF _sql IS NOT NULL THEN                  &#xA;&#x9;        EXECUTE _sql;&#xA;&#x9;    END IF;   &#xA;&#xA;&#x9;--save list of indexes&#x9;&#x9;&#xA;&#x9;CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'itdp' AND TABLEname='domain_enom_co.in');&#xA;&#x9;&#xA;&#x9; -- drop  indexes --   &#xA;&#x9;&#x9; SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')&#xA;&#x9;&#x9;&#x9;   FROM   pg_index  i   &#xA;&#x9;&#x9;&#x9;   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'&#xA;&#x9;&#x9;&#x9;   WHERE  i.indrelid = 'itdp.domain_enom_co.in'::regclass AND    d.objid IS NULL   INTO _sql;&#xA;&#x9;&#x9;IF _sql IS NOT NULL THEN                  &#xA;&#x9;    &#x9;    EXECUTE _sql;&#xA;&#x9;    END IF;&#x9;&#xA;   &#xA;&#x9;END IF;&#xA;&#x9;&#xA;&#x9;INSERT INTO itdp.domain (tld, dm_source, source_domain_id,  name, auth_info, roid,&#xA;&#x9;&#x9; ry_created_date, ry_expiry_date, ry_transfered_date, deleted_date,  expiry_date,&#xA;&#x9;&#x9; status_id, auto_renew, registration_period,  uname  )&#x9;&#xA;&#x9;SELECT   tld,'enom' as  dm_source, domainnameid,slddottld, authinfo,roid,&#xA;&#x9;&#x9; creationdate1,expdate1,transferindate1,deldate1,expdate1,&#xA;&#x9;&#x9;itdp_status_id,auto_renew, regperiod, uname1&#x9;&#xA;&#x9;&#x9;FROM itdp.domain_itemp d;&#xA;&#x9;&#xA;&#x9;IF  'co.in' in ('com' ,'net') THEN&#xA;&#x9;&#x9;&#x9;-- recreate constraints&#x9; &#xA;&#x9;     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN &#xA;&#x9;&#x9;&#x9; EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);&#xA;&#x9;&#x9; END IF;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9; --recreate indexes&#xA;&#x9; &#x9;IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN &#xA;&#x9;&#x9;&#x9;EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);&#xA;&#x9;&#x9;END IF;&#x9;&#x9;&#xA;&#x9;END IF;&#xA;ANALYSE itdp.domain;&#xA;COMMIT;  &#xA;END$$" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Transfer domain data"
              DTS:Disabled="True"
              DTS:DTSID="{626884ae-e9f6-4524-8d31-3ff06a4ff6a8}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Transfer domain data from dm_enom to itdp"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="[ODBC Source dm_enom_domainname].[SqlCommand]">"SELECT d.domainnameid, d.tld, d.renew, d.regperiod,  d.slddottld,  d.roid, d.authinfo,mds.itdp_id  AS itdp_status_id,
	d.creationdate AT time zone 'UTC'  as  creationdate1 ,
 	expdate AT time zone 'UTC'  as  expdate1, expdate AT time zone 'UTC'  as  expdate2 , 
 	CASE WHEN CAST(deldate AS date) &lt;'2022-01-15' THEN     (deldate  + interval '7 hour') AT time zone 'UTC'
    	 WHEN CAST(deldate AS date)&gt;='2022-01-15' THEN     (deldate  + interval '6 hour') AT time zone 'UTC'
    END     as deldate1,
    CASE WHEN CAST(transferindate AS date) &lt;'2022-01-15' THEN     (transferindate  + interval '7 hour') AT time zone 'UTC'
    	 WHEN CAST(transferindate AS date)&gt;='2022-01-15' THEN     (transferindate  + interval '6 hour') AT time zone 'UTC'
    END     as transferindate1,
 	COALESCE(d.uname,d.slddottld)::VARCHAR(300) AS uname1,
    '"+ @[$Package::Tenant] +"'::varchar(10) as dm_source
	

FROM dm_enom.domainname d
LEFT JOIN  dm_enom.map_domain_status_enom_itdp AS mds ON upper(d.registrationstatus) =upper(mds.enom_name)
LEFT JOIN itdp.domain_error_records der ON der.source_domain_id =d.domainnameid 
WHERE  itdp_domain_id IS NULL AND UPPER(registrationstatus)  in ('"+ @[$Project::ITDP_domain_statuses]  +"') 
 	AND d.tld='" + @[$Package::TLD]+"' 
AND der.source_domain_id IS NULL "</DTS:PropertyExpression>
              <DTS:ObjectData>
                <pipeline
                  autoAdjustBufferSize="true"
                  BLOBTempStoragePath="E:\SSIS_TEMP"
                  bufferTempStoragePath="E:\SSIS_TEMP"
                  defaultBufferMaxRows="300000"
                  version="1">
                  <components>
                    <component
                      refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain"
                      componentClassID="Microsoft.SSISODBCDst"
                      contactInfo="ODBC Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="ODBC Destination"
                      name="ODBC Destination itdp_domain"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The name of the table to be fetched."
                          expressionType="Notify"
                          name="TableName">"itdp"."domain"</property>
                        <property
                          dataType="System.Int32"
                          description="Specify the number of rows fetched per batch."
                          expressionType="Notify"
                          name="BatchSize">300000</property>
                        <property
                          dataType="System.Int32"
                          description="The number of rows inserted under the same transaction."
                          expressionType="Notify"
                          name="TransactionSize">300000</property>
                        <property
                          dataType="System.Int32"
                          description="Determines the chunk size allocation for LOB columns"
                          expressionType="Notify"
                          name="LobChunkSize">32768</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                          expressionType="Notify"
                          name="StatementTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="The code page to use when code page information is unavailable from the data source."
                          expressionType="Notify"
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Int32"
                          description="The method used for inserting data. Possible values are 'Batch' or 'Row by row'."
                          expressionType="Notify"
                          name="InsertMethod">1</property>
                        <property
                          dataType="System.Int32"
                          description="The ODBC C data type for binding numeric data."
                          expressionType="Notify"
                          name="BindNumericAs">0</property>
                        <property
                          dataType="System.Int32"
                          description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                          expressionType="Notify"
                          name="BindCharColumnsAs">0</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Connections[ODBCConnection]"
                          connectionManagerID="Package.ConnectionManagers[tdpdb]"
                          connectionManagerRefId="Package.ConnectionManagers[tdpdb]"
                          description="The ODBC runtime connection used to access the database."
                          name="ODBCConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="ODBC Destination Input"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].Columns[roid]"
                              cachedDataType="wstr"
                              cachedLength="89"
                              cachedName="roid"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[roid]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[roid]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].Columns[authinfo]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="authinfo"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[auth_info]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[authinfo]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].Columns[renew]"
                              cachedDataType="wstr"
                              cachedLength="5"
                              cachedName="renew"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[auto_renew]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[renew]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].Columns[domainnameid]"
                              cachedDataType="i4"
                              cachedName="domainnameid"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[source_domain_id]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[domainnameid]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].Columns[itdp_status_id]"
                              cachedDataType="guid"
                              cachedName="itdp_status_id"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[status_id]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[itdp_status_id]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].Columns[tld]"
                              cachedDataType="wstr"
                              cachedLength="15"
                              cachedName="tld"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[tld]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].Columns[regperiod]"
                              cachedDataType="i2"
                              cachedName="regperiod"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[registration_period]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[regperiod]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].Columns[deldate1]"
                              cachedDataType="dbTimeStamp2"
                              cachedName="deldate1"
                              cachedScale="6"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[deleted_date]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[deldate1]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].Columns[transferindate1]"
                              cachedDataType="dbTimeStamp2"
                              cachedName="transferindate1"
                              cachedScale="6"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[ry_transfered_date]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[transferindate1]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].Columns[slddottld]"
                              cachedDataType="wstr"
                              cachedLength="272"
                              cachedName="slddottld"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[name]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[slddottld]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].Columns[uname1]"
                              cachedDataType="wstr"
                              cachedLength="300"
                              cachedName="uname1"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[uname]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[uname1]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].Columns[dm_source]"
                              cachedDataType="wstr"
                              cachedLength="10"
                              cachedName="dm_source"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[dm_source]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[dm_source]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].Columns[expdate1]"
                              cachedDataType="dbTimeStamp2"
                              cachedName="expdate1"
                              cachedScale="6"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[expiry_date]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[expdate1]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].Columns[expdate2]"
                              cachedDataType="dbTimeStamp2"
                              cachedName="expdate2"
                              cachedScale="6"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[ry_expiry_date]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[expdate2]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].Columns[creationdate1]"
                              cachedDataType="dbTimeStamp2"
                              cachedName="creationdate1"
                              cachedScale="6"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[ry_created_date]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[creationdate1]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[id]"
                              dataType="guid"
                              name="id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[tenant_customer_id]"
                              dataType="guid"
                              name="tenant_customer_id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[accreditation_tld_id]"
                              dataType="guid"
                              name="accreditation_tld_id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[name]"
                              dataType="nText"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[auth_info]"
                              dataType="nText"
                              name="auth_info" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[roid]"
                              dataType="nText"
                              name="roid" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[ry_created_date]"
                              dataType="dbTimeStamp2"
                              name="ry_created_date"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[ry_expiry_date]"
                              dataType="dbTimeStamp2"
                              name="ry_expiry_date"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[ry_updated_date]"
                              dataType="dbTimeStamp2"
                              name="ry_updated_date"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[ry_transfered_date]"
                              dataType="dbTimeStamp2"
                              name="ry_transfered_date"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[deleted_date]"
                              dataType="dbTimeStamp2"
                              name="deleted_date"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[expiry_date]"
                              dataType="dbTimeStamp2"
                              name="expiry_date"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[status_id]"
                              dataType="guid"
                              name="status_id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[auto_renew]"
                              codePage="1252"
                              dataType="str"
                              length="5"
                              name="auto_renew" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[source_domain_id]"
                              dataType="i4"
                              name="source_domain_id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                              dataType="wstr"
                              length="15"
                              name="tld" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[registration_period]"
                              dataType="i4"
                              name="registration_period" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[dm_status]"
                              dataType="wstr"
                              length="255"
                              name="dm_status" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[secdns_max_sig_life]"
                              dataType="i4"
                              name="secdns_max_sig_life" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[tdp_min_namesrvers_issue]"
                              codePage="1252"
                              dataType="str"
                              length="5"
                              name="tdp_min_namesrvers_issue" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[uname]"
                              dataType="nText"
                              name="uname" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[language]"
                              dataType="nText"
                              name="language" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input].ExternalColumns[dm_source]"
                              dataType="wstr"
                              length="15"
                              name="dm_source" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Outputs[ODBC Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="ODBC Destination Error Output"
                          synchronousInputId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain"
                      componentClassID="Microsoft.SSISODBCDst"
                      contactInfo="ODBC Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="ODBC Destination"
                      name="ODBC Destination itdp_error_domain"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The name of the table to be fetched."
                          expressionType="Notify"
                          name="TableName">"itdp"."domain_error_records"</property>
                        <property
                          dataType="System.Int32"
                          description="Specify the number of rows fetched per batch."
                          expressionType="Notify"
                          name="BatchSize">300000</property>
                        <property
                          dataType="System.Int32"
                          description="The number of rows inserted under the same transaction."
                          expressionType="Notify"
                          name="TransactionSize">300000</property>
                        <property
                          dataType="System.Int32"
                          description="Determines the chunk size allocation for LOB columns"
                          expressionType="Notify"
                          name="LobChunkSize">32768</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                          expressionType="Notify"
                          name="StatementTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="The code page to use when code page information is unavailable from the data source."
                          expressionType="Notify"
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Int32"
                          description="The method used for inserting data. Possible values are 'Batch' or 'Row by row'."
                          expressionType="Notify"
                          name="InsertMethod">1</property>
                        <property
                          dataType="System.Int32"
                          description="The ODBC C data type for binding numeric data."
                          expressionType="Notify"
                          name="BindNumericAs">0</property>
                        <property
                          dataType="System.Int32"
                          description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                          expressionType="Notify"
                          name="BindCharColumnsAs">0</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Connections[ODBCConnection]"
                          connectionManagerID="Package.ConnectionManagers[tdpdb]"
                          connectionManagerRefId="Package.ConnectionManagers[tdpdb]"
                          description="The ODBC runtime connection used to access the database."
                          name="ODBCConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="ODBC Destination Input"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].Columns[domainnameid]"
                              cachedDataType="i4"
                              cachedName="domainnameid"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[source_domain_id]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[domainnameid]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].Columns[roid]"
                              cachedDataType="wstr"
                              cachedLength="89"
                              cachedName="roid"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[roid]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[roid]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].Columns[renew]"
                              cachedDataType="wstr"
                              cachedLength="5"
                              cachedName="renew"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[auto_renew]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[renew]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].Columns[authinfo]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="authinfo"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[auth_info]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[authinfo]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].Columns[itdp_status_id]"
                              cachedDataType="guid"
                              cachedName="itdp_status_id"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[status_id]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[itdp_status_id]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].Columns[tld]"
                              cachedDataType="wstr"
                              cachedLength="15"
                              cachedName="tld"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[tld]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].Columns[ErrorCode]"
                              cachedDataType="i4"
                              cachedName="ErrorCode"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[errorcode]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Outputs[ODBC Destination Error Output].Columns[ErrorCode]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].Columns[ErrorColumn]"
                              cachedDataType="i4"
                              cachedName="ErrorColumn"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[errorcolumn]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].Columns[regperiod]"
                              cachedDataType="i2"
                              cachedName="regperiod"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[registration_period]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[regperiod]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].Columns[deldate1]"
                              cachedDataType="dbTimeStamp2"
                              cachedName="deldate1"
                              cachedScale="6"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[deleted_date]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[deldate1]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].Columns[transferindate1]"
                              cachedDataType="dbTimeStamp2"
                              cachedName="transferindate1"
                              cachedScale="6"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[ry_transfered_date]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[transferindate1]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].Columns[slddottld]"
                              cachedDataType="wstr"
                              cachedLength="272"
                              cachedName="slddottld"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[name]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[slddottld]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].Columns[dm_source]"
                              cachedDataType="wstr"
                              cachedLength="10"
                              cachedName="dm_source"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[dm_source]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[dm_source]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].Columns[expdate2]"
                              cachedDataType="dbTimeStamp2"
                              cachedName="expdate2"
                              cachedScale="6"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[expiry_date]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[expdate2]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].Columns[expdate1]"
                              cachedDataType="dbTimeStamp2"
                              cachedName="expdate1"
                              cachedScale="6"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[ry_expiry_date]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[expdate1]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].Columns[creationdate1]"
                              cachedDataType="dbTimeStamp2"
                              cachedName="creationdate1"
                              cachedScale="6"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[ry_created_date]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[creationdate1]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[source_domain_id]"
                              dataType="i4"
                              name="source_domain_id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[id]"
                              dataType="guid"
                              name="id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[tenant_customer_id]"
                              dataType="guid"
                              name="tenant_customer_id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[accreditation_tld_id]"
                              dataType="guid"
                              name="accreditation_tld_id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[name]"
                              dataType="nText"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[auth_info]"
                              dataType="nText"
                              name="auth_info" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[roid]"
                              dataType="nText"
                              name="roid" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[ry_created_date]"
                              dataType="dbTimeStamp2"
                              name="ry_created_date"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[ry_expiry_date]"
                              dataType="dbTimeStamp2"
                              name="ry_expiry_date"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[ry_updated_date]"
                              dataType="dbTimeStamp2"
                              name="ry_updated_date"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[ry_transfered_date]"
                              dataType="dbTimeStamp2"
                              name="ry_transfered_date"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[deleted_date]"
                              dataType="dbTimeStamp2"
                              name="deleted_date"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[expiry_date]"
                              dataType="dbTimeStamp2"
                              name="expiry_date"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[status_id]"
                              dataType="guid"
                              name="status_id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[auto_renew]"
                              codePage="1252"
                              dataType="str"
                              length="5"
                              name="auto_renew" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                              dataType="wstr"
                              length="15"
                              name="tld" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[errorcode]"
                              dataType="i4"
                              name="errorcode" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[errorcolumn]"
                              dataType="i4"
                              name="errorcolumn" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[errordescription]"
                              dataType="nText"
                              name="errordescription" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[registration_period]"
                              dataType="i4"
                              name="registration_period" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input].ExternalColumns[dm_source]"
                              dataType="wstr"
                              length="10"
                              name="dm_source" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Outputs[ODBC Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="ODBC Destination Error Output"
                          synchronousInputId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname"
                      componentClassID="Microsoft.SSISODBCSrc"
                      contactInfo="ODBC Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="ODBC Source"
                      name="ODBC Source dm_enom_domainname"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The name of the table to be fetched."
                          expressionType="Notify"
                          name="TableName"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT d.domainnameid, d.tld, d.renew, d.regperiod,  d.slddottld,  d.roid, d.authinfo,mds.itdp_id  AS itdp_status_id,
	d.creationdate AT time zone 'UTC'  as  creationdate1 ,
 	expdate AT time zone 'UTC'  as  expdate1, expdate AT time zone 'UTC'  as  expdate2 , 
 	CASE WHEN CAST(deldate AS date) &lt;'2022-01-15' THEN     (deldate  + interval '7 hour') AT time zone 'UTC'
    	 WHEN CAST(deldate AS date)&gt;='2022-01-15' THEN     (deldate  + interval '6 hour') AT time zone 'UTC'
    END     as deldate1,
    CASE WHEN CAST(transferindate AS date) &lt;'2022-01-15' THEN     (transferindate  + interval '7 hour') AT time zone 'UTC'
    	 WHEN CAST(transferindate AS date)&gt;='2022-01-15' THEN     (transferindate  + interval '6 hour') AT time zone 'UTC'
    END     as transferindate1,
 	COALESCE(d.uname,d.slddottld)::VARCHAR(300) AS uname1,
    'enom'::varchar(10) as dm_source
	

FROM dm_enom.domainname d
LEFT JOIN  dm_enom.map_domain_status_enom_itdp AS mds ON upper(d.registrationstatus) =upper(mds.enom_name)
LEFT JOIN itdp.domain_error_records der ON der.source_domain_id =d.domainnameid 
WHERE  itdp_domain_id IS NULL AND UPPER(registrationstatus)  in ('REGISTERED', 'EXPIRED', 'RGP', 'EXTENDED RGP', ' RGP DEACTIVATED', 'IMMINENT DELETE') 
 	AND d.tld='co.in' 
AND der.source_domain_id IS NULL </property>
                        <property
                          dataType="System.Int32"
                          description="Specify the number of rows fetched per batch."
                          expressionType="Notify"
                          name="BatchSize">300000</property>
                        <property
                          dataType="System.Int32"
                          description="Determines the chunk size allocation for LOB columns"
                          expressionType="Notify"
                          name="LobChunkSize">32768</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines how the component exposes CHAR columns. If False, CHAR columns are exposed as (multi-)byte strings (DT_STR), if True, CHAR columns are exposed as wide strings (DT_WSTR)"
                          expressionType="Notify"
                          name="ExposeCharColumnsAsUnicode">false</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                          expressionType="Notify"
                          name="StatementTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="The code page to use when code page information is unavailable from the data source."
                          expressionType="Notify"
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Int32"
                          description="The method used for fetching data."
                          expressionType="Notify"
                          name="FetchMethod">1</property>
                        <property
                          dataType="System.Int32"
                          description="The ODBC C data type for binding numeric data."
                          expressionType="Notify"
                          name="BindNumericAs">0</property>
                        <property
                          dataType="System.Int32"
                          description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                          expressionType="Notify"
                          name="BindCharColumnsAs">0</property>
                        <property
                          dataType="System.Int32"
                          description="The mode used to access the database."
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="AccessMode">1</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Connections[ODBCConnection]"
                          connectionManagerID="Package.ConnectionManagers[tdpdb]"
                          connectionManagerRefId="Package.ConnectionManagers[tdpdb]"
                          description="The ODBC runtime connection used to access the database."
                          name="ODBCConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output]"
                          errorRowDisposition="FailComponent"
                          name="ODBC Source Output"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[domainnameid]"
                              dataType="i4"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[domainnameid]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[domainnameid]"
                              name="domainnameid" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[tld]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[tld]"
                              length="15"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[tld]"
                              name="tld" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[renew]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[renew]"
                              length="5"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[renew]"
                              name="renew" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[roid]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[roid]"
                              length="89"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[roid]"
                              name="roid" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[authinfo]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[authinfo]"
                              length="255"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[authinfo]"
                              name="authinfo" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[itdp_status_id]"
                              dataType="guid"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[itdp_status_id]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[itdp_status_id]"
                              name="itdp_status_id" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[regperiod]"
                              dataType="i2"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[regperiod]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[regperiod]"
                              name="regperiod" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[deldate1]"
                              dataType="dbTimeStamp2"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[deldate1]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[deldate1]"
                              name="deldate1"
                              scale="6" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[transferindate1]"
                              dataType="dbTimeStamp2"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[transferindate1]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[transferindate1]"
                              name="transferindate1"
                              scale="6" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[slddottld]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[slddottld]"
                              length="272"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[slddottld]"
                              name="slddottld" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[uname1]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[uname1]"
                              length="300"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[uname1]"
                              name="uname1" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[creationdate1]"
                              dataType="dbTimeStamp2"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[creationdate1]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[creationdate1]"
                              name="creationdate1"
                              scale="6" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[expdate1]"
                              dataType="dbTimeStamp2"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[expdate1]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[expdate1]"
                              name="expdate1"
                              scale="6" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[expdate2]"
                              dataType="dbTimeStamp2"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[expdate2]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[expdate2]"
                              name="expdate2"
                              scale="6" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[dm_source]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[dm_source]"
                              length="10"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].Columns[dm_source]"
                              name="dm_source" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[domainnameid]"
                              dataType="i4"
                              name="domainnameid" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[tld]"
                              dataType="wstr"
                              length="15"
                              name="tld" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[renew]"
                              dataType="wstr"
                              length="5"
                              name="renew" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[regperiod]"
                              dataType="i2"
                              name="regperiod" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[roid]"
                              dataType="wstr"
                              length="89"
                              name="roid" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[authinfo]"
                              dataType="wstr"
                              length="255"
                              name="authinfo" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[itdp_status_id]"
                              dataType="guid"
                              name="itdp_status_id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[deldate1]"
                              dataType="dbTimeStamp2"
                              name="deldate1"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[transferindate1]"
                              dataType="dbTimeStamp2"
                              name="transferindate1"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[slddottld]"
                              dataType="wstr"
                              length="272"
                              name="slddottld" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[uname1]"
                              dataType="wstr"
                              length="300"
                              name="uname1" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[creationdate1]"
                              dataType="dbTimeStamp2"
                              name="creationdate1"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[expdate1]"
                              dataType="dbTimeStamp2"
                              name="expdate1"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[expdate2]"
                              dataType="dbTimeStamp2"
                              name="expdate2"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[dm_source]"
                              dataType="wstr"
                              length="10"
                              name="dm_source" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output]"
                          isErrorOut="true"
                          name="ODBC Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[domainnameid]"
                              dataType="i4"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[domainnameid]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[domainnameid]"
                              name="domainnameid" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[tld]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[tld]"
                              length="15"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[tld]"
                              name="tld" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[renew]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[renew]"
                              length="5"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[renew]"
                              name="renew" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[roid]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[roid]"
                              length="89"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[roid]"
                              name="roid" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[authinfo]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[authinfo]"
                              length="255"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[authinfo]"
                              name="authinfo" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[deldate1]"
                              dataType="dbTimeStamp2"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[deldate1]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[deldate1]"
                              name="deldate1"
                              scale="6" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[transferindate1]"
                              dataType="dbTimeStamp2"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[transferindate1]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[transferindate1]"
                              name="transferindate1"
                              scale="6" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[slddottld]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[slddottld]"
                              length="272"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[slddottld]"
                              name="slddottld" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[uname1]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[uname1]"
                              length="300"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[uname1]"
                              name="uname1" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[creationdate1]"
                              dataType="dbTimeStamp2"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[creationdate1]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[creationdate1]"
                              name="creationdate1"
                              scale="6" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[expdate1]"
                              dataType="dbTimeStamp2"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[expdate1]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[expdate1]"
                              name="expdate1"
                              scale="6" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[expdate2]"
                              dataType="dbTimeStamp2"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[expdate2]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[expdate2]"
                              name="expdate2"
                              scale="6" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[dm_source]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output].ExternalColumns[dm_source]"
                              length="10"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[dm_source]"
                              name="dm_source" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[itdp_status_id]"
                              dataType="guid"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[itdp_status_id]"
                              name="itdp_status_id" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[regperiod]"
                              dataType="i2"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Error Output].Columns[regperiod]"
                              name="regperiod" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp.Paths[ODBC Destination Error Output]"
                      endId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain.Inputs[ODBC Destination Input]"
                      name="ODBC Destination Error Output"
                      startId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Outputs[ODBC Destination Error Output]" />
                    <path
                      refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp.Paths[ODBC Source Output]"
                      endId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain.Inputs[ODBC Destination Input]"
                      name="ODBC Source Output"
                      startId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname.Outputs[ODBC Source Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domains with expdate null to domain_error"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{40B13CC1-B56B-4729-9B1F-D8ED49B9895A}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Transfer domains with expdate null to domain_error"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
INSERT INTO itdp.domain_error_records
(tld, source_domain_id, name, auth_info, roid, ry_created_date, ry_expiry_date,  expiry_date, 
 auto_renew, registration_period, status_id,  errordescription, dm_source)

SELECT d.tld, d.domainnameid,d.slddottld, d.authinfo, d.roid, d.creationdate , expdate,expdate,
CASE WHEN lower(d.renew)='yes' THEN TRUE ELSE FALSE END , d.regperiod, mds.itdp_id  AS itdp_status_id,'expiry_date IS NULL',
'"+ @[$Package::Tenant] +"' as  dm_source
FROM dm_enom.domainname d
LEFT JOIN  dm_enom.map_domain_status_enom_itdp AS mds ON d.registrationstatus = mds.enom_name
WHERE  itdp_domain_id IS NULL AND UPPER(registrationstatus)  in ('"+ @[$Project::ITDP_domain_statuses] +"') 
AND expdate IS NULL 
AND  tld='"+ @[$Package::TLD] +"';
COMMIT;
"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;INSERT INTO itdp.domain_error_records&#xA;(tld, source_domain_id, name, auth_info, roid, ry_created_date, ry_expiry_date,  expiry_date, &#xA; auto_renew, registration_period, status_id,  errordescription, dm_source)&#xA;&#xA;SELECT d.tld, d.domainnameid,d.slddottld, d.authinfo, d.roid, d.creationdate , expdate,expdate,&#xA;CASE WHEN lower(d.renew)='yes' THEN TRUE ELSE FALSE END , d.regperiod, mds.itdp_id  AS itdp_status_id,'expiry_date IS NULL',&#xA;'enom' as  dm_source&#xA;FROM dm_enom.domainname d&#xA;LEFT JOIN  dm_enom.map_domain_status_enom_itdp AS mds ON d.registrationstatus = mds.enom_name&#xA;WHERE  itdp_domain_id IS NULL AND UPPER(registrationstatus)  in ('REGISTERED', 'EXPIRED', 'RGP', 'EXTENDED RGP', ' RGP DEACTIVATED', 'IMMINENT DELETE') &#xA;AND expdate IS NULL &#xA;AND  tld='co.in';&#xA;COMMIT;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host  for domains migrated without errors to itdp"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{6BF5DF63-5A57-498C-A971-E75DBC6FCEFF}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Transfer host  for domains migrated without errors to itdp"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"
BEGIN;
ANALYSE itdp.domain;
INSERT INTO itdp.host
(tld, source_host_id, source_domain_id, itdp_domain_id, name, dm_source)
SELECT n.tld, n.idx, n.domainnameid, d.id AS itdp_domain_id1,n.name,'"+@[$Package::Tenant]+"' as  dm_source
FROM dm_enom.nameservers n
JOIN  itdp.domain d ON  d.source_domain_id = n.domainnameid and d.tld=n.tld and d.dm_source='"+ @[$Package::Tenant] +"'
WHERE  n.itdp_host_id  IS NULL AND  n.tld ='"+ @[$Package::TLD] +"' ;

ANALYSE itdp.host;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="&#xA;BEGIN;&#xA;ANALYSE itdp.domain;&#xA;INSERT INTO itdp.host&#xA;(tld, source_host_id, source_domain_id, itdp_domain_id, name, dm_source)&#xA;SELECT n.tld, n.idx, n.domainnameid, d.id AS itdp_domain_id1,n.name,'enom' as  dm_source&#xA;FROM dm_enom.nameservers n&#xA;JOIN  itdp.domain d ON  d.source_domain_id = n.domainnameid and d.tld=n.tld and d.dm_source='enom'&#xA;WHERE  n.itdp_host_id  IS NULL AND  n.tld ='co.in' ;&#xA;&#xA;ANALYSE itdp.host;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Transfer domain data"
              DTS:Disabled="True"
              DTS:DTSID="{ac4e9776-a8b8-47a9-9133-12c64725c930}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Transfer host for domains migrated without errors to itdp"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="[ODBC Source dm_enom_nameservers].[SqlCommand]">"SELECT d.tld::VARCHAR(15) AS TLD1, n.*,d.id AS itdp_domain_id1 FROM dm_enom.nameservers n
JOIN  itdp.domain d ON d.source_domain_id = n.domainnameid 
WHERE  n.itdp_host_id  IS NULL AND  d.tld ='" + @[$Package::TLD]+"'"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host"
                      componentClassID="Microsoft.SSISODBCDst"
                      contactInfo="ODBC Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="ODBC Destination"
                      name="ODBC Destination itdp_error_host"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The name of the table to be fetched."
                          expressionType="Notify"
                          name="TableName">"itdp"."host_error_records"</property>
                        <property
                          dataType="System.Int32"
                          description="Specify the number of rows fetched per batch."
                          expressionType="Notify"
                          name="BatchSize">1000</property>
                        <property
                          dataType="System.Int32"
                          description="The number of rows inserted under the same transaction."
                          expressionType="Notify"
                          name="TransactionSize">1000</property>
                        <property
                          dataType="System.Int32"
                          description="Determines the chunk size allocation for LOB columns"
                          expressionType="Notify"
                          name="LobChunkSize">32768</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                          expressionType="Notify"
                          name="StatementTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="The code page to use when code page information is unavailable from the data source."
                          expressionType="Notify"
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Int32"
                          description="The method used for inserting data. Possible values are 'Batch' or 'Row by row'."
                          expressionType="Notify"
                          name="InsertMethod">0</property>
                        <property
                          dataType="System.Int32"
                          description="The ODBC C data type for binding numeric data."
                          expressionType="Notify"
                          name="BindNumericAs">0</property>
                        <property
                          dataType="System.Int32"
                          description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                          expressionType="Notify"
                          name="BindCharColumnsAs">0</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Connections[ODBCConnection]"
                          connectionManagerID="Package.ConnectionManagers[tdpdb]"
                          connectionManagerRefId="Package.ConnectionManagers[tdpdb]"
                          description="The ODBC runtime connection used to access the database."
                          name="ODBCConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="ODBC Destination Input"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].Columns[domainnameid]"
                              cachedDataType="i4"
                              cachedName="domainnameid"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].ExternalColumns[source_domain_id]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].Columns[domainnameid]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].Columns[ErrorCode]"
                              cachedDataType="i4"
                              cachedName="ErrorCode"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].ExternalColumns[errorcode]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Outputs[ODBC Destination Error Output].Columns[ErrorCode]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].Columns[ErrorColumn]"
                              cachedDataType="i4"
                              cachedName="ErrorColumn"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].ExternalColumns[errorcolumn]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].Columns[name]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="name"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].ExternalColumns[name]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].Columns[name]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].Columns[itdp_domain_id1]"
                              cachedDataType="guid"
                              cachedName="itdp_domain_id1"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].ExternalColumns[itdp_domain_id]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].Columns[itdp_domain_id1]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].Columns[tld1]"
                              cachedDataType="wstr"
                              cachedLength="15"
                              cachedName="tld1"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].Columns[tld1]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].ExternalColumns[source_host_id]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\287:invalid" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].ExternalColumns[source_domain_id]"
                              dataType="i4"
                              name="source_domain_id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].ExternalColumns[id]"
                              dataType="guid"
                              name="id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].ExternalColumns[tenant_customer_id]"
                              dataType="guid"
                              name="tenant_customer_id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].ExternalColumns[name]"
                              dataType="nText"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                              dataType="wstr"
                              length="15"
                              name="tld" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].ExternalColumns[errorcode]"
                              dataType="i4"
                              name="errorcode" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].ExternalColumns[errorcolumn]"
                              dataType="i4"
                              name="errorcolumn" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].ExternalColumns[source_host_id]"
                              dataType="i4"
                              name="source_host_id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].ExternalColumns[itdp_domain_id]"
                              dataType="guid"
                              name="itdp_domain_id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].ExternalColumns[domain_id]"
                              dataType="guid"
                              name="domain_id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input].ExternalColumns[errordescription]"
                              dataType="nText"
                              name="errordescription" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Outputs[ODBC Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="ODBC Destination Error Output"
                          synchronousInputId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host"
                      componentClassID="Microsoft.SSISODBCDst"
                      contactInfo="ODBC Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="ODBC Destination"
                      name="ODBC Destination itdp_host"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The name of the table to be fetched."
                          expressionType="Notify"
                          name="TableName">"itdp"."host"</property>
                        <property
                          dataType="System.Int32"
                          description="Specify the number of rows fetched per batch."
                          expressionType="Notify"
                          name="BatchSize">10000</property>
                        <property
                          dataType="System.Int32"
                          description="The number of rows inserted under the same transaction."
                          expressionType="Notify"
                          name="TransactionSize">1000</property>
                        <property
                          dataType="System.Int32"
                          description="Determines the chunk size allocation for LOB columns"
                          expressionType="Notify"
                          name="LobChunkSize">32768</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                          expressionType="Notify"
                          name="StatementTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="The code page to use when code page information is unavailable from the data source."
                          expressionType="Notify"
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Int32"
                          description="The method used for inserting data. Possible values are 'Batch' or 'Row by row'."
                          expressionType="Notify"
                          name="InsertMethod">0</property>
                        <property
                          dataType="System.Int32"
                          description="The ODBC C data type for binding numeric data."
                          expressionType="Notify"
                          name="BindNumericAs">0</property>
                        <property
                          dataType="System.Int32"
                          description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                          expressionType="Notify"
                          name="BindCharColumnsAs">0</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Connections[ODBCConnection]"
                          connectionManagerID="Package.ConnectionManagers[tdpdb]"
                          connectionManagerRefId="Package.ConnectionManagers[tdpdb]"
                          description="The ODBC runtime connection used to access the database."
                          name="ODBCConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Inputs[ODBC Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="RedirectRow"
                          hasSideEffects="true"
                          name="ODBC Destination Input"
                          truncationRowDisposition="RedirectRow">
                          <inputColumns>
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Inputs[ODBC Destination Input].Columns[domainnameid]"
                              cachedDataType="i4"
                              cachedName="domainnameid"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Inputs[ODBC Destination Input].ExternalColumns[source_domain_id]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].Columns[domainnameid]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Inputs[ODBC Destination Input].Columns[name]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="name"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Inputs[ODBC Destination Input].ExternalColumns[name]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].Columns[name]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Inputs[ODBC Destination Input].Columns[itdp_domain_id1]"
                              cachedDataType="guid"
                              cachedName="itdp_domain_id1"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Inputs[ODBC Destination Input].ExternalColumns[itdp_domain_id]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].Columns[itdp_domain_id1]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Inputs[ODBC Destination Input].Columns[tld1]"
                              cachedDataType="wstr"
                              cachedLength="15"
                              cachedName="tld1"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].Columns[tld1]" />
                            <inputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Inputs[ODBC Destination Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Inputs[ODBC Destination Input].ExternalColumns[source_host_id]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\287:invalid" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Inputs[ODBC Destination Input].ExternalColumns[id]"
                              dataType="guid"
                              name="id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Inputs[ODBC Destination Input].ExternalColumns[tenant_customer_id]"
                              dataType="guid"
                              name="tenant_customer_id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Inputs[ODBC Destination Input].ExternalColumns[name]"
                              dataType="nText"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Inputs[ODBC Destination Input].ExternalColumns[source_host_id]"
                              dataType="i4"
                              name="source_host_id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Inputs[ODBC Destination Input].ExternalColumns[domain_id]"
                              dataType="guid"
                              name="domain_id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                              dataType="wstr"
                              length="15"
                              name="tld" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Inputs[ODBC Destination Input].ExternalColumns[source_domain_id]"
                              dataType="i4"
                              name="source_domain_id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Inputs[ODBC Destination Input].ExternalColumns[itdp_domain_id]"
                              dataType="guid"
                              name="itdp_domain_id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Inputs[ODBC Destination Input].ExternalColumns[host_id_unique_name]"
                              dataType="guid"
                              name="host_id_unique_name" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Inputs[ODBC Destination Input].ExternalColumns[host_id_unique_name_tdp]"
                              dataType="guid"
                              name="host_id_unique_name_tdp" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Outputs[ODBC Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="ODBC Destination Error Output"
                          synchronousInputId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Inputs[ODBC Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers"
                      componentClassID="Microsoft.SSISODBCSrc"
                      contactInfo="ODBC Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="ODBC Source"
                      name="ODBC Source dm_enom_nameservers"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The name of the table to be fetched."
                          expressionType="Notify"
                          name="TableName"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT d.tld::VARCHAR(15) AS TLD1, n.*,d.id AS itdp_domain_id1 FROM dm_enom.nameservers n
JOIN  itdp.domain d ON d.source_domain_id = n.domainnameid 
WHERE  n.itdp_host_id  IS NULL AND  d.tld ='co.in'</property>
                        <property
                          dataType="System.Int32"
                          description="Specify the number of rows fetched per batch."
                          expressionType="Notify"
                          name="BatchSize">1000</property>
                        <property
                          dataType="System.Int32"
                          description="Determines the chunk size allocation for LOB columns"
                          expressionType="Notify"
                          name="LobChunkSize">32768</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines how the component exposes CHAR columns. If False, CHAR columns are exposed as (multi-)byte strings (DT_STR), if True, CHAR columns are exposed as wide strings (DT_WSTR)"
                          expressionType="Notify"
                          name="ExposeCharColumnsAsUnicode">false</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                          expressionType="Notify"
                          name="StatementTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="The code page to use when code page information is unavailable from the data source."
                          expressionType="Notify"
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Int32"
                          description="The method used for fetching data."
                          expressionType="Notify"
                          name="FetchMethod">1</property>
                        <property
                          dataType="System.Int32"
                          description="The ODBC C data type for binding numeric data."
                          expressionType="Notify"
                          name="BindNumericAs">0</property>
                        <property
                          dataType="System.Int32"
                          description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                          expressionType="Notify"
                          name="BindCharColumnsAs">0</property>
                        <property
                          dataType="System.Int32"
                          description="The mode used to access the database."
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="AccessMode">1</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Connections[ODBCConnection]"
                          connectionManagerID="Package.ConnectionManagers[tdpdb]"
                          connectionManagerRefId="Package.ConnectionManagers[tdpdb]"
                          description="The ODBC runtime connection used to access the database."
                          name="ODBCConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output]"
                          errorRowDisposition="FailComponent"
                          name="ODBC Source Output"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].Columns[domainnameid]"
                              dataType="i4"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].ExternalColumns[domainnameid]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].Columns[domainnameid]"
                              name="domainnameid" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].Columns[name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].ExternalColumns[name]"
                              length="255"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].Columns[name]"
                              name="name" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].Columns[itdp_domain_id1]"
                              dataType="guid"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].ExternalColumns[itdp_domain_id1]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].Columns[itdp_domain_id1]"
                              name="itdp_domain_id1" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].Columns[tld1]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].ExternalColumns[tld1]"
                              length="15"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].Columns[tld1]"
                              name="tld1" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].Columns[idx]"
                              dataType="i4"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].ExternalColumns[idx]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].Columns[idx]"
                              name="idx" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].Columns[tld]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].ExternalColumns[tld]"
                              length="15"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].Columns[tld]"
                              name="tld" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].ExternalColumns[itdp_domain_id]"
                              dataType="guid"
                              name="itdp_domain_id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].ExternalColumns[itdp_host_id]"
                              dataType="guid"
                              name="itdp_host_id" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].ExternalColumns[domainnameid]"
                              dataType="i4"
                              name="domainnameid" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].ExternalColumns[name]"
                              dataType="wstr"
                              length="255"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].ExternalColumns[ipaddress]"
                              dataType="wstr"
                              length="20"
                              name="ipaddress" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].ExternalColumns[inserteddate]"
                              dataType="dbTimeStamp2"
                              name="inserteddate"
                              scale="6" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].ExternalColumns[itdp_domain_id1]"
                              dataType="guid"
                              name="itdp_domain_id1" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].ExternalColumns[tld1]"
                              dataType="wstr"
                              length="15"
                              name="tld1" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].ExternalColumns[idx]"
                              dataType="i4"
                              name="idx" />
                            <externalMetadataColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].ExternalColumns[tld]"
                              dataType="wstr"
                              length="15"
                              name="tld" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Error Output]"
                          isErrorOut="true"
                          name="ODBC Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Error Output].Columns[domainnameid]"
                              dataType="i4"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].ExternalColumns[domainnameid]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Error Output].Columns[domainnameid]"
                              name="domainnameid" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Error Output].Columns[name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].ExternalColumns[name]"
                              length="255"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Error Output].Columns[name]"
                              name="name" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Error Output].Columns[itdp_domain_id1]"
                              dataType="guid"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].ExternalColumns[itdp_domain_id1]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Error Output].Columns[itdp_domain_id1]"
                              name="itdp_domain_id1" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Error Output].Columns[tld1]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].ExternalColumns[tld1]"
                              length="15"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Error Output].Columns[tld1]"
                              name="tld1" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Error Output].Columns[idx]"
                              dataType="i4"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].ExternalColumns[idx]"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Error Output].Columns[idx]"
                              name="idx" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Error Output].Columns[tld]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output].ExternalColumns[tld]"
                              length="15"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Error Output].Columns[tld]"
                              name="tld" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp.Paths[ODBC Destination Error Output]"
                      endId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host.Inputs[ODBC Destination Input]"
                      name="ODBC Destination Error Output"
                      startId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Outputs[ODBC Destination Error Output]" />
                    <path
                      refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp.Paths[ODBC Source Output]"
                      endId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host.Inputs[ODBC Destination Input]"
                      name="ODBC Source Output"
                      startId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers.Outputs[ODBC Source Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Truncate itdp_error_domain, error_host tables"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{d5eb178a-ab24-4abc-9536-05180deca9ad}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Truncate itdp_error_domain, error_host tables"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
 

	
	DELETE FROM itdp.domain_error_records WHERE TLD = '" + @[$Package::TLD] +"' AND dm_source = '"+ @[$Package::Tenant] +"';
	
	
DELETE FROM itdp.host_error_records WHERE TLD = '" + @[$Package::TLD] +"'  AND dm_source = '"+ @[$Package::Tenant] +"';
	
 


COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA; &#xA;&#xA;&#x9;&#xA;&#x9;DELETE FROM itdp.domain_error_records WHERE TLD = 'co.in' AND dm_source = 'enom';&#xA;&#x9;&#xA;&#x9;&#xA;DELETE FROM itdp.host_error_records WHERE TLD = 'co.in'  AND dm_source = 'enom';&#xA;&#x9;&#xA; &#xA;&#xA;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{EC206D3B-89B2-445E-A7F3-0129C5EB1D2D}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Truncate itdp_error_domain, error_host tables"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domains with expdate null to domain_error" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 10]"
              DTS:CreationName=""
              DTS:DTSID="{15A2C721-2C81-409A-9E3C-B2A6E753C6F7}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domains with expdate null to domain_error"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 10"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Create itdp_domain_itemp" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 11]"
              DTS:CreationName=""
              DTS:DTSID="{AE2CF8ED-5B96-41EE-AD98-F78AFE5A5C0B}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Populate itdp-domain"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 11"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Add host error for not migrated domains" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{F8A54669-BA2E-4987-998B-768A4CD2DD9A}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host  for domains migrated without errors to itdp"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Add DNS host to nameservers table" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{B0D9DD8C-E8D6-43DE-93BE-466F312421D9}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Add host error for not migrated domains"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host  for domains migrated without errors to itdp" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{644418D3-7D99-4E01-B8F6-6A3AC91045B2}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Move domains with number of  host &lt;min_nameservers to domain_error"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Move host with domain error to host error table" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{5E0E667A-4143-4895-85FB-5F65B536935A}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host  for domains migrated without errors to itdp"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Move domains with host error to domain_error" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 6]"
              DTS:CreationName=""
              DTS:DTSID="{0D30BEC4-0481-4479-9128-776450489B0A}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Move domains with host error to domain_error"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 6"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Move domains with number of  host &lt;min_nameservers to domain_error" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 7]"
              DTS:CreationName=""
              DTS:DTSID="{C80DBC3E-47E2-4CD8-8FD5-B2F4EDF0C1A3}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Add DNS host to nameservers table"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 7"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Move domains with number of  host &lt;min_nameservers to domain_error" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 8]"
              DTS:CreationName=""
              DTS:DTSID="{003163F6-3509-4B05-8A77-BFAF735FD160}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Create itdp_domain_itemp"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 8"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Populate itdp-domain" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 9]"
              DTS:CreationName=""
              DTS:DTSID="{FF8AD86A-E6A7-49D2-95DA-9BD8011B5B61}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Add DNS host to nameservers table"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 9"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Mark domain with min_nameservers problem" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{be7c55f0-cfe1-4f72-9c5e-de512bea50f2}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="02_2 contact">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Add contact_error for not migrated domains"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{A3F895B2-8BEB-4DF4-B457-D57B55637AC6}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Add contact_error for not migrated domains"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
	INSERT INTO itdp.contact_error_records (tld, source_contact_id, source_domain_id,  type_id,  email, phone, fax, country,  
		 tdp_data_source, errordescription,dm_source, is_private)
	SELECT distinct c.tld, c.id, c.domainnameid, (CASE WHEN c.organization IS NULL
		THEN public.tc_id_from_name('itdp.contact_type', 'individual') 
		ELSE public.tc_id_from_name('itdp.contact_type', 'organization') END )  AS tdp_contact_type, 
		LOWER(c.email_address) AS tdp_email, c.phone_number, c.fax_number,COALESCE(cn.alpha2,mcn.alpha2,'US') AS tdp_country,  
  	    'Enom' AS tdp_data_source,  'domain was not migrated', '"+@[$Package::Tenant]+"' as  dm_source, c.is_private
	FROM  dm_enom.contact c
	JOIN  itdp.domain_error_records der   ON  der.source_domain_id = c.DomainNameID 
	LEFT JOIN itdp.contact_error_records cer   ON  cer.source_contact_id =c.id
	LEFT JOIN itdp.country cn ON cn.alpha2 = UPPER(c.country_code) 
	LEFT JOIN dm_enom.map_country_enom_itdp mcn ON mcn.enom_alpha2  = UPPER(c.country_code) 
	WHERE cer.id IS NULL AND   c.tld  = '"+ @[$Package::TLD] +"';
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;&#x9;INSERT INTO itdp.contact_error_records (tld, source_contact_id, source_domain_id,  type_id,  email, phone, fax, country,  &#xA;&#x9;&#x9; tdp_data_source, errordescription,dm_source, is_private)&#xA;&#x9;SELECT distinct c.tld, c.id, c.domainnameid, (CASE WHEN c.organization IS NULL&#xA;&#x9;&#x9;THEN public.tc_id_from_name('itdp.contact_type', 'individual') &#xA;&#x9;&#x9;ELSE public.tc_id_from_name('itdp.contact_type', 'organization') END )  AS tdp_contact_type, &#xA;&#x9;&#x9;LOWER(c.email_address) AS tdp_email, c.phone_number, c.fax_number,COALESCE(cn.alpha2,mcn.alpha2,'US') AS tdp_country,  &#xA;  &#x9;    'Enom' AS tdp_data_source,  'domain was not migrated', 'enom' as  dm_source, c.is_private&#xA;&#x9;FROM  dm_enom.contact c&#xA;&#x9;JOIN  itdp.domain_error_records der   ON  der.source_domain_id = c.DomainNameID &#xA;&#x9;LEFT JOIN itdp.contact_error_records cer   ON  cer.source_contact_id =c.id&#xA;&#x9;LEFT JOIN itdp.country cn ON cn.alpha2 = UPPER(c.country_code) &#xA;&#x9;LEFT JOIN dm_enom.map_country_enom_itdp mcn ON mcn.enom_alpha2  = UPPER(c.country_code) &#xA;&#x9;WHERE cer.id IS NULL AND   c.tld  = 'co.in';&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Add contact_error for wrong email"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{CB4D67C4-063C-4FFD-B4B9-2E2798EA601D}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Add contact_error for wrong email"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN ;
INSERT INTO itdp.contact_error_records
(tld, source_contact_id, source_domain_id, itdp_domain_id,
type_id,  email, phone, fax, 
country,  tdp_contact_country_issue, tdp_data_source, errordescription,dm_source, is_private)

SELECT c.tld,c.id,c.domainnameid , d.id AS itdp_domain_id1, 
(CASE WHEN c.organization IS NULL
		THEN public.tc_id_from_name('itdp.contact_type', 'individual') 
		ELSE public.tc_id_from_name('itdp.contact_type', 'organization') END )::uuid AS TDP_contact_type,
		LOWER(c.email_address)::varchar(320) AS TDP_email,c.phone_number,  c.fax_number,   
	
	COALESCE(cn.alpha2,mcn.alpha2,'US')::varchar(2) AS TDP_country,	
	(CASE WHEN COALESCE(cn.alpha2,mcn.alpha2) IS NULL THEN  TRUE  ELSE FALSE  END)::boolean AS TDP_contact_country_issue ,
	'Enom' ::varchar(10) AS TDP_data_source, 	'Wrong email'	AS errordescription, '"+@[$Package::Tenant]+"' as  dm_source, c.is_private
   
FROM dm_enom.contact c
JOIN  itdp.domain d  ON d.source_domain_id = c.domainnameid AND d.TLD  = '"+ @[$Package::TLD] +"' AND d.dm_source='"+ @[$Package::Tenant] +"'
LEFT JOIN itdp.country cn ON cn.alpha2 = UPPER(c.country_code) 
LEFT JOIN dm_enom.map_country_enom_itdp mcn ON mcn.enom_alpha2  = UPPER(c.country_code)

WHERE  c.itdp_contact_id IS NULL and 
c.tld = '"+ @[$Package::TLD] +"' 
AND  ("+  @[$Project::Email_check]  + ")   ;
COMMIT;
"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN ;&#xA;INSERT INTO itdp.contact_error_records&#xA;(tld, source_contact_id, source_domain_id, itdp_domain_id,&#xA;type_id,  email, phone, fax, &#xA;country,  tdp_contact_country_issue, tdp_data_source, errordescription,dm_source, is_private)&#xA;&#xA;SELECT c.tld,c.id,c.domainnameid , d.id AS itdp_domain_id1, &#xA;(CASE WHEN c.organization IS NULL&#xA;&#x9;&#x9;THEN public.tc_id_from_name('itdp.contact_type', 'individual') &#xA;&#x9;&#x9;ELSE public.tc_id_from_name('itdp.contact_type', 'organization') END )::uuid AS TDP_contact_type,&#xA;&#x9;&#x9;LOWER(c.email_address)::varchar(320) AS TDP_email,c.phone_number,  c.fax_number,   &#xA;&#x9;&#xA;&#x9;COALESCE(cn.alpha2,mcn.alpha2,'US')::varchar(2) AS TDP_country,&#x9;&#xA;&#x9;(CASE WHEN COALESCE(cn.alpha2,mcn.alpha2) IS NULL THEN  TRUE  ELSE FALSE  END)::boolean AS TDP_contact_country_issue ,&#xA;&#x9;'Enom' ::varchar(10) AS TDP_data_source, &#x9;'Wrong email'&#x9;AS errordescription, 'enom' as  dm_source, c.is_private&#xA;   &#xA;FROM dm_enom.contact c&#xA;JOIN  itdp.domain d  ON d.source_domain_id = c.domainnameid AND d.TLD  = 'co.in' AND d.dm_source='enom'&#xA;LEFT JOIN itdp.country cn ON cn.alpha2 = UPPER(c.country_code) &#xA;LEFT JOIN dm_enom.map_country_enom_itdp mcn ON mcn.enom_alpha2  = UPPER(c.country_code)&#xA;&#xA;WHERE  c.itdp_contact_id IS NULL and &#xA;c.tld = 'co.in' &#xA;AND  (NOT( split_part(LOWER(c.email_address), '@', 1) ~ '^[-_a-z0-9.+^\$]{1,}$'  AND LENGTH(split_part(LOWER(c.email_address), '@', 1)) &lt;= 64     AND split_part(LOWER(c.email_address), '@', 2) ~ '^[a-z0-9][-a-z0-9]{0,62}(\.[a-z0-9][-a-z0-9]{0,62})+$'    AND LENGTH(split_part(LOWER(c.email_address), '@', 2)) &lt; 255     AND split_part(LOWER(c.email_address), '@', 3) = ''))   ;&#xA;COMMIT;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact"
              DTS:CreationName="STOCK:SEQUENCE"
              DTS:Description="Sequence Container"
              DTS:DTSID="{B5808DDD-4899-4BDF-8829-B2FEECF0D9CF}"
              DTS:ExecutableType="STOCK:SEQUENCE"
              DTS:LocaleID="-1"
              DTS:ObjectName="contact">
              <DTS:Variables />
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact\Create contact_itemp"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{298692b9-a57e-4298-9bd7-0b36bdd26526}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Create contact_itemp"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="0">
                  <DTS:Variables />
                  <DTS:PropertyExpression
                    DTS:Name="SqlStatementSource">"
DROP TABLE IF EXISTS itdp.contact_itemp;    

CREATE unlogged TABLE itdp.contact_itemp  AS 
(SELECT d.id AS itdp_domain_id1, c.domainnameid ,
	c.id,  c.first_name, c.last_name,  c.organization,
	c.address2, c.address3,  c.state, c.postal_code, c.phone_number,  c.fax_number,   c.tld,c.npd,
	COALESCE(c.city,'Unknown City')::varchar(120) AS TDP_city,
	COALESCE(c.address1,'Unknown Address1')::varchar(255) AS TDP_address1,
	COALESCE(cn.alpha2,mcn.alpha2,'US')::varchar(2) AS TDP_country,
	'Enom' ::varchar(10) AS TDP_data_source,
	(CASE WHEN ( is_null_or_ascii(c.first_name) AND is_null_or_ascii(c.last_name) AND is_null_or_ascii(c.organization)
		AND is_null_or_ascii(c.address1) AND is_null_or_ascii(c.address2) AND is_null_or_ascii(c.address3) AND is_null_or_ascii(c.city)
		AND is_null_or_ascii(c.postal_code) AND is_null_or_ascii(c.state) )
		THEN True ELSE False END)::boolean 
			AS TDP_is_international,
	(CASE WHEN COALESCE(cn.alpha2,mcn.alpha2) IS NULL THEN  TRUE  ELSE FALSE  END)::boolean AS TDP_contact_country_issue ,
	(CASE WHEN c.organization IS NULL
		THEN public.tc_id_from_name('itdp.contact_type', 'individual') 
		ELSE public.tc_id_from_name('itdp.contact_type', 'organization') END )::uuid AS TDP_contact_type,
	LOWER(c.email_address)::varchar(320) AS TDP_email,
    c.c_type , gen_random_uuid()::uuid AS contact_id, c.is_private

FROM dm_enom.contact c
JOIN  itdp.domain d  ON d.source_domain_id = c.domainnameid AND d.TLD  = '"+ @[$Package::TLD] +"' AND dm_source='"+ @[$Package::Tenant] +"'
LEFT JOIN itdp.contact_error_records cer ON cer.source_contact_id=c.id
LEFT JOIN itdp.country cn ON cn.alpha2 = UPPER(c.country_code) 
LEFT JOIN dm_enom.map_country_enom_itdp mcn ON mcn.enom_alpha2  = UPPER(c.country_code)
WHERE  c.itdp_contact_id IS NULL   AND cer.source_contact_id IS NULL 
AND c.tld = '"+ @[$Package::TLD] +"');"</DTS:PropertyExpression>
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                      SQLTask:SqlStatementSource="&#xA;DROP TABLE IF EXISTS itdp.contact_itemp;    &#xA;&#xA;CREATE unlogged TABLE itdp.contact_itemp  AS &#xA;(SELECT d.id AS itdp_domain_id1, c.domainnameid ,&#xA;&#x9;c.id,  c.first_name, c.last_name,  c.organization,&#xA;&#x9;c.address2, c.address3,  c.state, c.postal_code, c.phone_number,  c.fax_number,   c.tld,c.npd,&#xA;&#x9;COALESCE(c.city,'Unknown City')::varchar(120) AS TDP_city,&#xA;&#x9;COALESCE(c.address1,'Unknown Address1')::varchar(255) AS TDP_address1,&#xA;&#x9;COALESCE(cn.alpha2,mcn.alpha2,'US')::varchar(2) AS TDP_country,&#xA;&#x9;'Enom' ::varchar(10) AS TDP_data_source,&#xA;&#x9;(CASE WHEN ( is_null_or_ascii(c.first_name) AND is_null_or_ascii(c.last_name) AND is_null_or_ascii(c.organization)&#xA;&#x9;&#x9;AND is_null_or_ascii(c.address1) AND is_null_or_ascii(c.address2) AND is_null_or_ascii(c.address3) AND is_null_or_ascii(c.city)&#xA;&#x9;&#x9;AND is_null_or_ascii(c.postal_code) AND is_null_or_ascii(c.state) )&#xA;&#x9;&#x9;THEN True ELSE False END)::boolean &#xA;&#x9;&#x9;&#x9;AS TDP_is_international,&#xA;&#x9;(CASE WHEN COALESCE(cn.alpha2,mcn.alpha2) IS NULL THEN  TRUE  ELSE FALSE  END)::boolean AS TDP_contact_country_issue ,&#xA;&#x9;(CASE WHEN c.organization IS NULL&#xA;&#x9;&#x9;THEN public.tc_id_from_name('itdp.contact_type', 'individual') &#xA;&#x9;&#x9;ELSE public.tc_id_from_name('itdp.contact_type', 'organization') END )::uuid AS TDP_contact_type,&#xA;&#x9;LOWER(c.email_address)::varchar(320) AS TDP_email,&#xA;    c.c_type , gen_random_uuid()::uuid AS contact_id, c.is_private&#xA;&#xA;FROM dm_enom.contact c&#xA;JOIN  itdp.domain d  ON d.source_domain_id = c.domainnameid AND d.TLD  = 'co.in' AND dm_source='enom'&#xA;LEFT JOIN itdp.contact_error_records cer ON cer.source_contact_id=c.id&#xA;LEFT JOIN itdp.country cn ON cn.alpha2 = UPPER(c.country_code) &#xA;LEFT JOIN dm_enom.map_country_enom_itdp mcn ON mcn.enom_alpha2  = UPPER(c.country_code)&#xA;WHERE  c.itdp_contact_id IS NULL   AND cer.source_contact_id IS NULL &#xA;AND c.tld = 'co.in');" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact\Populate contact_postal"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{0606422E-C54D-4F59-ADFD-8E10F768DEC1}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Populate contact_postal"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="0">
                  <DTS:Variables />
                  <DTS:PropertyExpression
                    DTS:Name="SqlStatementSource">"
DO $$
 DECLARE    _sql text;  
BEGIN
SET work_mem TO '1900MB';

	IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
			DROP TABLE IF EXISTS itdp.temp_list_constraints;	
		--save list of CONSTRAINTS 
		CREATE TABLE itdp.temp_list_constraints
			AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname
			FROM pg_constraint
			INNER JOIN pg_class ON conrelid=pg_class.oid
			INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            
			WHERE relname = 'contact_postal_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"'  AND nspname='itdp' AND contype&lt;&gt;'p');
		 
		--DROP constraints
		SELECT string_agg('ALTER TABLE itdp.contact_postal_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"  DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint	
			INNER JOIN pg_class ON conrelid=pg_class.oid
			INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace 								
		 	WHERE relname = 'contact_postal_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"'  AND nspname='itdp' AND contype&lt;&gt;'p'  INTO _sql;
		IF _sql IS NOT NULL THEN                  
	        EXECUTE _sql;
	    END IF;   
   
	END IF;
	
	INSERT INTO itdp.contact_postal (tld, source_contact_id, contact_id, is_international,
	first_name, last_name, org_name, address1, address2, address3, city, postal_code, state,dm_source)
	
	SELECT  tld, id, contact_id, tdp_is_international,
		first_name, last_name, organization,tdp_address1,address2, address3,
		tdp_city,postal_code,state,'"+@[$Package::Tenant]+"' as  dm_source		
	FROM itdp.contact_itemp c;
	
	IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
		-- recreate constraints	 
     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN 
		 EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);
	 END IF;			
		
	END IF;
ANALYSE itdp.contact_postal;
COMMIT;  

END $$;"</DTS:PropertyExpression>
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                      SQLTask:SqlStatementSource="&#xA;DO $$&#xA; DECLARE    _sql text;  &#xA;BEGIN&#xA;SET work_mem TO '1900MB';&#xA;&#xA;&#x9;IF  'co.in' in ('com' ,'net') THEN&#xA;&#x9;&#x9;&#x9;DROP TABLE IF EXISTS itdp.temp_list_constraints;&#x9;&#xA;&#x9;&#x9;--save list of CONSTRAINTS &#xA;&#x9;&#x9;CREATE TABLE itdp.temp_list_constraints&#xA;&#x9;&#x9;&#x9;AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname&#xA;&#x9;&#x9;&#x9;FROM pg_constraint&#xA;&#x9;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            &#xA;&#x9;&#x9;&#x9;WHERE relname = 'contact_postal_enom_co.in'  AND nspname='itdp' AND contype&lt;&gt;'p');&#xA;&#x9;&#x9; &#xA;&#x9;&#x9;--DROP constraints&#xA;&#x9;&#x9;SELECT string_agg('ALTER TABLE itdp.contact_postal_enom_co.in  DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint&#x9;&#xA;&#x9;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9; &#x9;WHERE relname = 'contact_postal_enom_co.in'  AND nspname='itdp' AND contype&lt;&gt;'p'  INTO _sql;&#xA;&#x9;&#x9;IF _sql IS NOT NULL THEN                  &#xA;&#x9;        EXECUTE _sql;&#xA;&#x9;    END IF;   &#xA;   &#xA;&#x9;END IF;&#xA;&#x9;&#xA;&#x9;INSERT INTO itdp.contact_postal (tld, source_contact_id, contact_id, is_international,&#xA;&#x9;first_name, last_name, org_name, address1, address2, address3, city, postal_code, state,dm_source)&#xA;&#x9;&#xA;&#x9;SELECT  tld, id, contact_id, tdp_is_international,&#xA;&#x9;&#x9;first_name, last_name, organization,tdp_address1,address2, address3,&#xA;&#x9;&#x9;tdp_city,postal_code,state,'enom' as  dm_source&#x9;&#x9;&#xA;&#x9;FROM itdp.contact_itemp c;&#xA;&#x9;&#xA;&#x9;IF  'co.in' in ('com' ,'net') THEN&#xA;&#x9;&#x9;-- recreate constraints&#x9; &#xA;     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN &#xA;&#x9;&#x9; EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);&#xA;&#x9; END IF;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;END IF;&#xA;ANALYSE itdp.contact_postal;&#xA;COMMIT;  &#xA;&#xA;END $$;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact\Populate itdp_contact"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{2DF1D2FA-61E7-4FCB-86E8-B1599964425C}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Populate itdp_contact"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="0">
                  <DTS:Variables />
                  <DTS:PropertyExpression
                    DTS:Name="SqlStatementSource">"DO $$
  DECLARE    _sql text;  
BEGIN
SET work_mem TO '1900MB';

-- contact


IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	DROP TABLE IF EXISTS itdp.temp_list_constraints;
	DROP TABLE IF EXISTS itdp.temp_list_index;
	--save list of CONSTRAINTS 
	CREATE TABLE itdp.temp_list_constraints
		AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname
		FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            
		WHERE relname ='contact_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"' AND nspname='itdp' AND contype&lt;&gt;'p');          
		
	--save list of indexes		
	CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'itdp' AND TABLEname='contact_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"');
		
	--DROP constraints
	SELECT string_agg('ALTER TABLE itdp.contact_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+" DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint	
	 	INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            
		WHERE relname ='contact_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"' AND nspname='itdp' AND contype&lt;&gt;'p'    INTO _sql;
	IF _sql IS NOT NULL THEN                  
        EXECUTE _sql;
    END IF;   

    -- drop  indexes --   
	--I need to detach the partition, drop the indexnfor 1 partition, load into the partition, re-create the index and re-attach the partition.
    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')
		   FROM   pg_index  i   
		   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'
		   WHERE  i.indrelid = 'itdp.contact_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"'::regclass AND    d.objid IS NULL   INTO _sql;
	IF _sql IS NOT NULL THEN                  
    	    EXECUTE _sql;
    END IF;
END IF;

INSERT INTO itdp.contact (tld, source_contact_id, source_domain_id, id, itdp_domain_id, 
	type_id,  email, phone, fax, country,  tdp_contact_country_issue, tdp_data_source, 
	placeholder, domain_contact_type_name,dm_source, is_private)
	
	SELECT  tld, id, domainnameid, contact_id, itdp_domain_id1,
		tdp_contact_type, tdp_email, phone_number, fax_number, tdp_country, tdp_contact_country_issue, tdp_data_source,
		npd, c_type	, '"+@[$Package::Tenant]+"' as  dm_source, is_private
	FROM itdp.contact_itemp c;

IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	-- recreate constraints	 
     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN 
		 EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);
	 END IF;	
	--recreate indexes
 	IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN 
		EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);
	END IF;	
	
END IF;
ANALYSE itdp.contact;
COMMIT;
END $$;"</DTS:PropertyExpression>
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                      SQLTask:SqlStatementSource="DO $$&#xA;  DECLARE    _sql text;  &#xA;BEGIN&#xA;SET work_mem TO '1900MB';&#xA;&#xA;-- contact&#xA;&#xA;&#xA;IF  'co.in' in ('com' ,'net') THEN&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_constraints;&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_index;&#xA;&#x9;--save list of CONSTRAINTS &#xA;&#x9;CREATE TABLE itdp.temp_list_constraints&#xA;&#x9;&#x9;AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname&#xA;&#x9;&#x9;FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            &#xA;&#x9;&#x9;WHERE relname ='contact_enom_co.in' AND nspname='itdp' AND contype&lt;&gt;'p');          &#xA;&#x9;&#x9;&#xA;&#x9;--save list of indexes&#x9;&#x9;&#xA;&#x9;CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'itdp' AND TABLEname='contact_enom_co.in');&#xA;&#x9;&#x9;&#xA;&#x9;--DROP constraints&#xA;&#x9;SELECT string_agg('ALTER TABLE itdp.contact_enom_co.in DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint&#x9;&#xA;&#x9; &#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            &#xA;&#x9;&#x9;WHERE relname ='contact_enom_co.in' AND nspname='itdp' AND contype&lt;&gt;'p'    INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;        EXECUTE _sql;&#xA;    END IF;   &#xA;&#xA;    -- drop  indexes --   &#xA;&#x9;--I need to detach the partition, drop the indexnfor 1 partition, load into the partition, re-create the index and re-attach the partition.&#xA;    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')&#xA;&#x9;&#x9;   FROM   pg_index  i   &#xA;&#x9;&#x9;   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'&#xA;&#x9;&#x9;   WHERE  i.indrelid = 'itdp.contact_enom_co.in'::regclass AND    d.objid IS NULL   INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;    &#x9;    EXECUTE _sql;&#xA;    END IF;&#xA;END IF;&#xA;&#xA;INSERT INTO itdp.contact (tld, source_contact_id, source_domain_id, id, itdp_domain_id, &#xA;&#x9;type_id,  email, phone, fax, country,  tdp_contact_country_issue, tdp_data_source, &#xA;&#x9;placeholder, domain_contact_type_name,dm_source, is_private)&#xA;&#x9;&#xA;&#x9;SELECT  tld, id, domainnameid, contact_id, itdp_domain_id1,&#xA;&#x9;&#x9;tdp_contact_type, tdp_email, phone_number, fax_number, tdp_country, tdp_contact_country_issue, tdp_data_source,&#xA;&#x9;&#x9;npd, c_type&#x9;, 'enom' as  dm_source, is_private&#xA;&#x9;FROM itdp.contact_itemp c;&#xA;&#xA;IF  'co.in' in ('com' ,'net') THEN&#xA;&#x9;-- recreate constraints&#x9; &#xA;     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN &#xA;&#x9;&#x9; EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);&#xA;&#x9; END IF;&#x9;&#xA;&#x9;--recreate indexes&#xA; &#x9;IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN &#xA;&#x9;&#x9;EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);&#xA;&#x9;END IF;&#x9;&#xA;&#x9;&#xA;END IF;&#xA;ANALYSE itdp.contact;&#xA;COMMIT;&#xA;END $$;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
              <DTS:PrecedenceConstraints>
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact.PrecedenceConstraints[Constraint]"
                  DTS:CreationName=""
                  DTS:DTSID="{03041FF1-5F8F-4491-B01E-A8D465E38973}"
                  DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact\Create contact_itemp"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint"
                  DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact\Populate itdp_contact" />
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact.PrecedenceConstraints[Constraint 1]"
                  DTS:CreationName=""
                  DTS:DTSID="{CBBB4855-7D6B-4F99-B7FF-5F6CB1413E82}"
                  DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact\Populate itdp_contact"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint 1"
                  DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact\Populate contact_postal" />
              </DTS:PrecedenceConstraints>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow"
              DTS:CreationName="STOCK:SEQUENCE"
              DTS:Description="Sequence Container"
              DTS:Disabled="True"
              DTS:DTSID="{BBCCBACA-844F-4A20-9123-F029CD3F0D6F}"
              DTS:ExecutableType="STOCK:SEQUENCE"
              DTS:LocaleID="-1"
              DTS:ObjectName="contact_data flow">
              <DTS:Variables />
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\create contact_id constraint for conatct_postal"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{3994e868-c063-4bdf-9569-4686c6814ae1}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="create contact_id constraint for conatct_postal"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                      SQLTask:SqlStatementSource="ALTER TABLE itdp.contact_postal add CONSTRAINT contact_postal_contact_id_fkey FOREIGN KEY (contact_id) REFERENCES itdp.contact(id)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Drop contact_id constraint"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{F81C51CA-B188-4483-9CE0-8E4E5C391CD0}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Drop contact_id constraint"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                      SQLTask:SqlStatementSource="&#x9;ALTER TABLE itdp.contact_postal DROP CONSTRAINT contact_postal_contact_id_fkey;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Move contacts with bad contact_postal to  contact_error for TLD"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{5ad8ce2b-a258-451a-9387-3464ae92ab80}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Move contacts with bad contact_postal to  contact_error for TLD"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="1">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:FilterKind="0" />
                  <DTS:PropertyExpression
                    DTS:Name="SqlStatementSource">"BEGIN;
	INSERT INTO itdp.contact_error_records (tld, source_contact_id, source_domain_id, id, itdp_domain_id, type_id, title,
		 org_reg, org_vat, org_duns,  email, phone, fax, country, language, tdp_contact_country_issue,
		 tdp_data_source, errordescription)
	SELECT distinct c.tld, c.source_contact_id, c.source_domain_id, c.id, c.itdp_domain_id, c.type_id, c.title, c.org_reg,
		c.org_vat, c.org_duns, c.email, c.phone, c.fax, c.country, c.language, c.tdp_contact_country_issue,
  	    c.tdp_data_source,  'contact_postal_error' 
	FROM  itdp.contact c
	JOIN  itdp.contact_postal_error_records cp  ON  cp.source_contact_id = c.source_contact_id 
	WHERE c.tld =  '"+ @[$Package::TLD] +"';
-- delete from itdp.contact
	DELETE FROM itdp.contact c
	WHERE c.source_contact_id  IN (SELECT source_contact_id FROM itdp.contact_error_records   WHERE  tld  = '"+ @[$Package::TLD] +"')
	AND  c.tld = '"+ @[$Package::TLD] +"';
-- delete from itdp.contact_postal
	DELETE FROM itdp.contact_postal c
	WHERE c.source_contact_id   IN (SELECT source_contact_id FROM itdp.contact_error_records   WHERE  tld  = '"+ @[$Package::TLD] +"')
	AND  c.tld = '"+ @[$Package::TLD] +"';
COMMIT;"</DTS:PropertyExpression>
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                      SQLTask:SqlStatementSource="BEGIN;&#xA;&#x9;INSERT INTO itdp.contact_error_records (tld, source_contact_id, source_domain_id, id, itdp_domain_id, type_id, title,&#xA;&#x9;&#x9; org_reg, org_vat, org_duns,  email, phone, fax, country, language, tdp_contact_country_issue,&#xA;&#x9;&#x9; tdp_data_source, errordescription)&#xA;&#x9;SELECT distinct c.tld, c.source_contact_id, c.source_domain_id, c.id, c.itdp_domain_id, c.type_id, c.title, c.org_reg,&#xA;&#x9;&#x9;c.org_vat, c.org_duns, c.email, c.phone, c.fax, c.country, c.language, c.tdp_contact_country_issue,&#xA;  &#x9;    c.tdp_data_source,  'contact_postal_error' &#xA;&#x9;FROM  itdp.contact c&#xA;&#x9;JOIN  itdp.contact_postal_error_records cp  ON  cp.source_contact_id = c.source_contact_id &#xA;&#x9;WHERE c.tld =  'co.in';&#xA;-- delete from itdp.contact&#xA;&#x9;DELETE FROM itdp.contact c&#xA;&#x9;WHERE c.source_contact_id  IN (SELECT source_contact_id FROM itdp.contact_error_records   WHERE  tld  = 'co.in')&#xA;&#x9;AND  c.tld = 'co.in';&#xA;-- delete from itdp.contact_postal&#xA;&#x9;DELETE FROM itdp.contact_postal c&#xA;&#x9;WHERE c.source_contact_id   IN (SELECT source_contact_id FROM itdp.contact_error_records   WHERE  tld  = 'co.in')&#xA;&#x9;AND  c.tld = 'co.in';&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp"
                  DTS:CreationName="Microsoft.Pipeline"
                  DTS:Description="Data Flow Task"
                  DTS:DTSID="{9e99a384-b828-4266-ae76-723c175daf89}"
                  DTS:ExecutableType="Microsoft.Pipeline"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Transfer contact  to itdp"
                  DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:FilterKind="0" />
                  <DTS:PropertyExpression
                    DTS:Name="[ODBC contact_dm_enom].[SqlCommand]">"SELECT d.id AS itdp_domain_id1, c.domainnameid ,
	c.id,  c.first_name, c.last_name,  c.organization,
	c.address2, c.address3,  c.state, c.postal_code, c.phone_number,  c.fax_number,   c.tld,c.npd,
	COALESCE(c.city,'Unknown City')::varchar(120) AS TDP_city,
	COALESCE(c.address1,'Unknown Address1')::varchar(255) AS TDP_address1,
	COALESCE(cn.alpha2,mcn.alpha2,'US')::varchar(2) AS TDP_country,
	'Enom' ::varchar(10) AS TDP_data_source,
	(CASE WHEN ( is_null_or_ascii(c.first_name) AND is_null_or_ascii(c.last_name) AND is_null_or_ascii(c.organization)
		AND is_null_or_ascii(c.address1) AND is_null_or_ascii(c.address2) AND is_null_or_ascii(c.address3) AND is_null_or_ascii(c.city)
		AND is_null_or_ascii(c.postal_code) AND is_null_or_ascii(c.state) )
		THEN True ELSE False END)::boolean 
			AS TDP_is_international,
	(CASE WHEN COALESCE(cn.alpha2,mcn.alpha2) IS NULL THEN  TRUE  ELSE FALSE  END)::boolean AS TDP_contact_country_issue ,
	(CASE WHEN c.organization IS NULL
		THEN public.tc_id_from_name('itdp.contact_type', 'individual') 
		ELSE public.tc_id_from_name('itdp.contact_type', 'organization') END )::uuid AS TDP_contact_type,
	LOWER(c.email_address)::varchar(320) AS TDP_email,
    c.c_type , gen_random_uuid()::uuid AS contact_id

FROM dm_enom.contact c
JOIN  itdp.domain d  ON d.source_domain_id = c.domainnameid 
LEFT JOIN itdp.contact_error_records cer ON cer.source_contact_id=c.id
LEFT JOIN itdp.country cn ON cn.alpha2 = UPPER(c.country_code) 
LEFT JOIN dm_enom.map_country_enom_itdp mcn ON mcn.enom_alpha2  = UPPER(c.country_code)
WHERE  c.itdp_contact_id IS NULL   AND cer.source_contact_id IS NULL 
AND c.tld = '"+ @[$Package::TLD] +"';"</DTS:PropertyExpression>
                  <DTS:ObjectData>
                    <pipeline
                      autoAdjustBufferSize="true"
                      BLOBTempStoragePath="E:\SSIS_TEMP"
                      bufferTempStoragePath="E:\SSIS_TEMP"
                      defaultBufferMaxRows="500000"
                      version="1">
                      <components>
                        <component
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact"
                          componentClassID="Microsoft.SSISODBCDst"
                          contactInfo="ODBC Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                          description="ODBC Destination"
                          name="itdp_contact"
                          usesDispositions="true"
                          version="1">
                          <properties>
                            <property
                              dataType="System.String"
                              description="The name of the table to be fetched."
                              expressionType="Notify"
                              name="TableName">"itdp"."contact"</property>
                            <property
                              dataType="System.Int32"
                              description="Specify the number of rows fetched per batch."
                              expressionType="Notify"
                              name="BatchSize">500000</property>
                            <property
                              dataType="System.Int32"
                              description="The number of rows inserted under the same transaction."
                              expressionType="Notify"
                              name="TransactionSize">500000</property>
                            <property
                              dataType="System.Int32"
                              description="Determines the chunk size allocation for LOB columns"
                              expressionType="Notify"
                              name="LobChunkSize">32768</property>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                              expressionType="Notify"
                              name="StatementTimeout">0</property>
                            <property
                              dataType="System.Int32"
                              description="The code page to use when code page information is unavailable from the data source."
                              expressionType="Notify"
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Int32"
                              description="The method used for inserting data. Possible values are 'Batch' or 'Row by row'."
                              expressionType="Notify"
                              name="InsertMethod">0</property>
                            <property
                              dataType="System.Int32"
                              description="The ODBC C data type for binding numeric data."
                              expressionType="Notify"
                              name="BindNumericAs">0</property>
                            <property
                              dataType="System.Int32"
                              description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                              expressionType="Notify"
                              name="BindCharColumnsAs">0</property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Connections[ODBCConnection]"
                              connectionManagerID="Package.ConnectionManagers[tdpdb]"
                              connectionManagerRefId="Package.ConnectionManagers[tdpdb]"
                              description="The ODBC runtime connection used to access the database."
                              name="ODBCConnection" />
                          </connections>
                          <inputs>
                            <input
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input]"
                              errorOrTruncationOperation="Insert"
                              errorRowDisposition="RedirectRow"
                              hasSideEffects="true"
                              name="ODBC Destination Input"
                              truncationRowDisposition="RedirectRow">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].Columns[tdp_data_source]"
                                  cachedDataType="wstr"
                                  cachedLength="10"
                                  cachedName="tdp_data_source"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[tdp_data_source]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_data_source]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].Columns[tld]"
                                  cachedDataType="wstr"
                                  cachedLength="15"
                                  cachedName="tld"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tld]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].Columns[tdp_contact_country_issue]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="5"
                                  cachedName="tdp_contact_country_issue"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[tdp_contact_country_issue]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_contact_country_issue]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].Columns[tdp_country]"
                                  cachedDataType="wstr"
                                  cachedLength="2"
                                  cachedName="tdp_country"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[country]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_country]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].Columns[fax_number]"
                                  cachedDataType="wstr"
                                  cachedLength="31"
                                  cachedName="fax_number"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[fax]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[fax_number]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].Columns[phone_number]"
                                  cachedDataType="wstr"
                                  cachedLength="31"
                                  cachedName="phone_number"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[phone]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[phone_number]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].Columns[tdp_email]"
                                  cachedDataType="wstr"
                                  cachedLength="320"
                                  cachedName="tdp_email"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[email]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_email]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].Columns[tdp_contact_type]"
                                  cachedDataType="guid"
                                  cachedName="tdp_contact_type"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[type_id]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_contact_type]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].Columns[itdp_domain_id1]"
                                  cachedDataType="guid"
                                  cachedName="itdp_domain_id1"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[itdp_domain_id]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[itdp_domain_id1]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].Columns[id]"
                                  cachedDataType="guid"
                                  cachedName="id"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[source_contact_id]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[id]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].Columns[domainnameid]"
                                  cachedDataType="i4"
                                  cachedName="domainnameid"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[source_domain_id]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[domainnameid]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].Columns[npd]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="5"
                                  cachedName="npd"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[placeholder]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[npd]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].Columns[c_type]"
                                  cachedDataType="wstr"
                                  cachedLength="20"
                                  cachedName="c_type"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[domain_contact_type_name]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[c_type]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].Columns[contact_id]"
                                  cachedDataType="guid"
                                  cachedName="contact_id"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[id]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[contact_id]" />
                              </inputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                                  dataType="wstr"
                                  length="15"
                                  name="tld" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[source_contact_id]"
                                  dataType="guid"
                                  name="source_contact_id" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[source_domain_id]"
                                  dataType="i4"
                                  name="source_domain_id" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[id]"
                                  dataType="guid"
                                  name="id" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[itdp_domain_id]"
                                  dataType="guid"
                                  name="itdp_domain_id" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[type_id]"
                                  dataType="guid"
                                  name="type_id" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[title]"
                                  dataType="nText"
                                  name="title" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[org_reg]"
                                  dataType="nText"
                                  name="org_reg" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[org_vat]"
                                  dataType="nText"
                                  name="org_vat" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[org_duns]"
                                  dataType="nText"
                                  name="org_duns" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[tenant_customer_id]"
                                  dataType="guid"
                                  name="tenant_customer_id" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[email]"
                                  dataType="nText"
                                  name="email" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[phone]"
                                  dataType="nText"
                                  name="phone" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[fax]"
                                  dataType="nText"
                                  name="fax" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[country]"
                                  dataType="nText"
                                  name="country" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[language]"
                                  dataType="nText"
                                  name="language" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[tdp_contact_country_issue]"
                                  codePage="1252"
                                  dataType="str"
                                  length="5"
                                  name="tdp_contact_country_issue" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[tdp_data_source]"
                                  dataType="wstr"
                                  length="15"
                                  name="tdp_data_source" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[placeholder]"
                                  codePage="1252"
                                  dataType="str"
                                  length="5"
                                  name="placeholder" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input].ExternalColumns[domain_contact_type_name]"
                                  dataType="wstr"
                                  length="20"
                                  name="domain_contact_type_name" />
                              </externalMetadataColumns>
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Outputs[ODBC Destination Error Output]"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="ODBC Destination Error Output"
                              synchronousInputId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error"
                          componentClassID="Microsoft.SSISODBCDst"
                          contactInfo="ODBC Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                          description="ODBC Destination"
                          name="itdp_contact_error"
                          usesDispositions="true"
                          version="1">
                          <properties>
                            <property
                              dataType="System.String"
                              description="The name of the table to be fetched."
                              expressionType="Notify"
                              name="TableName">"itdp"."contact_error_records"</property>
                            <property
                              dataType="System.Int32"
                              description="Specify the number of rows fetched per batch."
                              expressionType="Notify"
                              name="BatchSize">500000</property>
                            <property
                              dataType="System.Int32"
                              description="The number of rows inserted under the same transaction."
                              expressionType="Notify"
                              name="TransactionSize">500000</property>
                            <property
                              dataType="System.Int32"
                              description="Determines the chunk size allocation for LOB columns"
                              expressionType="Notify"
                              name="LobChunkSize">32768</property>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                              expressionType="Notify"
                              name="StatementTimeout">0</property>
                            <property
                              dataType="System.Int32"
                              description="The code page to use when code page information is unavailable from the data source."
                              expressionType="Notify"
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Int32"
                              description="The method used for inserting data. Possible values are 'Batch' or 'Row by row'."
                              expressionType="Notify"
                              name="InsertMethod">1</property>
                            <property
                              dataType="System.Int32"
                              description="The ODBC C data type for binding numeric data."
                              expressionType="Notify"
                              name="BindNumericAs">0</property>
                            <property
                              dataType="System.Int32"
                              description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                              expressionType="Notify"
                              name="BindCharColumnsAs">0</property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Connections[ODBCConnection]"
                              connectionManagerID="Package.ConnectionManagers[tdpdb]"
                              connectionManagerRefId="Package.ConnectionManagers[tdpdb]"
                              description="The ODBC runtime connection used to access the database."
                              name="ODBCConnection" />
                          </connections>
                          <inputs>
                            <input
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input]"
                              errorOrTruncationOperation="Insert"
                              errorRowDisposition="FailComponent"
                              hasSideEffects="true"
                              name="ODBC Destination Input"
                              truncationRowDisposition="FailComponent">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].Columns[tdp_data_source]"
                                  cachedDataType="wstr"
                                  cachedLength="10"
                                  cachedName="tdp_data_source"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[tdp_data_source]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_data_source]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].Columns[tld]"
                                  cachedDataType="wstr"
                                  cachedLength="15"
                                  cachedName="tld"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tld]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].Columns[tdp_contact_country_issue]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="5"
                                  cachedName="tdp_contact_country_issue"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[tdp_contact_country_issue]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_contact_country_issue]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].Columns[tdp_country]"
                                  cachedDataType="wstr"
                                  cachedLength="2"
                                  cachedName="tdp_country"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[country]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_country]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].Columns[fax_number]"
                                  cachedDataType="wstr"
                                  cachedLength="31"
                                  cachedName="fax_number"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[fax]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[fax_number]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].Columns[phone_number]"
                                  cachedDataType="wstr"
                                  cachedLength="31"
                                  cachedName="phone_number"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[phone]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[phone_number]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].Columns[tdp_email]"
                                  cachedDataType="wstr"
                                  cachedLength="320"
                                  cachedName="tdp_email"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[email]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_email]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].Columns[tdp_contact_type]"
                                  cachedDataType="guid"
                                  cachedName="tdp_contact_type"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[type_id]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_contact_type]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].Columns[itdp_domain_id1]"
                                  cachedDataType="guid"
                                  cachedName="itdp_domain_id1"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[itdp_domain_id]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[itdp_domain_id1]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].Columns[id]"
                                  cachedDataType="guid"
                                  cachedName="id"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[source_contact_id]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[id]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].Columns[domainnameid]"
                                  cachedDataType="i4"
                                  cachedName="domainnameid"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[source_domain_id]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[domainnameid]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].Columns[contact_id]"
                                  cachedDataType="guid"
                                  cachedName="contact_id"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[id]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[contact_id]" />
                              </inputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                                  dataType="wstr"
                                  length="15"
                                  name="tld" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[source_contact_id]"
                                  dataType="guid"
                                  name="source_contact_id" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[source_domain_id]"
                                  dataType="i4"
                                  name="source_domain_id" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[id]"
                                  dataType="guid"
                                  name="id" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[itdp_domain_id]"
                                  dataType="guid"
                                  name="itdp_domain_id" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[type_id]"
                                  dataType="guid"
                                  name="type_id" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[title]"
                                  dataType="nText"
                                  name="title" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[org_reg]"
                                  dataType="nText"
                                  name="org_reg" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[org_vat]"
                                  dataType="nText"
                                  name="org_vat" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[org_duns]"
                                  dataType="nText"
                                  name="org_duns" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[tenant_customer_id]"
                                  dataType="guid"
                                  name="tenant_customer_id" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[email]"
                                  dataType="nText"
                                  name="email" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[phone]"
                                  dataType="nText"
                                  name="phone" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[fax]"
                                  dataType="nText"
                                  name="fax" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[country]"
                                  dataType="nText"
                                  name="country" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[language]"
                                  dataType="nText"
                                  name="language" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[tdp_contact_country_issue]"
                                  codePage="1252"
                                  dataType="str"
                                  length="5"
                                  name="tdp_contact_country_issue" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[tdp_data_source]"
                                  dataType="wstr"
                                  length="15"
                                  name="tdp_data_source" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[errorcode]"
                                  dataType="i4"
                                  name="errorcode" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[errorcolumn]"
                                  dataType="i4"
                                  name="errorcolumn" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input].ExternalColumns[errordescription]"
                                  dataType="nText"
                                  name="errordescription" />
                              </externalMetadataColumns>
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Outputs[ODBC Destination Error Output]"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="ODBC Destination Error Output"
                              synchronousInputId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal"
                          componentClassID="Microsoft.SSISODBCDst"
                          contactInfo="ODBC Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                          description="ODBC Destination"
                          name="itdp_contact_postal"
                          usesDispositions="true"
                          version="1">
                          <properties>
                            <property
                              dataType="System.String"
                              description="The name of the table to be fetched."
                              expressionType="Notify"
                              name="TableName">"itdp"."contact_postal"</property>
                            <property
                              dataType="System.Int32"
                              description="Specify the number of rows fetched per batch."
                              expressionType="Notify"
                              name="BatchSize">500000</property>
                            <property
                              dataType="System.Int32"
                              description="The number of rows inserted under the same transaction."
                              expressionType="Notify"
                              name="TransactionSize">500000</property>
                            <property
                              dataType="System.Int32"
                              description="Determines the chunk size allocation for LOB columns"
                              expressionType="Notify"
                              name="LobChunkSize">32768</property>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                              expressionType="Notify"
                              name="StatementTimeout">0</property>
                            <property
                              dataType="System.Int32"
                              description="The code page to use when code page information is unavailable from the data source."
                              expressionType="Notify"
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Int32"
                              description="The method used for inserting data. Possible values are 'Batch' or 'Row by row'."
                              expressionType="Notify"
                              name="InsertMethod">0</property>
                            <property
                              dataType="System.Int32"
                              description="The ODBC C data type for binding numeric data."
                              expressionType="Notify"
                              name="BindNumericAs">0</property>
                            <property
                              dataType="System.Int32"
                              description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                              expressionType="Notify"
                              name="BindCharColumnsAs">0</property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Connections[ODBCConnection]"
                              connectionManagerID="Package.ConnectionManagers[tdpdb]"
                              connectionManagerRefId="Package.ConnectionManagers[tdpdb]"
                              description="The ODBC runtime connection used to access the database."
                              name="ODBCConnection" />
                          </connections>
                          <inputs>
                            <input
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input]"
                              errorOrTruncationOperation="Insert"
                              errorRowDisposition="RedirectRow"
                              hasSideEffects="true"
                              name="ODBC Destination Input"
                              truncationRowDisposition="RedirectRow">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].Columns[first_name]"
                                  cachedDataType="wstr"
                                  cachedLength="200"
                                  cachedName="first_name"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[first_name]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[first_name]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].Columns[last_name]"
                                  cachedDataType="wstr"
                                  cachedLength="200"
                                  cachedName="last_name"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[last_name]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[last_name]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].Columns[address2]"
                                  cachedDataType="wstr"
                                  cachedLength="255"
                                  cachedName="address2"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[address2]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[address2]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].Columns[address3]"
                                  cachedDataType="wstr"
                                  cachedLength="255"
                                  cachedName="address3"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[address3]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[address3]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].Columns[postal_code]"
                                  cachedDataType="wstr"
                                  cachedLength="30"
                                  cachedName="postal_code"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[postal_code]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[postal_code]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].Columns[tld]"
                                  cachedDataType="wstr"
                                  cachedLength="15"
                                  cachedName="tld"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tld]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].Columns[organization]"
                                  cachedDataType="wstr"
                                  cachedLength="300"
                                  cachedName="organization"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[org_name]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[organization]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].Columns[state]"
                                  cachedDataType="wstr"
                                  cachedLength="120"
                                  cachedName="state"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[state]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[state]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].Columns[tdp_city]"
                                  cachedDataType="wstr"
                                  cachedLength="120"
                                  cachedName="tdp_city"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[city]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_city]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].Columns[id]"
                                  cachedDataType="guid"
                                  cachedName="id"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[source_contact_id]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[id]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].Columns[tdp_is_international]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="5"
                                  cachedName="tdp_is_international"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[is_international]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_is_international]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].Columns[tdp_address1]"
                                  cachedDataType="wstr"
                                  cachedLength="255"
                                  cachedName="tdp_address1"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[address1]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_address1]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].Columns[contact_id]"
                                  cachedDataType="guid"
                                  cachedName="contact_id"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[contact_id]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[contact_id]" />
                              </inputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                                  dataType="wstr"
                                  length="15"
                                  name="tld" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[id]"
                                  dataType="guid"
                                  name="id" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[contact_id]"
                                  dataType="guid"
                                  name="contact_id" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[source_contact_id]"
                                  dataType="guid"
                                  name="source_contact_id" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[is_international]"
                                  codePage="1252"
                                  dataType="str"
                                  length="5"
                                  name="is_international" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[first_name]"
                                  dataType="nText"
                                  name="first_name" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[last_name]"
                                  dataType="nText"
                                  name="last_name" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[org_name]"
                                  dataType="nText"
                                  name="org_name" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[address1]"
                                  dataType="nText"
                                  name="address1" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[address2]"
                                  dataType="nText"
                                  name="address2" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[address3]"
                                  dataType="nText"
                                  name="address3" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[city]"
                                  dataType="nText"
                                  name="city" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[postal_code]"
                                  dataType="nText"
                                  name="postal_code" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input].ExternalColumns[state]"
                                  dataType="nText"
                                  name="state" />
                              </externalMetadataColumns>
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Outputs[ODBC Destination Error Output]"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="ODBC Destination Error Output"
                              synchronousInputId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error"
                          componentClassID="Microsoft.SSISODBCDst"
                          contactInfo="ODBC Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                          description="ODBC Destination"
                          name="itdp_contact_postal_error"
                          usesDispositions="true"
                          version="1">
                          <properties>
                            <property
                              dataType="System.String"
                              description="The name of the table to be fetched."
                              expressionType="Notify"
                              name="TableName">"itdp"."contact_postal_error_records"</property>
                            <property
                              dataType="System.Int32"
                              description="Specify the number of rows fetched per batch."
                              expressionType="Notify"
                              name="BatchSize">500000</property>
                            <property
                              dataType="System.Int32"
                              description="The number of rows inserted under the same transaction."
                              expressionType="Notify"
                              name="TransactionSize">500000</property>
                            <property
                              dataType="System.Int32"
                              description="Determines the chunk size allocation for LOB columns"
                              expressionType="Notify"
                              name="LobChunkSize">32768</property>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                              expressionType="Notify"
                              name="StatementTimeout">0</property>
                            <property
                              dataType="System.Int32"
                              description="The code page to use when code page information is unavailable from the data source."
                              expressionType="Notify"
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Int32"
                              description="The method used for inserting data. Possible values are 'Batch' or 'Row by row'."
                              expressionType="Notify"
                              name="InsertMethod">1</property>
                            <property
                              dataType="System.Int32"
                              description="The ODBC C data type for binding numeric data."
                              expressionType="Notify"
                              name="BindNumericAs">0</property>
                            <property
                              dataType="System.Int32"
                              description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                              expressionType="Notify"
                              name="BindCharColumnsAs">0</property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Connections[ODBCConnection]"
                              connectionManagerID="Package.ConnectionManagers[tdpdb]"
                              connectionManagerRefId="Package.ConnectionManagers[tdpdb]"
                              description="The ODBC runtime connection used to access the database."
                              name="ODBCConnection" />
                          </connections>
                          <inputs>
                            <input
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input]"
                              errorOrTruncationOperation="Insert"
                              errorRowDisposition="FailComponent"
                              hasSideEffects="true"
                              name="ODBC Destination Input"
                              truncationRowDisposition="FailComponent">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].Columns[first_name]"
                                  cachedDataType="wstr"
                                  cachedLength="200"
                                  cachedName="first_name"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[first_name]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[first_name]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].Columns[last_name]"
                                  cachedDataType="wstr"
                                  cachedLength="200"
                                  cachedName="last_name"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[last_name]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[last_name]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].Columns[address2]"
                                  cachedDataType="wstr"
                                  cachedLength="255"
                                  cachedName="address2"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[address2]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[address2]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].Columns[address3]"
                                  cachedDataType="wstr"
                                  cachedLength="255"
                                  cachedName="address3"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[address3]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[address3]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].Columns[postal_code]"
                                  cachedDataType="wstr"
                                  cachedLength="30"
                                  cachedName="postal_code"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[postal_code]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[postal_code]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].Columns[tld]"
                                  cachedDataType="wstr"
                                  cachedLength="15"
                                  cachedName="tld"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tld]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].Columns[ErrorCode]"
                                  cachedDataType="i4"
                                  cachedName="ErrorCode"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[errorcode]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Outputs[ODBC Destination Error Output].Columns[ErrorCode]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].Columns[ErrorColumn]"
                                  cachedDataType="i4"
                                  cachedName="ErrorColumn"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[errorcolumn]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].Columns[organization]"
                                  cachedDataType="wstr"
                                  cachedLength="300"
                                  cachedName="organization"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[org_name]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[organization]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].Columns[state]"
                                  cachedDataType="wstr"
                                  cachedLength="120"
                                  cachedName="state"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[state]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[state]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].Columns[tdp_city]"
                                  cachedDataType="wstr"
                                  cachedLength="120"
                                  cachedName="tdp_city"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[city]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_city]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].Columns[id]"
                                  cachedDataType="guid"
                                  cachedName="id"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[source_contact_id]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[id]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].Columns[tdp_is_international]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="5"
                                  cachedName="tdp_is_international"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[is_international]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_is_international]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].Columns[tdp_address1]"
                                  cachedDataType="wstr"
                                  cachedLength="255"
                                  cachedName="tdp_address1"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[address1]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_address1]" />
                                <inputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].Columns[contact_id]"
                                  cachedDataType="guid"
                                  cachedName="contact_id"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[contact_id]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[contact_id]" />
                              </inputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[tld]"
                                  dataType="wstr"
                                  length="15"
                                  name="tld" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[id]"
                                  dataType="guid"
                                  name="id" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[contact_id]"
                                  dataType="guid"
                                  name="contact_id" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[source_contact_id]"
                                  dataType="guid"
                                  name="source_contact_id" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[is_international]"
                                  codePage="1252"
                                  dataType="str"
                                  length="5"
                                  name="is_international" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[first_name]"
                                  dataType="nText"
                                  name="first_name" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[last_name]"
                                  dataType="nText"
                                  name="last_name" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[org_name]"
                                  dataType="nText"
                                  name="org_name" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[address1]"
                                  dataType="nText"
                                  name="address1" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[address2]"
                                  dataType="nText"
                                  name="address2" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[address3]"
                                  dataType="nText"
                                  name="address3" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[city]"
                                  dataType="nText"
                                  name="city" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[postal_code]"
                                  dataType="nText"
                                  name="postal_code" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[state]"
                                  dataType="nText"
                                  name="state" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[errorcode]"
                                  dataType="i4"
                                  name="errorcode" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[errorcolumn]"
                                  dataType="i4"
                                  name="errorcolumn" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input].ExternalColumns[errordescription]"
                                  dataType="nText"
                                  name="errordescription" />
                              </externalMetadataColumns>
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Outputs[ODBC Destination Error Output]"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="ODBC Destination Error Output"
                              synchronousInputId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Outputs[ODBC Destination Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Outputs[ODBC Destination Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\Multicast"
                          componentClassID="Microsoft.Multicast"
                          contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                          description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                          name="Multicast">
                          <inputs>
                            <input
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\Multicast.Inputs[Multicast Input 1]"
                              name="Multicast Input 1">
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\Multicast.Outputs[Multicast Output 1]"
                              deleteOutputOnPathDetached="true"
                              name="Multicast Output 1"
                              synchronousInputId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\Multicast.Inputs[Multicast Input 1]">
                              <externalMetadataColumns />
                            </output>
                            <output
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\Multicast.Outputs[Multicast Output 3]"
                              deleteOutputOnPathDetached="true"
                              name="Multicast Output 3"
                              synchronousInputId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\Multicast.Inputs[Multicast Input 1]">
                              <externalMetadataColumns />
                            </output>
                            <output
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\Multicast.Outputs[Multicast Output 2]"
                              dangling="true"
                              deleteOutputOnPathDetached="true"
                              name="Multicast Output 2"
                              synchronousInputId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\Multicast.Inputs[Multicast Input 1]">
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom"
                          componentClassID="Microsoft.SSISODBCSrc"
                          contactInfo="ODBC Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                          description="ODBC Source"
                          name="ODBC contact_dm_enom"
                          usesDispositions="true"
                          version="1">
                          <properties>
                            <property
                              dataType="System.String"
                              description="The name of the table to be fetched."
                              expressionType="Notify"
                              name="TableName"></property>
                            <property
                              dataType="System.String"
                              description="The SQL command to be executed."
                              expressionType="Notify"
                              name="SqlCommand"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT d.id AS itdp_domain_id1, c.domainnameid ,
	c.id,  c.first_name, c.last_name,  c.organization,
	c.address2, c.address3,  c.state, c.postal_code, c.phone_number,  c.fax_number,   c.tld,c.npd,
	COALESCE(c.city,'Unknown City')::varchar(120) AS TDP_city,
	COALESCE(c.address1,'Unknown Address1')::varchar(255) AS TDP_address1,
	COALESCE(cn.alpha2,mcn.alpha2,'US')::varchar(2) AS TDP_country,
	'Enom' ::varchar(10) AS TDP_data_source,
	(CASE WHEN ( is_null_or_ascii(c.first_name) AND is_null_or_ascii(c.last_name) AND is_null_or_ascii(c.organization)
		AND is_null_or_ascii(c.address1) AND is_null_or_ascii(c.address2) AND is_null_or_ascii(c.address3) AND is_null_or_ascii(c.city)
		AND is_null_or_ascii(c.postal_code) AND is_null_or_ascii(c.state) )
		THEN True ELSE False END)::boolean 
			AS TDP_is_international,
	(CASE WHEN COALESCE(cn.alpha2,mcn.alpha2) IS NULL THEN  TRUE  ELSE FALSE  END)::boolean AS TDP_contact_country_issue ,
	(CASE WHEN c.organization IS NULL
		THEN public.tc_id_from_name('itdp.contact_type', 'individual') 
		ELSE public.tc_id_from_name('itdp.contact_type', 'organization') END )::uuid AS TDP_contact_type,
	LOWER(c.email_address)::varchar(320) AS TDP_email,
    c.c_type , gen_random_uuid()::uuid AS contact_id

FROM dm_enom.contact c
JOIN  itdp.domain d  ON d.source_domain_id = c.domainnameid 
LEFT JOIN itdp.contact_error_records cer ON cer.source_contact_id=c.id
LEFT JOIN itdp.country cn ON cn.alpha2 = UPPER(c.country_code) 
LEFT JOIN dm_enom.map_country_enom_itdp mcn ON mcn.enom_alpha2  = UPPER(c.country_code)
WHERE  c.itdp_contact_id IS NULL   AND cer.source_contact_id IS NULL 
AND c.tld = 'co.in';</property>
                            <property
                              dataType="System.Int32"
                              description="Specify the number of rows fetched per batch."
                              expressionType="Notify"
                              name="BatchSize">500000</property>
                            <property
                              dataType="System.Int32"
                              description="Determines the chunk size allocation for LOB columns"
                              expressionType="Notify"
                              name="LobChunkSize">32768</property>
                            <property
                              dataType="System.Boolean"
                              description="Determines how the component exposes CHAR columns. If False, CHAR columns are exposed as (multi-)byte strings (DT_STR), if True, CHAR columns are exposed as wide strings (DT_WSTR)"
                              expressionType="Notify"
                              name="ExposeCharColumnsAsUnicode">false</property>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                              expressionType="Notify"
                              name="StatementTimeout">0</property>
                            <property
                              dataType="System.Int32"
                              description="The code page to use when code page information is unavailable from the data source."
                              expressionType="Notify"
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Int32"
                              description="The method used for fetching data."
                              expressionType="Notify"
                              name="FetchMethod">1</property>
                            <property
                              dataType="System.Int32"
                              description="The ODBC C data type for binding numeric data."
                              expressionType="Notify"
                              name="BindNumericAs">0</property>
                            <property
                              dataType="System.Int32"
                              description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                              expressionType="Notify"
                              name="BindCharColumnsAs">0</property>
                            <property
                              dataType="System.Int32"
                              description="The mode used to access the database."
                              expressionType="Notify"
                              name="AccessMode"
                              typeConverter="AccessMode">1</property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Connections[ODBCConnection]"
                              connectionManagerID="Package.ConnectionManagers[tdpdb]"
                              connectionManagerRefId="Package.ConnectionManagers[tdpdb]"
                              description="The ODBC runtime connection used to access the database."
                              name="ODBCConnection" />
                          </connections>
                          <outputs>
                            <output
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output]"
                              errorRowDisposition="FailComponent"
                              name="ODBC Source Output"
                              truncationRowDisposition="FailComponent">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[id]"
                                  dataType="guid"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[id]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[id]"
                                  name="id" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[phone_number]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[phone_number]"
                                  length="31"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[phone_number]"
                                  name="phone_number" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[fax_number]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[fax_number]"
                                  length="31"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[fax_number]"
                                  name="fax_number" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_country]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_country]"
                                  length="2"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_country]"
                                  name="tdp_country" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_data_source]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_data_source]"
                                  length="10"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_data_source]"
                                  name="tdp_data_source" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_email]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_email]"
                                  length="320"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_email]"
                                  name="tdp_email" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tld]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tld]"
                                  length="15"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tld]"
                                  name="tld" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_contact_country_issue]"
                                  codePage="1252"
                                  dataType="str"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_contact_country_issue]"
                                  length="5"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_contact_country_issue]"
                                  name="tdp_contact_country_issue" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_contact_type]"
                                  dataType="guid"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_contact_type]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_contact_type]"
                                  name="tdp_contact_type" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[itdp_domain_id1]"
                                  dataType="guid"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[itdp_domain_id1]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[itdp_domain_id1]"
                                  name="itdp_domain_id1" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[first_name]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[first_name]"
                                  length="200"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[first_name]"
                                  name="first_name" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[last_name]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[last_name]"
                                  length="200"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[last_name]"
                                  name="last_name" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[organization]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[organization]"
                                  length="300"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[organization]"
                                  name="organization" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[address2]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[address2]"
                                  length="255"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[address2]"
                                  name="address2" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[address3]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[address3]"
                                  length="255"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[address3]"
                                  name="address3" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[state]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[state]"
                                  length="120"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[state]"
                                  name="state" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[postal_code]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[postal_code]"
                                  length="30"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[postal_code]"
                                  name="postal_code" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_city]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_city]"
                                  length="120"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_city]"
                                  name="tdp_city" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_is_international]"
                                  codePage="1252"
                                  dataType="str"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_is_international]"
                                  length="5"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_is_international]"
                                  name="tdp_is_international" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_address1]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_address1]"
                                  length="255"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[tdp_address1]"
                                  name="tdp_address1" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[domainnameid]"
                                  dataType="i4"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[domainnameid]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[domainnameid]"
                                  name="domainnameid" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[npd]"
                                  codePage="1252"
                                  dataType="str"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[npd]"
                                  length="5"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[npd]"
                                  name="npd" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[c_type]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[c_type]"
                                  length="20"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[c_type]"
                                  name="c_type" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[contact_id]"
                                  dataType="guid"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[contact_id]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].Columns[contact_id]"
                                  name="contact_id" />
                              </outputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[id]"
                                  dataType="guid"
                                  name="id" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[phone_number]"
                                  dataType="wstr"
                                  length="31"
                                  name="phone_number" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[fax_number]"
                                  dataType="wstr"
                                  length="31"
                                  name="fax_number" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_country]"
                                  dataType="wstr"
                                  length="2"
                                  name="tdp_country" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_data_source]"
                                  dataType="wstr"
                                  length="10"
                                  name="tdp_data_source" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_email]"
                                  dataType="wstr"
                                  length="320"
                                  name="tdp_email" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tld]"
                                  dataType="wstr"
                                  length="15"
                                  name="tld" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_contact_country_issue]"
                                  codePage="1252"
                                  dataType="str"
                                  length="5"
                                  name="tdp_contact_country_issue" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_contact_type]"
                                  dataType="guid"
                                  name="tdp_contact_type" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[itdp_domain_id1]"
                                  dataType="guid"
                                  name="itdp_domain_id1" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[first_name]"
                                  dataType="wstr"
                                  length="200"
                                  name="first_name" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[last_name]"
                                  dataType="wstr"
                                  length="200"
                                  name="last_name" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[organization]"
                                  dataType="wstr"
                                  length="300"
                                  name="organization" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[address2]"
                                  dataType="wstr"
                                  length="255"
                                  name="address2" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[address3]"
                                  dataType="wstr"
                                  length="255"
                                  name="address3" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[state]"
                                  dataType="wstr"
                                  length="120"
                                  name="state" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[postal_code]"
                                  dataType="wstr"
                                  length="30"
                                  name="postal_code" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_city]"
                                  dataType="wstr"
                                  length="120"
                                  name="tdp_city" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_is_international]"
                                  codePage="1252"
                                  dataType="str"
                                  length="5"
                                  name="tdp_is_international" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_address1]"
                                  dataType="wstr"
                                  length="255"
                                  name="tdp_address1" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[domainnameid]"
                                  dataType="i4"
                                  name="domainnameid" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[npd]"
                                  codePage="1252"
                                  dataType="str"
                                  length="5"
                                  name="npd" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[c_type]"
                                  dataType="wstr"
                                  length="20"
                                  name="c_type" />
                                <externalMetadataColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[contact_id]"
                                  dataType="guid"
                                  name="contact_id" />
                              </externalMetadataColumns>
                            </output>
                            <output
                              refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output]"
                              isErrorOut="true"
                              name="ODBC Source Error Output">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[id]"
                                  dataType="guid"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[id]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[id]"
                                  name="id" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[phone_number]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[phone_number]"
                                  length="31"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[phone_number]"
                                  name="phone_number" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[fax_number]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[fax_number]"
                                  length="31"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[fax_number]"
                                  name="fax_number" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[tdp_country]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_country]"
                                  length="2"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[tdp_country]"
                                  name="tdp_country" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[tdp_data_source]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_data_source]"
                                  length="10"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[tdp_data_source]"
                                  name="tdp_data_source" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[tdp_email]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_email]"
                                  length="320"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[tdp_email]"
                                  name="tdp_email" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[tld]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tld]"
                                  length="15"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[tld]"
                                  name="tld" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[tdp_contact_country_issue]"
                                  codePage="1252"
                                  dataType="str"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_contact_country_issue]"
                                  length="5"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[tdp_contact_country_issue]"
                                  name="tdp_contact_country_issue" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[tdp_contact_type]"
                                  dataType="guid"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_contact_type]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[tdp_contact_type]"
                                  name="tdp_contact_type" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[itdp_domain_id1]"
                                  dataType="guid"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[itdp_domain_id1]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[itdp_domain_id1]"
                                  name="itdp_domain_id1" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[first_name]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[first_name]"
                                  length="200"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[first_name]"
                                  name="first_name" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[last_name]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[last_name]"
                                  length="200"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[last_name]"
                                  name="last_name" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[organization]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[organization]"
                                  length="300"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[organization]"
                                  name="organization" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[address2]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[address2]"
                                  length="255"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[address2]"
                                  name="address2" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[address3]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[address3]"
                                  length="255"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[address3]"
                                  name="address3" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[state]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[state]"
                                  length="120"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[state]"
                                  name="state" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[postal_code]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[postal_code]"
                                  length="30"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[postal_code]"
                                  name="postal_code" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[tdp_city]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_city]"
                                  length="120"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[tdp_city]"
                                  name="tdp_city" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[tdp_is_international]"
                                  codePage="1252"
                                  dataType="str"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_is_international]"
                                  length="5"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[tdp_is_international]"
                                  name="tdp_is_international" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[tdp_address1]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[tdp_address1]"
                                  length="255"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[tdp_address1]"
                                  name="tdp_address1" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[domainnameid]"
                                  dataType="i4"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[domainnameid]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[domainnameid]"
                                  name="domainnameid" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[npd]"
                                  codePage="1252"
                                  dataType="str"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[npd]"
                                  length="5"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[npd]"
                                  name="npd" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[c_type]"
                                  dataType="wstr"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[c_type]"
                                  length="20"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[c_type]"
                                  name="c_type" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[contact_id]"
                                  dataType="guid"
                                  externalMetadataColumnId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output].ExternalColumns[contact_id]"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[contact_id]"
                                  name="contact_id" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                      </components>
                      <paths>
                        <path
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp.Paths[Multicast Output 1]"
                          endId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Inputs[ODBC Destination Input]"
                          name="Multicast Output 1"
                          startId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\Multicast.Outputs[Multicast Output 1]" />
                        <path
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp.Paths[Multicast Output 3]"
                          endId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Inputs[ODBC Destination Input]"
                          name="Multicast Output 3"
                          startId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\Multicast.Outputs[Multicast Output 3]" />
                        <path
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp.Paths[ODBC Destination Error Output]"
                          endId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error.Inputs[ODBC Destination Input]"
                          name="ODBC Destination Error Output"
                          startId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact.Outputs[ODBC Destination Error Output]" />
                        <path
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp.Paths[ODBC Destination Error Output1]"
                          endId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error.Inputs[ODBC Destination Input]"
                          name="ODBC Destination Error Output"
                          startId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal.Outputs[ODBC Destination Error Output]" />
                        <path
                          refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp.Paths[ODBC Source Output]"
                          endId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\Multicast.Inputs[Multicast Input 1]"
                          name="ODBC Source Output"
                          startId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom.Outputs[ODBC Source Output]" />
                      </paths>
                    </pipeline>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
              <DTS:PrecedenceConstraints>
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow.PrecedenceConstraints[Constraint]"
                  DTS:CreationName=""
                  DTS:DTSID="{D56948D9-8413-4268-A9B8-C6B16487E4BC}"
                  DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\create contact_id constraint for conatct_postal"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint"
                  DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Move contacts with bad contact_postal to  contact_error for TLD" />
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow.PrecedenceConstraints[Constraint 1]"
                  DTS:CreationName=""
                  DTS:DTSID="{439B4E33-2DD9-46E1-95C3-EF9C27DF0F21}"
                  DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint 1"
                  DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\create contact_id constraint for conatct_postal" />
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow.PrecedenceConstraints[Constraint 4]"
                  DTS:CreationName=""
                  DTS:DTSID="{D8761016-7A90-4DCA-9694-7F06F0DF116D}"
                  DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Drop contact_id constraint"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint 4"
                  DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp" />
              </DTS:PrecedenceConstraints>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Populate contact_postal_conatct_id"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{5dbda465-410e-4171-bf63-576b9d334885}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Populate contact_postal_conatct_id"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;	
-- update contact_postal
	UPDATE itdp.contact_postal cp SET contact_id =c.id
	FROM itdp.contact c WHERE cp.contact_id  IS NULL AND c.source_contact_id=cp.source_contact_id AND cp.tld  = '"+ @[$Package::TLD] +"';
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#x9;&#xA;-- update contact_postal&#xA;&#x9;UPDATE itdp.contact_postal cp SET contact_id =c.id&#xA;&#x9;FROM itdp.contact c WHERE cp.contact_id  IS NULL AND c.source_contact_id=cp.source_contact_id AND cp.tld  = 'co.in';&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Truncate  contact_error_records,contact_postal_error_records"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{f01c806b-224a-4a93-b437-a6db98ea9303}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Truncate  contact_error_records,contact_postal_error_records"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
 


	DELETE FROM itdp.contact_error_records WHERE TLD = '" + @[$Package::TLD] +"' AND dm_source = '"+ @[$Package::Tenant] +"'; 
	

	DELETE FROM itdp.contact_postal_error_records WHERE TLD = '" + @[$Package::TLD] +"' AND dm_source = '"+ @[$Package::Tenant] +"';
 


COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA; &#xA;&#xA;&#xA;&#x9;DELETE FROM itdp.contact_error_records WHERE TLD = 'co.in' AND dm_source = 'enom'; &#xA;&#x9;&#xA;&#xA;&#x9;DELETE FROM itdp.contact_postal_error_records WHERE TLD = 'co.in' AND dm_source = 'enom';&#xA; &#xA;&#xA;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Vacuum itdp_contact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{1031e873-e0fd-4b72-885a-0b1cfe9eb908}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum itdp_contact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  itdp.contact;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{1E18430A-BE54-4215-AE9C-D4DBB3265462}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Truncate  contact_error_records,contact_postal_error_records"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Add contact_error for not migrated domains" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{7C768796-B988-4F72-9805-EE953C3E2966}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Add contact_error for wrong email"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{B4459D76-F08A-4AA5-883A-B8AE5ED17902}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Vacuum itdp_contact" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{5DFD90DA-5226-4A20-8418-985628ED2535}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Add contact_error for not migrated domains"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Add contact_error for wrong email" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{763953C3-81A5-47BF-B07A-6DC43A61FC6A}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Add contact_error for wrong email"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact.PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{894DE5AE-7F7C-4474-8874-C3950CFC69F6}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Vacuum itdp_contact" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{7701a1e3-1b6a-43c1-8b80-4efce0b12d04}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="02_3 populate domain_host and domain_contact">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\move contact records with bad domain to contact error"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{23883384-f1d6-4388-bbeb-4130e7e7d6e5}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="move contact records with bad domain to contact error"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
-- move itdp.contact with wrong domain to contact_error
	INSERT INTO itdp.contact_error_records (tld, source_contact_id, source_domain_id, id, itdp_domain_id, type_id, title,
		 org_reg, org_vat, org_duns,  email, phone, fax, country, language, tdp_contact_country_issue,
		 tdp_data_source, errordescription,dm_source, is_private)
	SELECT distinct c.tld, c.source_contact_id, c.source_domain_id, c.id, c.itdp_domain_id, c.type_id, c.title, c.org_reg,
		c.org_vat, c.org_duns, c.email, c.phone, c.fax, c.country, c.language, c.tdp_contact_country_issue, 
  	    c.tdp_data_source,  der.errordescription,c.dm_source, c.is_private
	FROM  itdp.contact c
	JOIN  itdp.domain_error_records der  ON  der.id=c.itdp_domain_id
	WHERE c.tld = '"+ @[$Package::TLD] +"' and c.dm_source = '"+@[$Package::Tenant]+"' ;

-- delete from itdp.contact_postal
	DELETE FROM itdp.contact_postal c
	WHERE c.contact_id IN (SELECT id FROM itdp.contact_error_records  WHERE tld  = '"+ @[$Package::TLD] +"' and dm_source = '"+@[$Package::Tenant]+"')
	AND   c.tld  =  '"+ @[$Package::TLD] +"' and c.dm_source = '"+@[$Package::Tenant]+"' ;	
-- delete from itdp.contact
	DELETE FROM itdp.contact c
	WHERE c.id  IN (SELECT id FROM itdp.contact_error_records  WHERE tld  = '"+ @[$Package::TLD] +"' and dm_source = '"+@[$Package::Tenant]+"')
	AND   c.tld  =  '"+ @[$Package::TLD] +"' and c.dm_source = '"+@[$Package::Tenant]+"';	
analyse itdp.contact;
analyse itdp.contact_postal;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;-- move itdp.contact with wrong domain to contact_error&#xA;&#x9;INSERT INTO itdp.contact_error_records (tld, source_contact_id, source_domain_id, id, itdp_domain_id, type_id, title,&#xA;&#x9;&#x9; org_reg, org_vat, org_duns,  email, phone, fax, country, language, tdp_contact_country_issue,&#xA;&#x9;&#x9; tdp_data_source, errordescription,dm_source, is_private)&#xA;&#x9;SELECT distinct c.tld, c.source_contact_id, c.source_domain_id, c.id, c.itdp_domain_id, c.type_id, c.title, c.org_reg,&#xA;&#x9;&#x9;c.org_vat, c.org_duns, c.email, c.phone, c.fax, c.country, c.language, c.tdp_contact_country_issue, &#xA;  &#x9;    c.tdp_data_source,  der.errordescription,c.dm_source, c.is_private&#xA;&#x9;FROM  itdp.contact c&#xA;&#x9;JOIN  itdp.domain_error_records der  ON  der.id=c.itdp_domain_id&#xA;&#x9;WHERE c.tld = 'co.in' and c.dm_source = 'enom' ;&#xA;&#xA;-- delete from itdp.contact_postal&#xA;&#x9;DELETE FROM itdp.contact_postal c&#xA;&#x9;WHERE c.contact_id IN (SELECT id FROM itdp.contact_error_records  WHERE tld  = 'co.in' and dm_source = 'enom')&#xA;&#x9;AND   c.tld  =  'co.in' and c.dm_source = 'enom' ;&#x9;&#xA;-- delete from itdp.contact&#xA;&#x9;DELETE FROM itdp.contact c&#xA;&#x9;WHERE c.id  IN (SELECT id FROM itdp.contact_error_records  WHERE tld  = 'co.in' and dm_source = 'enom')&#xA;&#x9;AND   c.tld  =  'co.in' and c.dm_source = 'enom';&#x9;&#xA;analyse itdp.contact;&#xA;analyse itdp.contact_postal;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move host with domain error to host error table"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{594563db-f72d-4816-a811-ca52a8c723d5}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Move host with domain error to host error table"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
	INSERT INTO itdp.host_error_records  (tld, source_host_id, source_domain_id, id, itdp_domain_id, tenant_customer_id, name,   errordescription,dm_source)
	SELECT DISTINCT  h.tld,h.source_host_id, h.source_domain_id,h.id, h.itdp_domain_id, h.tenant_customer_id, h.name,  der.errordescription,h.dm_source
	FROM  itdp.host h 
	JOIN  itdp.domain_error_records der   ON  der.source_domain_id = h.source_domain_id 
	WHERE   h.tld  = '"+ @[$Package::TLD] +"' and  h.dm_source = '"+@[$Package::Tenant]+"' ;


-- delete from itdp.host 
	
DELETE FROM itdp.host h
	WHERE h.source_domain_id  IN (SELECT source_domain_id FROM itdp.host_error_records 
 WHERE  tld = '"+ @[$Package::TLD] +"' and dm_source = '"+@[$Package::Tenant]+"'  ) 
		AND h.tld = '"+ @[$Package::TLD] +"'  and h.dm_source = '"+@[$Package::Tenant]+"' ;
COMMIT ;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;&#x9;INSERT INTO itdp.host_error_records  (tld, source_host_id, source_domain_id, id, itdp_domain_id, tenant_customer_id, name,   errordescription,dm_source)&#xA;&#x9;SELECT DISTINCT  h.tld,h.source_host_id, h.source_domain_id,h.id, h.itdp_domain_id, h.tenant_customer_id, h.name,  der.errordescription,h.dm_source&#xA;&#x9;FROM  itdp.host h &#xA;&#x9;JOIN  itdp.domain_error_records der   ON  der.source_domain_id = h.source_domain_id &#xA;&#x9;WHERE   h.tld  = 'co.in' and  h.dm_source = 'enom' ;&#xA;&#xA;&#xA;-- delete from itdp.host &#xA;&#x9;&#xA;DELETE FROM itdp.host h&#xA;&#x9;WHERE h.source_domain_id  IN (SELECT source_domain_id FROM itdp.host_error_records &#xA; WHERE  tld = 'co.in' and dm_source = 'enom'  ) &#xA;&#x9;&#x9;AND h.tld = 'co.in'  and h.dm_source = 'enom' ;&#xA;COMMIT ;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move to domain error table domains with contact error"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{a262caaa-a6ce-4c46-8356-7ae59da2c76f}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Move to domain error table domains with contact error"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
--- move to domain error table domains with contact error
	INSERT INTO itdp.domain_error_records (tld, source_domain_id, id, tenant_customer_id, accreditation_tld_id, name, auth_info, roid,
	ry_created_date, ry_expiry_date, ry_updated_date, ry_transfered_date, deleted_date, expiry_date,
status_id, auto_renew, errordescription,dm_source)
	SELECT distinct d.tld, d.source_domain_id, d.id, d.tenant_customer_id, d.accreditation_tld_id, d.name, d.auth_info, d.roid, 
	d.ry_created_date, d.ry_expiry_date, d.ry_updated_date, d.ry_transfered_date, d.deleted_date, d.expiry_date,
d.status_id, d.auto_renew, 'contact_error' ,d.dm_source
	FROM  itdp.domain d 
    JOIN  dm_enom.contact c ON  d.source_domain_id=c.domainnameid 
    JOIN  itdp.contact_error_records cer  ON  cer.source_contact_id = c.id
     WHERE  d.tld ='"+@[$Package::TLD]+"' AND d.dm_source = '"+@[$Package::Tenant]+"';

-- delete from itdp.domain
	DELETE FROM itdp.domain d	
	WHERE d.source_domain_id  IN (SELECT source_domain_id FROM itdp.domain_error_records  WHERE  tld = '"+@[$Package::TLD]+"' AND dm_source = '"+@[$Package::Tenant]+"' )
	 AND   d.tld  = '"+ @[$Package::TLD] +"' AND d.dm_source = '"+@[$Package::Tenant]+"';	
Analyse itdp.domain;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;--- move to domain error table domains with contact error&#xA;&#x9;INSERT INTO itdp.domain_error_records (tld, source_domain_id, id, tenant_customer_id, accreditation_tld_id, name, auth_info, roid,&#xA;&#x9;ry_created_date, ry_expiry_date, ry_updated_date, ry_transfered_date, deleted_date, expiry_date,&#xA;status_id, auto_renew, errordescription,dm_source)&#xA;&#x9;SELECT distinct d.tld, d.source_domain_id, d.id, d.tenant_customer_id, d.accreditation_tld_id, d.name, d.auth_info, d.roid, &#xA;&#x9;d.ry_created_date, d.ry_expiry_date, d.ry_updated_date, d.ry_transfered_date, d.deleted_date, d.expiry_date,&#xA;d.status_id, d.auto_renew, 'contact_error' ,d.dm_source&#xA;&#x9;FROM  itdp.domain d &#xA;    JOIN  dm_enom.contact c ON  d.source_domain_id=c.domainnameid &#xA;    JOIN  itdp.contact_error_records cer  ON  cer.source_contact_id = c.id&#xA;     WHERE  d.tld ='co.in' AND d.dm_source = 'enom';&#xA;&#xA;-- delete from itdp.domain&#xA;&#x9;DELETE FROM itdp.domain d&#x9;&#xA;&#x9;WHERE d.source_domain_id  IN (SELECT source_domain_id FROM itdp.domain_error_records  WHERE  tld = 'co.in' AND dm_source = 'enom' )&#xA;&#x9; AND   d.tld  = 'co.in' AND d.dm_source = 'enom';&#x9;&#xA;Analyse itdp.domain;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move to domain error table domains without contact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{70377c3e-239d-4eaf-ab2c-8402fc20592f}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Move to domain error table domains without contact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
--- move to domain error domains without contact
	INSERT INTO itdp.domain_error_records (tld, source_domain_id, id, tenant_customer_id, accreditation_tld_id, name, auth_info, roid,
	ry_created_date, ry_expiry_date, ry_updated_date, ry_transfered_date, deleted_date, expiry_date,
status_id, auto_renew, errordescription,dm_source)
	SELECT distinct d.tld, d.source_domain_id, d.id, d.tenant_customer_id, d.accreditation_tld_id, d.name, d.auth_info, d.roid, 
	d.ry_created_date, d.ry_expiry_date, d.ry_updated_date, d.ry_transfered_date, d.deleted_date, d.expiry_date,
d.status_id, d.auto_renew, 'domain without contact' ,d.dm_source
	FROM  itdp.domain d 
	JOIN itdp.tld t ON t.tld_name =d.tld 
	LEFT JOIN dm_enom.contact c on d.source_domain_id=c.domainnameid and c.tld='"+@[$Package::TLD]+"'
	WHERE  d.tld ='"+@[$Package::TLD]+"'  AND d.dm_source = '"+@[$Package::Tenant]+"'  AND c.domainnameid IS NULL AND NOT(t.is_thin) ;


-- delete from itdp.domain
	DELETE FROM itdp.domain d	
	WHERE d.source_domain_id  IN (SELECT source_domain_id FROM itdp.domain_error_records  WHERE tld = '"+@[$Package::TLD]+"' AND dm_source = '"+@[$Package::Tenant]+"' )
		AND d.tld = '"+@[$Package::TLD]+"' and d.dm_source = '"+@[$Package::Tenant]+"' ;	
ANALYSE itdp.domain;
ANALYSE itdp.domain_error_records;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;--- move to domain error domains without contact&#xA;&#x9;INSERT INTO itdp.domain_error_records (tld, source_domain_id, id, tenant_customer_id, accreditation_tld_id, name, auth_info, roid,&#xA;&#x9;ry_created_date, ry_expiry_date, ry_updated_date, ry_transfered_date, deleted_date, expiry_date,&#xA;status_id, auto_renew, errordescription,dm_source)&#xA;&#x9;SELECT distinct d.tld, d.source_domain_id, d.id, d.tenant_customer_id, d.accreditation_tld_id, d.name, d.auth_info, d.roid, &#xA;&#x9;d.ry_created_date, d.ry_expiry_date, d.ry_updated_date, d.ry_transfered_date, d.deleted_date, d.expiry_date,&#xA;d.status_id, d.auto_renew, 'domain without contact' ,d.dm_source&#xA;&#x9;FROM  itdp.domain d &#xA;&#x9;JOIN itdp.tld t ON t.tld_name =d.tld &#xA;&#x9;LEFT JOIN dm_enom.contact c on d.source_domain_id=c.domainnameid and c.tld='co.in'&#xA;&#x9;WHERE  d.tld ='co.in'  AND d.dm_source = 'enom'  AND c.domainnameid IS NULL AND NOT(t.is_thin) ;&#xA;&#xA;&#xA;-- delete from itdp.domain&#xA;&#x9;DELETE FROM itdp.domain d&#x9;&#xA;&#x9;WHERE d.source_domain_id  IN (SELECT source_domain_id FROM itdp.domain_error_records  WHERE tld = 'co.in' AND dm_source = 'enom' )&#xA;&#x9;&#x9;AND d.tld = 'co.in' and d.dm_source = 'enom' ;&#x9;&#xA;ANALYSE itdp.domain;&#xA;ANALYSE itdp.domain_error_records;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Populate domain_contact table"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{a4e38c14-ff70-448d-a43c-89ee37d36193}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Populate domain_contact table"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
/*;WITH dc_unpivot AS (
SELECT  c.domainnameid, t.*
FROM  dm_enom.domaincontact c 
JOIN dm_enom.domainname dn ON dn.domainnameid=c.domainnameid 
CROSS  JOIN  LATERAL  (
     VALUES  
       (c.regroid, c.regcontactid, 'registrant'),
       (c.adminroid,c. admincontactid, 'admin'),
       (c.techroid, c.techcontactid,'tech'),
       (c.billroid,c.billcontactid, 'billing')
  ) AS  t(roid,contact_id, domain_contact_type)
WHERE  tld='"+ @[$Package::TLD] +"')
INSERT INTO itdp.domain_contact	(domain_id, contact_id, domain_contact_type_id,  handle)				     
SELECT DISTINCT d.id AS domain_id,ic.id AS contact_id,--dcu.domain_contact_type,
	tc_id_from_name('itdp.domain_contact_type',dcu.domain_contact_type),NULL --COALESCE(dcu.roid,'Enom- NULL') AS handle
FROM dc_unpivot dcu
JOIN itdp.domain d ON dcu.domainnameid =d.source_domain_id 
JOIN dm_enom.contact c ON c.Enom_contact_id = dcu.contact_id
JOIN itdp.contact ic ON ic.source_contact_id = c.id 
LEFT JOIN  itdp.domain_contact dc ON dc.contact_id = ic.id
         WHERE  dc.contact_id IS NULL AND  d.tld='"+ @[$Package::TLD] +"';*/
INSERT INTO itdp.domain_contact	(domain_id, contact_id, domain_contact_type_id)				     
SELECT d.id  AS domain_id, itdp_contact_id AS contact_id, 	tc_id_from_name('itdp.domain_contact_type',c_type)
FROM dm_enom.contact c
JOIN itdp.DOMAIN d ON d.source_domain_id=c.domainnameid
LEFT JOIN  itdp.domain_contact dc ON dc.contact_id = c.itdp_contact_id AND dc.domain_id =d.id
WHERE dc.contact_id IS NULL and   itdp_contact_id IS NOT NULL  AND c.tld='"+ @[$Package::TLD] +"';

COMMIT"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;/*;WITH dc_unpivot AS (&#xA;SELECT  c.domainnameid, t.*&#xA;FROM  dm_enom.domaincontact c &#xA;JOIN dm_enom.domainname dn ON dn.domainnameid=c.domainnameid &#xA;CROSS  JOIN  LATERAL  (&#xA;     VALUES  &#xA;       (c.regroid, c.regcontactid, 'registrant'),&#xA;       (c.adminroid,c. admincontactid, 'admin'),&#xA;       (c.techroid, c.techcontactid,'tech'),&#xA;       (c.billroid,c.billcontactid, 'billing')&#xA;  ) AS  t(roid,contact_id, domain_contact_type)&#xA;WHERE  tld='co.in')&#xA;INSERT INTO itdp.domain_contact&#x9;(domain_id, contact_id, domain_contact_type_id,  handle)&#x9;&#x9;&#x9;&#x9;     &#xA;SELECT DISTINCT d.id AS domain_id,ic.id AS contact_id,--dcu.domain_contact_type,&#xA;&#x9;tc_id_from_name('itdp.domain_contact_type',dcu.domain_contact_type),NULL --COALESCE(dcu.roid,'Enom- NULL') AS handle&#xA;FROM dc_unpivot dcu&#xA;JOIN itdp.domain d ON dcu.domainnameid =d.source_domain_id &#xA;JOIN dm_enom.contact c ON c.Enom_contact_id = dcu.contact_id&#xA;JOIN itdp.contact ic ON ic.source_contact_id = c.id &#xA;LEFT JOIN  itdp.domain_contact dc ON dc.contact_id = ic.id&#xA;         WHERE  dc.contact_id IS NULL AND  d.tld='co.in';*/&#xA;INSERT INTO itdp.domain_contact&#x9;(domain_id, contact_id, domain_contact_type_id)&#x9;&#x9;&#x9;&#x9;     &#xA;SELECT d.id  AS domain_id, itdp_contact_id AS contact_id, &#x9;tc_id_from_name('itdp.domain_contact_type',c_type)&#xA;FROM dm_enom.contact c&#xA;JOIN itdp.DOMAIN d ON d.source_domain_id=c.domainnameid&#xA;LEFT JOIN  itdp.domain_contact dc ON dc.contact_id = c.itdp_contact_id AND dc.domain_id =d.id&#xA;WHERE dc.contact_id IS NULL and   itdp_contact_id IS NOT NULL  AND c.tld='co.in';&#xA;&#xA;COMMIT" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Populate domain_host"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{ad86862b-f32c-4867-ba64-51d62c1817be}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Populate domain_host"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
         INSERT INTO itdp.domain_host  ( domain_id, host_id)
         SELECT h.itdp_domain_id, h.id FROM itdp.host h 
         LEFT JOIN  itdp.domain_host dh ON dh.host_id = h.id and dh.domain_id=h.itdp_domain_id
         WHERE TLD  = '"+ @[$Package::TLD] + "'  AND dh.host_id IS NULL;
COMMIT; "</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;         INSERT INTO itdp.domain_host  ( domain_id, host_id)&#xA;         SELECT h.itdp_domain_id, h.id FROM itdp.host h &#xA;         LEFT JOIN  itdp.domain_host dh ON dh.host_id = h.id and dh.domain_id=h.itdp_domain_id&#xA;         WHERE TLD  = 'co.in'  AND dh.host_id IS NULL;&#xA;COMMIT; " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Populate domain_lock"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{199ee7ac-d4b2-4216-a015-03c91c28d88d}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Populate domain_lock"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
   -- hold
        INSERT INTO itdp.domain_lock (dm_source, tld, domain_id, type_id, is_internal) 
	    SELECT  d.dm_source, d.tld, d.id, m.itdp_id ,true
  FROM itdp.domain d        
        JOIN  dm_enom.domainname  dn ON dn.domainnameid = d.source_domain_id        
        LEFT JOIN dm_enom.map_lock_type_enom_itdp m ON m.enom_name = 'Hold'   
		LEFT JOIN itdp.domain_lock dl ON dl.domain_id = d.id AND dl.type_id = m.itdp_id        
        WHERE dn.hold = '1' AND dl.domain_id IS NULL 
		AND d.TLD = '"+ @[$Package::TLD] + "' AND d.dm_source = '"+@[$Package::Tenant]+"' ;
--ClientTransferProhibited
		INSERT INTO itdp.domain_lock (dm_source, tld,domain_id, type_id, is_internal) 
	    SELECT  d.dm_source, d.tld, d.id, m.itdp_id ,false
	    FROM itdp.domain d        
        JOIN  dm_enom.domainname  dn ON dn.domainnameid = d.source_domain_id        
        LEFT JOIN dm_enom.map_lock_type_enom_itdp m ON m.enom_name = 'CustomerDomainStatus'   
		LEFT JOIN itdp.domain_lock dl ON dl.domain_id = d.id AND dl.type_id = m.itdp_id        
        WHERE dn.CustomerDomainStatus = 'Locked' AND dl.domain_id IS NULL 
		AND d.TLD = '"+ @[$Package::TLD] + "' AND d.dm_source = '"+@[$Package::Tenant]+"' ;
 
ANALYSE itdp.domain_lock;
COMMIT; "</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;   -- hold&#xA;        INSERT INTO itdp.domain_lock (dm_source, tld, domain_id, type_id, is_internal) &#xA;&#x9;    SELECT  d.dm_source, d.tld, d.id, m.itdp_id ,true&#xA;  FROM itdp.domain d        &#xA;        JOIN  dm_enom.domainname  dn ON dn.domainnameid = d.source_domain_id        &#xA;        LEFT JOIN dm_enom.map_lock_type_enom_itdp m ON m.enom_name = 'Hold'   &#xA;&#x9;&#x9;LEFT JOIN itdp.domain_lock dl ON dl.domain_id = d.id AND dl.type_id = m.itdp_id        &#xA;        WHERE dn.hold = '1' AND dl.domain_id IS NULL &#xA;&#x9;&#x9;AND d.TLD = 'co.in' AND d.dm_source = 'enom' ;&#xA;--ClientTransferProhibited&#xA;&#x9;&#x9;INSERT INTO itdp.domain_lock (dm_source, tld,domain_id, type_id, is_internal) &#xA;&#x9;    SELECT  d.dm_source, d.tld, d.id, m.itdp_id ,false&#xA;&#x9;    FROM itdp.domain d        &#xA;        JOIN  dm_enom.domainname  dn ON dn.domainnameid = d.source_domain_id        &#xA;        LEFT JOIN dm_enom.map_lock_type_enom_itdp m ON m.enom_name = 'CustomerDomainStatus'   &#xA;&#x9;&#x9;LEFT JOIN itdp.domain_lock dl ON dl.domain_id = d.id AND dl.type_id = m.itdp_id        &#xA;        WHERE dn.CustomerDomainStatus = 'Locked' AND dl.domain_id IS NULL &#xA;&#x9;&#x9;AND d.TLD = 'co.in' AND d.dm_source = 'enom' ;&#xA; &#xA;ANALYSE itdp.domain_lock;&#xA;COMMIT; " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Return ITDP_PKs to dm_enom_contact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{41bfd9da-319b-43a3-b4f8-d1ffd1fc09ee}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Return ITDP_PKs to dm_enom_contact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN ;   
    
     UPDATE dm_enom.contact cc SET itdp_contact_id =c.id 
	 FROM   itdp.contact c
     WHERE  cc.id =c.source_contact_id  AND itdp_contact_id IS NULL  
	 AND c.TLD= '"+ @[$Package::TLD]+"'  and  c.dm_source = '"+@[$Package::Tenant]+"' ;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN ;   &#xA;    &#xA;     UPDATE dm_enom.contact cc SET itdp_contact_id =c.id &#xA;&#x9; FROM   itdp.contact c&#xA;     WHERE  cc.id =c.source_contact_id  AND itdp_contact_id IS NULL  &#xA;&#x9; AND c.TLD= 'co.in'  and  c.dm_source = 'enom' ;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Return ITDP_PKs to dm_enom_domainname"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{895c62fa-f237-445c-b625-cf4a798513b4}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Return ITDP_PKs to dm_enom_domainname"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN ; 
ANALYSE dm_enom.domainname;
ANALYSE itdp.domain;

     UPDATE dm_enom.domainname dn SET itdp_domain_id =d.id
     FROM   itdp.domain d
     WHERE  d.dm_source = '"+@[$Package::Tenant]+"' and d.tld= '"+ @[$Package::TLD]  +"'  and dn.domainnameid =d.source_domain_id 
 AND itdp_domain_id IS NULL AND dn.TLD = '"+ @[$Package::TLD]+"'  ;
  
 COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN ; &#xA;ANALYSE dm_enom.domainname;&#xA;ANALYSE itdp.domain;&#xA;&#xA;     UPDATE dm_enom.domainname dn SET itdp_domain_id =d.id&#xA;     FROM   itdp.domain d&#xA;     WHERE  d.dm_source = 'enom' and d.tld= 'co.in'  and dn.domainnameid =d.source_domain_id &#xA; AND itdp_domain_id IS NULL AND dn.TLD = 'co.in'  ;&#xA;  &#xA; COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Return ITDP_PKs to dm_enom_namesersvers"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{ca39cd40-a26a-4d3f-ba7a-239dc761c45b}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Return ITDP_PKs to dm_enom_namesersvers"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN ;    
	ANALYSE dm_enom.nameservers;
	ANALYSE itdp.host;
     UPDATE dm_enom.nameservers n SET itdp_host_id =h.id, itdp_domain_id =h.itdp_domain_id
     FROM   itdp.host h
     WHERE n.TLD= '"+ @[$Package::TLD]+"' and 
 h.dm_source = '"+@[$Package::Tenant]+"' and h.TLD= '"+ @[$Package::TLD]+"'  and 
 n.idx =h.source_host_id  AND itdp_host_id IS NULL     ; 
  
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN ;    &#xA;&#x9;ANALYSE dm_enom.nameservers;&#xA;&#x9;ANALYSE itdp.host;&#xA;     UPDATE dm_enom.nameservers n SET itdp_host_id =h.id, itdp_domain_id =h.itdp_domain_id&#xA;     FROM   itdp.host h&#xA;     WHERE n.TLD= 'co.in' and &#xA; h.dm_source = 'enom' and h.TLD= 'co.in'  and &#xA; n.idx =h.source_host_id  AND itdp_host_id IS NULL     ; &#xA;  &#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{1bdeac3d-4d92-4ed0-91e3-04b4986c0f51}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move to domain error table domains without contact"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move to domain error table domains with contact error" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{26B9AD4E-E7E4-4639-AEBE-9F4457AC912A}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move to domain error table domains with contact error"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Populate domain_lock" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{1CA845BD-517A-487A-9DE5-4BA53563A2B5}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Populate domain_lock"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Return ITDP_PKs to dm_enom_domainname" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{692DED2E-BA8B-4E8D-92F6-8D9CCE28E2AC}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move host with domain error to host error table"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Return ITDP_PKs to dm_enom_namesersvers" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{c9d0421f-b98b-4043-a595-4f59544ed1e8}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move to domain error table domains with contact error"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\move contact records with bad domain to contact error" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{88860030-D2FC-4D6A-9F57-C6C7D638C3C2}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move to domain error table domains with contact error"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move host with domain error to host error table" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 6]"
              DTS:CreationName=""
              DTS:DTSID="{F82E7520-E2C2-46EF-867A-DADDCB8CD504}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\move contact records with bad domain to contact error"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 6"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Return ITDP_PKs to dm_enom_contact" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 8]"
              DTS:CreationName=""
              DTS:DTSID="{71B02A75-6553-458E-BD17-81F32ADA0A6B}"
              DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Return ITDP_PKs to dm_enom_contact"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 8"
              DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Populate domain_contact table" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\dm_log - extract_transfer_end"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{02ec4f68-f18a-4501-a0c1-5c4bbf0e18e0}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="dm_log - extract_transfer_end"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"UPDATE  itdp.dm_log dl
SET end_date_extract=now(),
	status='Itdp transfer started',
	result_domain.extract = (SELECT count(*) FROM dm_enom.domainname_ WHERE lower(tld)='"+ @[$Package::TLD] +"' ),
	result_host.extract=(SELECT count(*) FROM dm_enom.nameservers_ n JOIN dm_enom.domainname_ d ON d.domainnameid=n.domainnameid  WHERE lower(tld)='"+ @[$Package::TLD] +"' ),
	result_contact.extract=(SELECT count(*) FROM dm_enom.contact_ c  WHERE lower(tld)='"+ @[$Package::TLD] +"' ),
	result_domain.dm_enom = (SELECT count(*) FROM dm_enom.domainname WHERE tld='"+ @[$Package::TLD] +"' ),
    result_host.dm_enom=(SELECT count(*) FROM dm_enom.nameservers n   JOIN dm_enom.domainname d ON d.domainnameid=n.domainnameid  WHERE d.tld='"+ @[$Package::TLD] +"' ),
	result_contact.dm_enom=(SELECT count(*) FROM dm_enom.contact WHERE tld='"+ @[$Package::TLD] +"' )
WHERE dl.id = "+ (DT_WSTR, 5) @[User::dm_log_id] +" and dl.dm_source=
'"+ @[$Package::Tenant] +"' and dl.tld='"+ @[$Package::TLD] +"';"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{ABDE7B26-BFF2-467F-980A-2292D0F21D32}"
              SQLTask:SqlStatementSource="UPDATE  itdp.dm_log dl&#xA;SET end_date_extract=now(),&#xA;&#x9;status='Itdp transfer started',&#xA;&#x9;result_domain.extract = (SELECT count(*) FROM dm_enom.domainname_ WHERE lower(tld)='co.in' ),&#xA;&#x9;result_host.extract=(SELECT count(*) FROM dm_enom.nameservers_ n JOIN dm_enom.domainname_ d ON d.domainnameid=n.domainnameid  WHERE lower(tld)='co.in' ),&#xA;&#x9;result_contact.extract=(SELECT count(*) FROM dm_enom.contact_ c  WHERE lower(tld)='co.in' ),&#xA;&#x9;result_domain.dm_enom = (SELECT count(*) FROM dm_enom.domainname WHERE tld='co.in' ),&#xA;    result_host.dm_enom=(SELECT count(*) FROM dm_enom.nameservers n   JOIN dm_enom.domainname d ON d.domainnameid=n.domainnameid  WHERE d.tld='co.in' ),&#xA;&#x9;result_contact.dm_enom=(SELECT count(*) FROM dm_enom.contact WHERE tld='co.in' )&#xA;WHERE dl.id = 1 and dl.dm_source=&#xA;'enom' and dl.tld='co.in';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\dm_log - itdp_transfer_end"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{2081300d-839c-4fa2-8036-b8df70ae330c}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="dm_log - itdp_transfer_end"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"UPDATE  itdp.dm_log dl
SET end_date_itdp_transfer=now(),
	status='Tdp transfer started',
	result_domain.itdp = (SELECT count(*) FROM itdp.domain WHERE tld='"+ @[$Package::TLD] +"'  AND dm_source='"+ @[$Package::Tenant] +"'),
	result_domain.error = (SELECT count(*) FROM itdp.domain_error_records WHERE tld='"+ @[$Package::TLD] +"' AND dm_source='"+ @[$Package::Tenant] +"' ),
	result_host.itdp=(SELECT count(*) FROM itdp.host WHERE tld='"+ @[$Package::TLD] +"' AND dm_source='"+ @[$Package::Tenant] +"' ),
	result_host.error=(SELECT count(*) FROM itdp.host_error_records WHERE tld='"+ @[$Package::TLD] +"' AND dm_source='"+ @[$Package::Tenant] +"' ),
	result_contact.itdp=(SELECT count(*) FROM itdp.contact WHERE tld='"+ @[$Package::TLD] +"' AND dm_source='"+ @[$Package::Tenant] +"' ),
	result_contact.error=(SELECT count(*) FROM itdp.contact_error_records WHERE tld='"+ @[$Package::TLD] +"' AND dm_source='"+ @[$Package::Tenant] +"' ),	
	result_domain.dm_enom_itdp_pk = (SELECT count(*) FROM dm_enom.domainname 
		WHERE  itdp_domain_id is not null and tld='"+ @[$Package::TLD] +"' ),
	result_host.dm_enom_itdp_pk=(SELECT count(*) FROM dm_enom.nameservers n 		
		 WHERE n.itdp_host_id is not null and  tld='"+ @[$Package::TLD] +"' ),
	result_contact.dm_enom_itdp_pk=(SELECT count(*) FROM dm_enom.contact WHERE itdp_contact_id is not null and tld='"+ @[$Package::TLD] +"' )	
WHERE dl.id = "+ (DT_WSTR, 5) @[User::dm_log_id] +" and dl.dm_source=
'"+ @[$Package::Tenant] +"' and dl.tld='"+ @[$Package::TLD] +"';"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{ABDE7B26-BFF2-467F-980A-2292D0F21D32}"
              SQLTask:SqlStatementSource="UPDATE  itdp.dm_log dl&#xA;SET end_date_itdp_transfer=now(),&#xA;&#x9;status='Tdp transfer started',&#xA;&#x9;result_domain.itdp = (SELECT count(*) FROM itdp.domain WHERE tld='co.in'  AND dm_source='enom'),&#xA;&#x9;result_domain.error = (SELECT count(*) FROM itdp.domain_error_records WHERE tld='co.in' AND dm_source='enom' ),&#xA;&#x9;result_host.itdp=(SELECT count(*) FROM itdp.host WHERE tld='co.in' AND dm_source='enom' ),&#xA;&#x9;result_host.error=(SELECT count(*) FROM itdp.host_error_records WHERE tld='co.in' AND dm_source='enom' ),&#xA;&#x9;result_contact.itdp=(SELECT count(*) FROM itdp.contact WHERE tld='co.in' AND dm_source='enom' ),&#xA;&#x9;result_contact.error=(SELECT count(*) FROM itdp.contact_error_records WHERE tld='co.in' AND dm_source='enom' ),&#x9;&#xA;&#x9;result_domain.dm_enom_itdp_pk = (SELECT count(*) FROM dm_enom.domainname &#xA;&#x9;&#x9;WHERE  itdp_domain_id is not null and tld='co.in' ),&#xA;&#x9;result_host.dm_enom_itdp_pk=(SELECT count(*) FROM dm_enom.nameservers n &#x9;&#x9;&#xA;&#x9;&#x9; WHERE n.itdp_host_id is not null and  tld='co.in' ),&#xA;&#x9;result_contact.dm_enom_itdp_pk=(SELECT count(*) FROM dm_enom.contact WHERE itdp_contact_id is not null and tld='co.in' )&#x9;&#xA;WHERE dl.id = 1 and dl.dm_source=&#xA;'enom' and dl.tld='co.in';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\Vacuum Analyse"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:Disabled="True"
          DTS:DTSID="{ac76fb7a-5541-4e68-8649-21cf6252af55}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Vacuum Analyse">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">FINDSTRING("com" , @[$Package::TLD], 1)   &gt; 0 ? false :true</DTS:PropertyExpression>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\Vacuum Analyse\Vacuum itdp_contact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{c8cf766f-01a1-42f8-a399-54125b379d8d}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum itdp_contact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  itdp.contact_enom_com;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\Vacuum Analyse\Vacuum itdp_contact_postal"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{e4659ba5-4b91-4f60-bc30-e51000500583}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum itdp_contact_postal"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  itdp.contact_postal_enom_com;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\Vacuum Analyse\Vacuum itdp_domain"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{5737ff00-d0ea-44c9-85cc-a26f1710ba8f}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum itdp_domain"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  itdp.domain_enom_com;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\Vacuum Analyse\Vacuum itdp_domain_lock"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{3faa2741-692e-4dba-813c-7662ab6fc94d}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum itdp_domain_lock"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  itdp.domain_lock;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\Vacuum Analyse\Vacuum itdp_host"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{e805f541-0b54-42d8-b57c-b584f4876a24}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum itdp_host"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="5">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  itdp.host_enom_com;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{ab620251-effb-4d12-b603-9ae168b102d0}"
          DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{f6c0e108-9edd-48ba-959c-4402f0534f08}"
          DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{72BDDD11-EFFD-4416-BEB1-0BE1574D05DE}"
          DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\dm_log - itdp_transfer_end" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{2BF75E41-6845-4E07-B212-2AB801A85691}"
          DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\dm_log - extract_transfer_end"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{420D2ECA-053A-4495-BACC-84856B53ADD2}"
          DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\Vacuum Analyse" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{52ED4612-9CDF-4213-B7E2-B7E97470A100}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:ISOLevel="4096"
      DTS:LocaleID="-1"
      DTS:ObjectName="03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{60BB9431-23FD-49B7-8DD6-50D73BECFF94}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:ISOLevel="4096"
          DTS:LocaleID="-1"
          DTS:ObjectName="03_1 Domain">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Create itdp_temp_domain_lock"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{91b223a6-f82b-4fc7-b993-d71cc659ec0d}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create itdp_temp_domain_lock"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"DROP TABLE IF EXISTS itdp.domain_lock_temp;         
CREATE unlogged TABLE itdp.domain_lock_temp  AS 
(SELECT  dl.domain_id, plt.id as type_id, dl.is_internal 	    
	    FROM itdp.domain_lock  dl   
        JOIN  public.domain  d ON d.id = dl.domain_id           
        JOIN  itdp.domain  id ON id.id = dl.domain_id  AND (id.dm_status).domain IS NULL
			AND id.tld='"+ @[$Package::TLD] +"' AND id.dm_source='"+ @[$Package::Tenant] +"'    
   		JOIN itdp.lock_type ilt ON ilt.id=dl.type_id
        JOIN public.lock_type plt ON plt.name= ilt.name
		LEFT JOIN public.domain_lock tdl ON tdl.domain_id = dl.domain_id AND tdl.type_id = plt.id
        WHERE  tdl.domain_id IS NULL
	AND dl.TLD = '"+ @[$Package::TLD] +"'  AND dl.dm_source='"+ @[$Package::Tenant] +"');"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="DROP TABLE IF EXISTS itdp.domain_lock_temp;         &#xA;CREATE unlogged TABLE itdp.domain_lock_temp  AS &#xA;(SELECT  dl.domain_id, plt.id as type_id, dl.is_internal &#x9;    &#xA;&#x9;    FROM itdp.domain_lock  dl   &#xA;        JOIN  public.domain  d ON d.id = dl.domain_id           &#xA;        JOIN  itdp.domain  id ON id.id = dl.domain_id  AND (id.dm_status).domain IS NULL&#xA;&#x9;&#x9;&#x9;AND id.tld='co.in' AND id.dm_source='enom'    &#xA;   &#x9;&#x9;JOIN itdp.lock_type ilt ON ilt.id=dl.type_id&#xA;        JOIN public.lock_type plt ON plt.name= ilt.name&#xA;&#x9;&#x9;LEFT JOIN public.domain_lock tdl ON tdl.domain_id = dl.domain_id AND tdl.type_id = plt.id&#xA;        WHERE  tdl.domain_id IS NULL&#xA;&#x9;AND dl.TLD = 'co.in'  AND dl.dm_source='enom');" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Populate domain _RGP_status table"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{F6F989DC-8B09-4AB6-A781-D69C79C9C4E1}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Populate domain _RGP_status table"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
--ALTER TABLE public.domain_rgp_status DISABLE TRIGGER  domain_rgp_status_set_expiration_tg;
   -- add_grace_period
        INSERT INTO public.domain_rgp_status (domain_id, status_id,created_date,expiry_date ) 
	    SELECT  d.id, public.tc_id_from_name('public.rgp_status','add_grace_period'),id.ry_created_date, id.ry_created_date + (INTERVAL '1 hour' *attr.value::integer )
       -- ,(EXTRACT(EPOCH FROM (now()-id.ry_created_date))/3600),attr.value::integer 
        FROM  public.domain  d           
        JOIN  itdp.domain  id ON id.id = d.id  AND (id.dm_status).domain IS null  AND 
			id.tld = '"+ @[$Package::TLD] +"' AND id.dm_source='"+ @[$Package::Tenant] +"'
		LEFT JOIN public.domain_rgp_status drs ON drs.domain_id = d.id AND drs.status_id = public.tc_id_from_name('public.rgp_status','add_grace_period')
        LEFT JOIN (SELECT max(value)::integer AS value FROM public.v_attribute 
					 WHERE  tld_name='"+ @[$Package::TLD] +"'  AND  tenant_name='"+ @[$Package::Tenant] +"' AND    key='tld.lifecycle.add_grace_period') attr ON true
		WHERE  drs.domain_id IS NULL         
       		AND id.ry_created_date IS NOT NULL AND (EXTRACT(EPOCH FROM (now()-id.ry_created_date))/3600) &lt;  attr.value::integer  
			 AND public.tc_name_from_id('itdp.domain_status',id.status_id)  IN ('Active'); -- for only active

 --rgp-- 	
	    INSERT INTO public.domain_rgp_status (domain_id, status_id,created_date,expiry_date ) 
	    SELECT  d.id, public.tc_id_from_name('public.rgp_status','redemption_grace_period'),id.deleted_date, id.deleted_date + (INTERVAL '1 hour' *attr.value::integer )
        FROM  public.domain  d           
        JOIN  itdp.domain  id ON id.id = d.id  AND (id.dm_status).domain IS null AND 
			id.tld = '"+ @[$Package::TLD] +"' AND id.dm_source='"+ @[$Package::Tenant] +"'
		LEFT JOIN public.domain_rgp_status drs ON drs.domain_id = d.id AND drs.status_id = public.tc_id_from_name('public.rgp_status','redemption_grace_period')
        LEFT JOIN (SELECT max(value)::integer AS value FROM public.v_attribute 
					 WHERE  tld_name='"+ @[$Package::TLD] +"'  AND  tenant_name='"+ @[$Package::Tenant] +"' AND    key='tld.lifecycle.redemption_grace_period') attr ON true
		WHERE  drs.domain_id IS NULL         
       		AND id.deleted_date IS NOT NULL 
       		--AND (EXTRACT(EPOCH FROM (now()-id.deleted_date))/3600) &lt;  attr.value::integer  
			  	AND public.tc_name_from_id('itdp.domain_status',id.status_id)  IN ('RGP');   --- only RGP

 --transfer_grace_period
        INSERT INTO public.domain_rgp_status (domain_id, status_id,created_date,expiry_date ) 
	    SELECT  d.id, public.tc_id_from_name('public.rgp_status','transfer_grace_period'),id.ry_transfered_date, id.ry_transfered_date + (INTERVAL '1 hour' *attr.value::integer )
        FROM  public.domain  d           
        JOIN  itdp.domain  id ON id.id = d.id  AND (id.dm_status).domain IS null AND 
			id.tld = '"+ @[$Package::TLD] +"' AND id.dm_source='"+ @[$Package::Tenant] +"'
		LEFT JOIN public.domain_rgp_status drs ON drs.domain_id = d.id AND drs.status_id = public.tc_id_from_name('public.rgp_status','transfer_grace_period')
        LEFT JOIN (SELECT max(value)::integer AS value FROM public.v_attribute 
					 WHERE  tld_name='"+ @[$Package::TLD] +"'  AND  tenant_name='"+ @[$Package::Tenant] +"' AND    key='tld.lifecycle.transfer_grace_period') attr ON true
		WHERE  drs.domain_id IS NULL         
       		AND id.ry_transfered_date IS NOT NULL AND (EXTRACT(EPOCH FROM (now()-id.ry_transfered_date))/3600) &lt;  attr.value::integer  
			 	AND public.tc_name_from_id('itdp.domain_status',id.status_id)  IN ('Active'); -- for only active	
 --ALTER TABLE public.domain_rgp_status ENABLE TRIGGER  domain_rgp_status_set_expiration_tg;         
COMMIT ;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;--ALTER TABLE public.domain_rgp_status DISABLE TRIGGER  domain_rgp_status_set_expiration_tg;&#xA;   -- add_grace_period&#xA;        INSERT INTO public.domain_rgp_status (domain_id, status_id,created_date,expiry_date ) &#xA;&#x9;    SELECT  d.id, public.tc_id_from_name('public.rgp_status','add_grace_period'),id.ry_created_date, id.ry_created_date + (INTERVAL '1 hour' *attr.value::integer )&#xA;       -- ,(EXTRACT(EPOCH FROM (now()-id.ry_created_date))/3600),attr.value::integer &#xA;        FROM  public.domain  d           &#xA;        JOIN  itdp.domain  id ON id.id = d.id  AND (id.dm_status).domain IS null  AND &#xA;&#x9;&#x9;&#x9;id.tld = 'co.in' AND id.dm_source='enom'&#xA;&#x9;&#x9;LEFT JOIN public.domain_rgp_status drs ON drs.domain_id = d.id AND drs.status_id = public.tc_id_from_name('public.rgp_status','add_grace_period')&#xA;        LEFT JOIN (SELECT max(value)::integer AS value FROM public.v_attribute &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE  tld_name='co.in'  AND  tenant_name='enom' AND    key='tld.lifecycle.add_grace_period') attr ON true&#xA;&#x9;&#x9;WHERE  drs.domain_id IS NULL         &#xA;       &#x9;&#x9;AND id.ry_created_date IS NOT NULL AND (EXTRACT(EPOCH FROM (now()-id.ry_created_date))/3600) &lt;  attr.value::integer  &#xA;&#x9;&#x9;&#x9; AND public.tc_name_from_id('itdp.domain_status',id.status_id)  IN ('Active'); -- for only active&#xA;&#xA; --rgp-- &#x9;&#xA;&#x9;    INSERT INTO public.domain_rgp_status (domain_id, status_id,created_date,expiry_date ) &#xA;&#x9;    SELECT  d.id, public.tc_id_from_name('public.rgp_status','redemption_grace_period'),id.deleted_date, id.deleted_date + (INTERVAL '1 hour' *attr.value::integer )&#xA;        FROM  public.domain  d           &#xA;        JOIN  itdp.domain  id ON id.id = d.id  AND (id.dm_status).domain IS null AND &#xA;&#x9;&#x9;&#x9;id.tld = 'co.in' AND id.dm_source='enom'&#xA;&#x9;&#x9;LEFT JOIN public.domain_rgp_status drs ON drs.domain_id = d.id AND drs.status_id = public.tc_id_from_name('public.rgp_status','redemption_grace_period')&#xA;        LEFT JOIN (SELECT max(value)::integer AS value FROM public.v_attribute &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE  tld_name='co.in'  AND  tenant_name='enom' AND    key='tld.lifecycle.redemption_grace_period') attr ON true&#xA;&#x9;&#x9;WHERE  drs.domain_id IS NULL         &#xA;       &#x9;&#x9;AND id.deleted_date IS NOT NULL &#xA;       &#x9;&#x9;--AND (EXTRACT(EPOCH FROM (now()-id.deleted_date))/3600) &lt;  attr.value::integer  &#xA;&#x9;&#x9;&#x9;  &#x9;AND public.tc_name_from_id('itdp.domain_status',id.status_id)  IN ('RGP');   --- only RGP&#xA;&#xA; --transfer_grace_period&#xA;        INSERT INTO public.domain_rgp_status (domain_id, status_id,created_date,expiry_date ) &#xA;&#x9;    SELECT  d.id, public.tc_id_from_name('public.rgp_status','transfer_grace_period'),id.ry_transfered_date, id.ry_transfered_date + (INTERVAL '1 hour' *attr.value::integer )&#xA;        FROM  public.domain  d           &#xA;        JOIN  itdp.domain  id ON id.id = d.id  AND (id.dm_status).domain IS null AND &#xA;&#x9;&#x9;&#x9;id.tld = 'co.in' AND id.dm_source='enom'&#xA;&#x9;&#x9;LEFT JOIN public.domain_rgp_status drs ON drs.domain_id = d.id AND drs.status_id = public.tc_id_from_name('public.rgp_status','transfer_grace_period')&#xA;        LEFT JOIN (SELECT max(value)::integer AS value FROM public.v_attribute &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE  tld_name='co.in'  AND  tenant_name='enom' AND    key='tld.lifecycle.transfer_grace_period') attr ON true&#xA;&#x9;&#x9;WHERE  drs.domain_id IS NULL         &#xA;       &#x9;&#x9;AND id.ry_transfered_date IS NOT NULL AND (EXTRACT(EPOCH FROM (now()-id.ry_transfered_date))/3600) &lt;  attr.value::integer  &#xA;&#x9;&#x9;&#x9; &#x9;AND public.tc_name_from_id('itdp.domain_status',id.status_id)  IN ('Active'); -- for only active&#x9;&#xA; --ALTER TABLE public.domain_rgp_status ENABLE TRIGGER  domain_rgp_status_set_expiration_tg;         &#xA;COMMIT ;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\populate domain_lock table"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{e177abd4-9e5f-4a52-9a83-a3720d1e93ce}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="populate domain_lock table"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"DO $$
	DECLARE    _sql text; 
BEGIN

SET work_mem TO '1900MB'  ;  
IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	DROP TABLE IF EXISTS itdp.temp_list_constraints;
	DROP TABLE IF EXISTS itdp.temp_list_index;
	--save list of CONSTRAINTS 
	CREATE TABLE itdp.temp_list_constraints
		AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname
		FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            
		WHERE conrelid =(SELECT 'public.domain_lock'::regclass::OID) );
	--save list of indexes		
	CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'public' AND TABLEname='domain_lock');
		
	--DROP constraints
	SELECT string_agg('ALTER TABLE public.domain_lock DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint	
	 	WHERE conrelid =(SELECT 'public.domain_lock'::regclass::OID) INTO _sql;
	IF _sql IS NOT NULL THEN                  
        EXECUTE _sql;
    END IF;
   
   -- drop  indexes --   
    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')
		   FROM   pg_index  i   
		   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'
		   WHERE  i.indrelid = 'public.domain_lock'::regclass AND    d.objid IS NULL   INTO _sql;
	IF _sql IS NOT NULL THEN                  
    	    EXECUTE _sql;
    END IF;
	 
END IF;

INSERT INTO public.domain_lock (domain_id, type_id, is_internal) 
        SELECT  domain_id, type_id, is_internal 	    
	    FROM itdp.domain_lock_temp;

IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	-- recreate constraints	 
     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt; 0 THEN 
		 EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);
	 END IF;	
	--recreate indexes
	IF (SELECT count(*) FROM itdp.temp_list_index) &gt; 0 THEN 
		EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);
	END IF;
END IF;

ANALYSE public.domain_lock; 
COMMIT ;
END $$"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="DO $$&#xA;&#x9;DECLARE    _sql text; &#xA;BEGIN&#xA;&#xA;SET work_mem TO '1900MB'  ;  &#xA;IF  'co.in' in ('com' ,'net') THEN&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_constraints;&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_index;&#xA;&#x9;--save list of CONSTRAINTS &#xA;&#x9;CREATE TABLE itdp.temp_list_constraints&#xA;&#x9;&#x9;AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname&#xA;&#x9;&#x9;FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            &#xA;&#x9;&#x9;WHERE conrelid =(SELECT 'public.domain_lock'::regclass::OID) );&#xA;&#x9;--save list of indexes&#x9;&#x9;&#xA;&#x9;CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'public' AND TABLEname='domain_lock');&#xA;&#x9;&#x9;&#xA;&#x9;--DROP constraints&#xA;&#x9;SELECT string_agg('ALTER TABLE public.domain_lock DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint&#x9;&#xA;&#x9; &#x9;WHERE conrelid =(SELECT 'public.domain_lock'::regclass::OID) INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;        EXECUTE _sql;&#xA;    END IF;&#xA;   &#xA;   -- drop  indexes --   &#xA;    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')&#xA;&#x9;&#x9;   FROM   pg_index  i   &#xA;&#x9;&#x9;   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'&#xA;&#x9;&#x9;   WHERE  i.indrelid = 'public.domain_lock'::regclass AND    d.objid IS NULL   INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;    &#x9;    EXECUTE _sql;&#xA;    END IF;&#xA;&#x9; &#xA;END IF;&#xA;&#xA;INSERT INTO public.domain_lock (domain_id, type_id, is_internal) &#xA;        SELECT  domain_id, type_id, is_internal &#x9;    &#xA;&#x9;    FROM itdp.domain_lock_temp;&#xA;&#xA;IF  'co.in' in ('com' ,'net') THEN&#xA;&#x9;-- recreate constraints&#x9; &#xA;     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt; 0 THEN &#xA;&#x9;&#x9; EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);&#xA;&#x9; END IF;&#x9;&#xA;&#x9;--recreate indexes&#xA;&#x9;IF (SELECT count(*) FROM itdp.temp_list_index) &gt; 0 THEN &#xA;&#x9;&#x9;EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);&#xA;&#x9;END IF;&#xA;END IF;&#xA;&#xA;ANALYSE public.domain_lock; &#xA;COMMIT ;&#xA;END $$" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Transfer domains, create import order"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Transfer domains and hosts"
              DTS:DTSID="{7949BC43-3B55-4DC0-B531-552C09D1501A}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Transfer domains, create import order"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
--ALTER TABLE public.domain DISABLE  TRIGGER zz_60_trail_domain;
--ALTER TABLE public.order_item_import_domain DISABLE  TRIGGER zz_60_trail_order_item_import_domain;
--ALTER TABLE public.order DISABLE TRIGGER  zz_60_trail_order;
--ALTER TABLE public.order DISABLE TRIGGER  order_set_metadata_tg;


WITH cte AS 
(	SELECT   d.id,t.tenant_customer_id,t.accreditation_tld_id, d.name,d.auth_info, d.roid, d.ry_created_date, d.ry_expiry_date, 
		d.ry_updated_date,d.ry_transfered_date, d.deleted_date, d.expiry_date, d.auto_renew, d.uname,
 gen_random_uuid() AS order_id, ot.id AS type_id,d.registration_period, d.tdp_min_namesrvers_issue
	FROM itdp.domain  d
	LEFT JOIN itdp.tld t ON t.tld_name=d.tld
  AND t.dm_source = d.dm_source	LEFT JOIN public.DOMAIN pd ON pd.id=d.id
	JOIN  public.order_type  ot ON  product_id=public.tc_id_from_name('public.product', 'domain') AND ot.name='import'
	WHERE  pd.id IS NULL AND 		(dm_status).domain  IS NULL AND 
		d.tld = '"+ @[$Package::TLD] +"' AND d.dm_source='"+ @[$Package::Tenant] +"'
),
-- domain
cte_d AS
(	INSERT INTO public.domain
		(id, tenant_customer_id, accreditation_tld_id, name, auth_info, roid, ry_created_date, ry_expiry_date,
	 ry_updated_date, ry_transfered_date, deleted_date, expiry_date,  uname, migration_info)
	SELECT  id,tenant_customer_id,accreditation_tld_id,name,auth_info, roid, ry_created_date, ry_expiry_date, ry_updated_date,ry_transfered_date,
		deleted_date, expiry_date, uname, "+ @[$Project::jsonb_domain_issue] +"
	FROM cte
),
--order
cte_o AS
(	INSERT INTO public.order
		( id, tenant_customer_id, type_id, customer_user_id, status_id)
	SELECT order_id,tenant_customer_id, type_id,NULL,public.tc_id_from_name('public.order_status', 'successful') AS status_id 
	FROM cte
)
-- order_item
INSERT INTO public.order_item_import_domain
	(id, order_id, status_id, name, registration_period, accreditation_tld_id,  auth_info, roid, 
	ry_created_date, ry_expiry_date, ry_transfered_date, deleted_date, expiry_date, domain_id)
SELECT id,order_id,  tc_id_from_name('order_item_status'::text, 'complete'::text) AS  status_id, name,registration_period,accreditation_tld_id,  auth_info, roid, 
	ry_created_date, ry_expiry_date, ry_transfered_date, deleted_date, expiry_date,id
FROM cte;
--ALTER TABLE public.domain ENABLE TRIGGER zz_60_trail_domain; 
--ALTER TABLE public.order_item_import_domain ENABLE  TRIGGER zz_60_trail_order_item_import_domain;
--ALTER TABLE public.order ENABLE TRIGGER  zz_60_trail_order;
--ALTER TABLE public.order ENABLE TRIGGER  order_set_metadata_tg;

ANALYSE public.domain;
ANALYSE public.order;
ANALYSE public.order_item_import_domain;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;--ALTER TABLE public.domain DISABLE  TRIGGER zz_60_trail_domain;&#xA;--ALTER TABLE public.order_item_import_domain DISABLE  TRIGGER zz_60_trail_order_item_import_domain;&#xA;--ALTER TABLE public.order DISABLE TRIGGER  zz_60_trail_order;&#xA;--ALTER TABLE public.order DISABLE TRIGGER  order_set_metadata_tg;&#xA;&#xA;&#xA;WITH cte AS &#xA;(&#x9;SELECT   d.id,t.tenant_customer_id,t.accreditation_tld_id, d.name,d.auth_info, d.roid, d.ry_created_date, d.ry_expiry_date, &#xA;&#x9;&#x9;d.ry_updated_date,d.ry_transfered_date, d.deleted_date, d.expiry_date, d.auto_renew, d.uname,&#xA; gen_random_uuid() AS order_id, ot.id AS type_id,d.registration_period, d.tdp_min_namesrvers_issue&#xA;&#x9;FROM itdp.domain  d&#xA;&#x9;LEFT JOIN itdp.tld t ON t.tld_name=d.tld&#xA;  AND t.dm_source = d.dm_source&#x9;LEFT JOIN public.DOMAIN pd ON pd.id=d.id&#xA;&#x9;JOIN  public.order_type  ot ON  product_id=public.tc_id_from_name('public.product', 'domain') AND ot.name='import'&#xA;&#x9;WHERE  pd.id IS NULL AND &#x9;&#x9;(dm_status).domain  IS NULL AND &#xA;&#x9;&#x9;d.tld = 'co.in' AND d.dm_source='enom'&#xA;),&#xA;-- domain&#xA;cte_d AS&#xA;(&#x9;INSERT INTO public.domain&#xA;&#x9;&#x9;(id, tenant_customer_id, accreditation_tld_id, name, auth_info, roid, ry_created_date, ry_expiry_date,&#xA;&#x9; ry_updated_date, ry_transfered_date, deleted_date, expiry_date,  uname, migration_info)&#xA;&#x9;SELECT  id,tenant_customer_id,accreditation_tld_id,name,auth_info, roid, ry_created_date, ry_expiry_date, ry_updated_date,ry_transfered_date,&#xA;&#x9;&#x9;deleted_date, expiry_date, uname, CASE   WHEN tdp_min_namesrvers_issue  THEN  '{&quot;allowed_nameserver_count_issue&quot;: true}'::jsonb  &#x9;END   as metadata&#xA;&#x9;FROM cte&#xA;),&#xA;--order&#xA;cte_o AS&#xA;(&#x9;INSERT INTO public.order&#xA;&#x9;&#x9;( id, tenant_customer_id, type_id, customer_user_id, status_id)&#xA;&#x9;SELECT order_id,tenant_customer_id, type_id,NULL,public.tc_id_from_name('public.order_status', 'successful') AS status_id &#xA;&#x9;FROM cte&#xA;)&#xA;-- order_item&#xA;INSERT INTO public.order_item_import_domain&#xA;&#x9;(id, order_id, status_id, name, registration_period, accreditation_tld_id,  auth_info, roid, &#xA;&#x9;ry_created_date, ry_expiry_date, ry_transfered_date, deleted_date, expiry_date, domain_id)&#xA;SELECT id,order_id,  tc_id_from_name('order_item_status'::text, 'complete'::text) AS  status_id, name,registration_period,accreditation_tld_id,  auth_info, roid, &#xA;&#x9;ry_created_date, ry_expiry_date, ry_transfered_date, deleted_date, expiry_date,id&#xA;FROM cte;&#xA;--ALTER TABLE public.domain ENABLE TRIGGER zz_60_trail_domain; &#xA;--ALTER TABLE public.order_item_import_domain ENABLE  TRIGGER zz_60_trail_order_item_import_domain;&#xA;--ALTER TABLE public.order ENABLE TRIGGER  zz_60_trail_order;&#xA;--ALTER TABLE public.order ENABLE TRIGGER  order_set_metadata_tg;&#xA;&#xA;ANALYSE public.domain;&#xA;ANALYSE public.order;&#xA;ANALYSE public.order_item_import_domain;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Vacuum public_domain"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{bcc2c8d4-f6ff-464a-9616-84f7be1a2615}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum public_domain"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  public.domain;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{FA6C0DF2-FC37-4170-A702-9145ED6D670B}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Vacuum public_domain"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Create itdp_temp_domain_lock" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{009ED751-DCF0-4384-8698-ADA7357D6581}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Vacuum public_domain"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Populate domain _RGP_status table" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{7198DB74-ACC8-42B4-A0FE-805D874CE1D1}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Transfer domains, create import order"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Vacuum public_domain" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain.PrecedenceConstraints[Constraint 8]"
              DTS:CreationName=""
              DTS:DTSID="{906516E8-EDC6-4EE6-B2C9-525E815067A4}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Create itdp_temp_domain_lock"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 8"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\populate domain_lock table" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Host"
          DTS:DTSID="{d9fea784-bc49-43a3-975c-2e09142f22cb}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:ISOLevel="4096"
          DTS:LocaleID="-1"
          DTS:ObjectName="03_2 Host">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Host"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{419a03f6-8e18-4208-8272-048b5bac6f6a}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Host"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
--ALTER TABLE public.host DISABLE  TRIGGER zz_60_trail_host;
--ALTER TABLE public.host DISABLE  TRIGGER zz_50_audit_host;
INSERT INTO public.host
( id, tenant_customer_id, name)
SELECT  h.id,t.tenant_customer_id,h.name
FROM itdp.host h
JOIN itdp.domain d ON h.itdp_domain_id=d.id AND d.dm_status IS null AND 
	d.tld = '"+ @[$Package::TLD] +"' AND d.dm_source='"+ @[$Package::Tenant] +"'
LEFT JOIN itdp.tld t ON t.tld_name=h.tld

  AND t.dm_source = h.dm_source
LEFT JOIN ONLY public.host ph ON ph.id=h.id
WHERE ph.id IS NULL AND 	
	h.tld='"+ @[$Package::TLD] +"' AND h.dm_source='"+ @[$Package::Tenant] +"'
    AND  h.id=h.host_id_unique_name AND h.host_id_unique_name_tdp IS NULL;
--ALTER TABLE public.host ENABLE TRIGGER zz_60_trail_host;	
--ALTER TABLE public.host ENABLE  TRIGGER zz_50_audit_host;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;--ALTER TABLE public.host DISABLE  TRIGGER zz_60_trail_host;&#xA;--ALTER TABLE public.host DISABLE  TRIGGER zz_50_audit_host;&#xA;INSERT INTO public.host&#xA;( id, tenant_customer_id, name)&#xA;SELECT  h.id,t.tenant_customer_id,h.name&#xA;FROM itdp.host h&#xA;JOIN itdp.domain d ON h.itdp_domain_id=d.id AND d.dm_status IS null AND &#xA;&#x9;d.tld = 'co.in' AND d.dm_source='enom'&#xA;LEFT JOIN itdp.tld t ON t.tld_name=h.tld&#xA;&#xA;  AND t.dm_source = h.dm_source&#xA;LEFT JOIN ONLY public.host ph ON ph.id=h.id&#xA;WHERE ph.id IS NULL AND &#x9;&#xA;&#x9;h.tld='co.in' AND h.dm_source='enom'&#xA;    AND  h.id=h.host_id_unique_name AND h.host_id_unique_name_tdp IS NULL;&#xA;--ALTER TABLE public.host ENABLE TRIGGER zz_60_trail_host;&#x9;&#xA;--ALTER TABLE public.host ENABLE  TRIGGER zz_50_audit_host;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Mark duplicate host by name in ITDP"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{add525ae-ca1f-468c-9d97-2d7a0ce1cb6a}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Mark duplicate host by name in ITDP"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
WITH cte AS    
(SELECT min(h.id::text) AS min_text_id ,h.name FROM itdp.host h
	JOIN itdp.DOMAIN d ON d.id=h.itdp_domain_id
	WHERE h.tld='"+ @[$Package::TLD] +"'  AND host_id_unique_name_tdp IS NULL AND d.dm_status IS NULL 	
	GROUP BY h.name)

UPDATE itdp.host h SET host_id_unique_name=cte.min_text_id::uuid
FROM itdp.host hh
JOIN itdp.DOMAIN d ON d.id=hh.itdp_domain_id
LEFT JOIN cte ON cte.name=hh.name
WHERE hh.id=h.id 
AND h.host_id_unique_name_tdp IS NULL 
AND d.dm_status IS NULL 
AND h.tld='"+ @[$Package::TLD] +"';

analyse itdp.host;
COMMIT ;
"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;WITH cte AS    &#xA;(SELECT min(h.id::text) AS min_text_id ,h.name FROM itdp.host h&#xA;&#x9;JOIN itdp.DOMAIN d ON d.id=h.itdp_domain_id&#xA;&#x9;WHERE h.tld='co.in'  AND host_id_unique_name_tdp IS NULL AND d.dm_status IS NULL &#x9;&#xA;&#x9;GROUP BY h.name)&#xA;&#xA;UPDATE itdp.host h SET host_id_unique_name=cte.min_text_id::uuid&#xA;FROM itdp.host hh&#xA;JOIN itdp.DOMAIN d ON d.id=hh.itdp_domain_id&#xA;LEFT JOIN cte ON cte.name=hh.name&#xA;WHERE hh.id=h.id &#xA;AND h.host_id_unique_name_tdp IS NULL &#xA;AND d.dm_status IS NULL &#xA;AND h.tld='co.in';&#xA;&#xA;analyse itdp.host;&#xA;COMMIT ;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Mark host that exists inTDP"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{76493996-922b-4417-8a75-85e7cd248724}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Mark host that exists inTDP"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
UPDATE itdp.host h SET host_id_unique_name_tdp=ph.id
FROM itdp.host hh
JOIN itdp.DOMAIN d ON d.id=hh.itdp_domain_id
JOIN only public.host ph ON ph.name=hh.name
JOIN v_tenant_customer vtc ON vtc.id=ph.tenant_customer_id 
WHERE hh.id=h.id AND d.dm_status IS NULL 
--AND h.host_id_unique_name_tdp IS NULL
 AND vtc.tenant_name =  '"+ @[$Package::Tenant]  +"'  AND h.tld = '"+ @[$Package::TLD] +"';
 ANALYSE itdp.host;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;UPDATE itdp.host h SET host_id_unique_name_tdp=ph.id&#xA;FROM itdp.host hh&#xA;JOIN itdp.DOMAIN d ON d.id=hh.itdp_domain_id&#xA;JOIN only public.host ph ON ph.name=hh.name&#xA;JOIN v_tenant_customer vtc ON vtc.id=ph.tenant_customer_id &#xA;WHERE hh.id=h.id AND d.dm_status IS NULL &#xA;--AND h.host_id_unique_name_tdp IS NULL&#xA; AND vtc.tenant_name =  'enom'  AND h.tld = 'co.in';&#xA; ANALYSE itdp.host;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Unigue host"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{A916BBE4-AFC1-42C2-9F88-37F7A5B589EE}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Unigue host"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"
DO $$
	DECLARE    _sql text;
BEGIN
SET work_mem TO '1900MB';

IF  '"+@[$Package::TLD] +"' in ('com') THEN
	DROP TABLE IF EXISTS itdp.temp_list_index;
	
	--save list of indexes		
	CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'itdp' AND TABLEname='host_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"');
		
	SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')
		   FROM   pg_index  i   
		   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'
		   WHERE  i.indrelid = 'itdp.host_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"'::regclass AND    d.objid IS NULL   INTO _sql;
	IF _sql IS NOT NULL THEN                  
    	    EXECUTE _sql;
    END IF;
END IF;

--  host_id_unique_name_tdp
UPDATE itdp.host h SET host_id_unique_name_tdp=ph.id
FROM itdp.host hh
	JOIN itdp.DOMAIN d ON d.id=hh.itdp_domain_id AND 
		 d.tld = '"+ @[$Package::TLD] +"' AND d.dm_source='"+ @[$Package::Tenant] +"'
		AND (d.dm_status).domain IS NULL 
	JOIN only public.host ph ON ph.name=hh.name
	JOIN v_tenant_customer vtc ON vtc.id=ph.tenant_customer_id 
	WHERE hh.id=h.id AND hh.tld = '"+ @[$Package::TLD] +"' and hh.dm_source='"+ @[$Package::Tenant] +"'
		 	AND vtc.tenant_name =  '"+ @[$Package::Tenant]  +"' 
			 AND h.tld = '"+ @[$Package::TLD] +"' AND h.dm_source='"+ @[$Package::Tenant] +"';
ANALYSE itdp.host;
COMMIT;

IF  '"+@[$Package::TLD] +"' in ('com') THEN
	CREATE INDEX  IF NOT EXISTS  host_enom_com_name_idx ON itdp.host_enom_com USING btree (name);
END IF;
-- host_id_unique_name
DROP TABLE IF EXISTS itdp.host_unique_temp;
CREATE TABLE itdp.host_unique_temp AS     
(SELECT min(h.id::text) AS min_text_id ,h.name
	FROM itdp.host h
	JOIN itdp.DOMAIN d ON d.id=h.itdp_domain_id AND 
		 d.tld = '"+ @[$Package::TLD] +"' AND d.dm_source='"+ @[$Package::Tenant] +"'
		AND (d.dm_status).domain IS NULL 
	WHERE  h.tld = '"+ @[$Package::TLD] +"' AND h.dm_source='"+ @[$Package::Tenant] +"'
 		AND host_id_unique_name_tdp IS NULL 	
	GROUP BY h.name);

IF  '"+@[$Package::TLD] +"' in ('com') THEN
	DROP INDEX  IF EXISTS itdp.host_enom_com_name_idx;
END IF;

UPDATE itdp.host h SET host_id_unique_name=cte.min_text_id::uuid
FROM itdp.host hh
JOIN itdp.DOMAIN d ON d.id=hh.itdp_domain_id AND 
		d.tld = '"+ @[$Package::TLD] +"' AND d.dm_source='"+ @[$Package::Tenant] +"'
		AND (d.dm_status).domain IS NULL 
JOIN itdp.host_unique_temp cte ON cte.name=hh.name
WHERE hh.id=h.id AND hh.tld = '"+ @[$Package::TLD] +"' and hh.dm_source='"+ @[$Package::Tenant] +"' 
	AND h.host_id_unique_name_tdp IS NULL 
	AND h.tld='"+ @[$Package::TLD] +"' AND h.dm_source='"+ @[$Package::Tenant] +"';


IF  '"+@[$Package::TLD] +"' in ('com') THEN
	--recreate indexes
 	IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN 
		EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);
	END IF;	
END IF;
ANALYSE itdp.host;
COMMIT;
END $$;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="&#xA;DO $$&#xA;&#x9;DECLARE    _sql text;&#xA;BEGIN&#xA;SET work_mem TO '1900MB';&#xA;&#xA;IF  'co.in' in ('com') THEN&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_index;&#xA;&#x9;&#xA;&#x9;--save list of indexes&#x9;&#x9;&#xA;&#x9;CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'itdp' AND TABLEname='host_enom_co.in');&#xA;&#x9;&#x9;&#xA;&#x9;SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')&#xA;&#x9;&#x9;   FROM   pg_index  i   &#xA;&#x9;&#x9;   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'&#xA;&#x9;&#x9;   WHERE  i.indrelid = 'itdp.host_enom_co.in'::regclass AND    d.objid IS NULL   INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;    &#x9;    EXECUTE _sql;&#xA;    END IF;&#xA;END IF;&#xA;&#xA;--  host_id_unique_name_tdp&#xA;UPDATE itdp.host h SET host_id_unique_name_tdp=ph.id&#xA;FROM itdp.host hh&#xA;&#x9;JOIN itdp.DOMAIN d ON d.id=hh.itdp_domain_id AND &#xA;&#x9;&#x9; d.tld = 'co.in' AND d.dm_source='enom'&#xA;&#x9;&#x9;AND (d.dm_status).domain IS NULL &#xA;&#x9;JOIN only public.host ph ON ph.name=hh.name&#xA;&#x9;JOIN v_tenant_customer vtc ON vtc.id=ph.tenant_customer_id &#xA;&#x9;WHERE hh.id=h.id AND hh.tld = 'co.in' and hh.dm_source='enom'&#xA;&#x9;&#x9; &#x9;AND vtc.tenant_name =  'enom' &#xA;&#x9;&#x9;&#x9; AND h.tld = 'co.in' AND h.dm_source='enom';&#xA;ANALYSE itdp.host;&#xA;COMMIT;&#xA;&#xA;IF  'co.in' in ('com') THEN&#xA;&#x9;CREATE INDEX  IF NOT EXISTS  host_enom_com_name_idx ON itdp.host_enom_com USING btree (name);&#xA;END IF;&#xA;-- host_id_unique_name&#xA;DROP TABLE IF EXISTS itdp.host_unique_temp;&#xA;CREATE TABLE itdp.host_unique_temp AS     &#xA;(SELECT min(h.id::text) AS min_text_id ,h.name&#xA;&#x9;FROM itdp.host h&#xA;&#x9;JOIN itdp.DOMAIN d ON d.id=h.itdp_domain_id AND &#xA;&#x9;&#x9; d.tld = 'co.in' AND d.dm_source='enom'&#xA;&#x9;&#x9;AND (d.dm_status).domain IS NULL &#xA;&#x9;WHERE  h.tld = 'co.in' AND h.dm_source='enom'&#xA; &#x9;&#x9;AND host_id_unique_name_tdp IS NULL &#x9;&#xA;&#x9;GROUP BY h.name);&#xA;&#xA;IF  'co.in' in ('com') THEN&#xA;&#x9;DROP INDEX  IF EXISTS itdp.host_enom_com_name_idx;&#xA;END IF;&#xA;&#xA;UPDATE itdp.host h SET host_id_unique_name=cte.min_text_id::uuid&#xA;FROM itdp.host hh&#xA;JOIN itdp.DOMAIN d ON d.id=hh.itdp_domain_id AND &#xA;&#x9;&#x9;d.tld = 'co.in' AND d.dm_source='enom'&#xA;&#x9;&#x9;AND (d.dm_status).domain IS NULL &#xA;JOIN itdp.host_unique_temp cte ON cte.name=hh.name&#xA;WHERE hh.id=h.id AND hh.tld = 'co.in' and hh.dm_source='enom' &#xA;&#x9;AND h.host_id_unique_name_tdp IS NULL &#xA;&#x9;AND h.tld='co.in' AND h.dm_source='enom';&#xA;&#xA;&#xA;IF  'co.in' in ('com') THEN&#xA;&#x9;--recreate indexes&#xA; &#x9;IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN &#xA;&#x9;&#x9;EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);&#xA;&#x9;END IF;&#x9;&#xA;END IF;&#xA;ANALYSE itdp.host;&#xA;COMMIT;&#xA;END $$;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Vacuum itdp_host"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{cdef10d4-cc2a-4071-bf60-df557f65943a}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum itdp_host"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  itdp.host" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{ef0a40f1-72bc-4261-bbbf-9bb9bd15634a}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Mark host that exists inTDP"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Vacuum itdp_host" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{E7E9D2D5-0250-4D6D-8CE4-A62A1A2AEE9D}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Mark duplicate host by name in ITDP"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Host" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{2E5FDE2E-973C-4654-9648-C2517360BA56}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Unigue host"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Host" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{43b91938-75c1-487e-b2bc-06e392e07414}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Vacuum itdp_host"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Mark duplicate host by name in ITDP" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{697801D4-A6ED-4F22-93EE-A411A6DE189E}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:ISOLevel="4096"
          DTS:LocaleID="-1"
          DTS:ObjectName="03_3 Contact">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\contact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{75D1DB6F-E348-4F56-83F8-4AFAA73B68B6}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="contact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="5">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"DO $$
  DECLARE    _sql text;  
BEGIN
SET work_mem TO '1900MB';

-- contact
--ALTER TABLE public.contact DISABLE  TRIGGER zz_60_trail_contact;

IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	--DROP all table indexes and constraints
	--UPDATE pg_index SET indisready=FALSE 	WHERE indrelid =(SELECT 'public.contact'::regclass::OID);
	DROP TABLE IF EXISTS itdp.temp_list_constraints;
	DROP TABLE IF EXISTS itdp.temp_list_index;
	--save list of CONSTRAINTS 
	CREATE TABLE itdp.temp_list_constraints
		AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname
		FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            
		WHERE conrelid =(SELECT 'public.contact'::regclass::OID) AND contype&lt;&gt;'p' AND conname&lt;&gt;'contact_short_id_key');
	--save list of indexes		
	CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'public' AND TABLEname='contact');
		
	--DROP constraints
	SELECT string_agg('ALTER TABLE public.contact DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint	
	 	WHERE conrelid =(SELECT 'public.contact'::regclass::OID) AND contype&lt;&gt;'p' AND conname&lt;&gt;'contact_short_id_key' INTO _sql;
	IF _sql IS NOT NULL THEN                  
        EXECUTE _sql;
    END IF;
   
   -- drop  indexes --   
    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')
		   FROM   pg_index  i   
		   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'
		   WHERE  i.indrelid = 'public.contact'::regclass AND    d.objid IS NULL   INTO _sql;
	IF _sql IS NOT NULL THEN                  
    	    EXECUTE _sql;
    END IF;
END IF;

INSERT INTO public.contact 
	(id, type_id, title, org_reg, org_vat, org_duns, tenant_customer_id, email, phone, fax, country, LANGUAGE,migration_info)
SELECT  c.id, type_id,	c.title, c.org_reg, c.org_vat, c.org_duns, tenant_customer_id, c.email, c.phone, c.fax, c.country,
	c.LANGUAGE, metadata
FROM itdp.contact_temp c;

IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	--Reenable all table indexes
	--UPDATE pg_index SET indisready=TRUE 	WHERE indrelid =(SELECT 'public.contact'::regclass::OID);
-- recreate constraints	 
     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN 
		 EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);
	 END IF;	
	--recreate indexes
	IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN 
		EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);
	END IF;
END IF;
--ALTER TABLE public.contact ENABLE TRIGGER zz_60_trail_contact;	
ANALYSE public.contact;
COMMIT;
END $$;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="DO $$&#xA;  DECLARE    _sql text;  &#xA;BEGIN&#xA;SET work_mem TO '1900MB';&#xA;&#xA;-- contact&#xA;--ALTER TABLE public.contact DISABLE  TRIGGER zz_60_trail_contact;&#xA;&#xA;IF  'co.in' in ('com' ,'net') THEN&#xA;&#x9;--DROP all table indexes and constraints&#xA;&#x9;--UPDATE pg_index SET indisready=FALSE &#x9;WHERE indrelid =(SELECT 'public.contact'::regclass::OID);&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_constraints;&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_index;&#xA;&#x9;--save list of CONSTRAINTS &#xA;&#x9;CREATE TABLE itdp.temp_list_constraints&#xA;&#x9;&#x9;AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname&#xA;&#x9;&#x9;FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            &#xA;&#x9;&#x9;WHERE conrelid =(SELECT 'public.contact'::regclass::OID) AND contype&lt;&gt;'p' AND conname&lt;&gt;'contact_short_id_key');&#xA;&#x9;--save list of indexes&#x9;&#x9;&#xA;&#x9;CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'public' AND TABLEname='contact');&#xA;&#x9;&#x9;&#xA;&#x9;--DROP constraints&#xA;&#x9;SELECT string_agg('ALTER TABLE public.contact DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint&#x9;&#xA;&#x9; &#x9;WHERE conrelid =(SELECT 'public.contact'::regclass::OID) AND contype&lt;&gt;'p' AND conname&lt;&gt;'contact_short_id_key' INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;        EXECUTE _sql;&#xA;    END IF;&#xA;   &#xA;   -- drop  indexes --   &#xA;    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')&#xA;&#x9;&#x9;   FROM   pg_index  i   &#xA;&#x9;&#x9;   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'&#xA;&#x9;&#x9;   WHERE  i.indrelid = 'public.contact'::regclass AND    d.objid IS NULL   INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;    &#x9;    EXECUTE _sql;&#xA;    END IF;&#xA;END IF;&#xA;&#xA;INSERT INTO public.contact &#xA;&#x9;(id, type_id, title, org_reg, org_vat, org_duns, tenant_customer_id, email, phone, fax, country, LANGUAGE,migration_info)&#xA;SELECT  c.id, type_id,&#x9;c.title, c.org_reg, c.org_vat, c.org_duns, tenant_customer_id, c.email, c.phone, c.fax, c.country,&#xA;&#x9;c.LANGUAGE, metadata&#xA;FROM itdp.contact_temp c;&#xA;&#xA;IF  'co.in' in ('com' ,'net') THEN&#xA;&#x9;--Reenable all table indexes&#xA;&#x9;--UPDATE pg_index SET indisready=TRUE &#x9;WHERE indrelid =(SELECT 'public.contact'::regclass::OID);&#xA;-- recreate constraints&#x9; &#xA;     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN &#xA;&#x9;&#x9; EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);&#xA;&#x9; END IF;&#x9;&#xA;&#x9;--recreate indexes&#xA;&#x9;IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN &#xA;&#x9;&#x9;EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);&#xA;&#x9;END IF;&#xA;END IF;&#xA;--ALTER TABLE public.contact ENABLE TRIGGER zz_60_trail_contact;&#x9;&#xA;ANALYSE public.contact;&#xA;COMMIT;&#xA;END $$;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\contact_postal"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{004ca503-9c80-4192-b126-f4ba46fcfeca}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="contact_postal"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="5">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"DO $$
     DECLARE    _sql text; 
BEGIN
SET work_mem TO '1900MB'; 
--ALTER TABLE public.contact_postal DISABLE  TRIGGER zz_60_trail_contact_postal;

IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	DROP TABLE IF EXISTS itdp.temp_list_constraints;
	DROP TABLE IF EXISTS itdp.temp_list_index;
	--save list of CONSTRAINTS 
	CREATE TABLE itdp.temp_list_constraints
		AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname
		FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            
		WHERE conrelid =(SELECT 'public.contact_postal'::regclass::OID) );
	--save list of indexes		
	CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'public' AND TABLEname='contact_postal');
		
	--DROP constraints
	SELECT string_agg('ALTER TABLE public.contact_postal DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint	
	 	WHERE conrelid =(SELECT 'public.contact_postal'::regclass::OID) INTO _sql;
	IF _sql IS NOT NULL THEN                  
        EXECUTE _sql;
    END IF;
   
   -- drop  indexes --   
    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')
		   FROM   pg_index  i   
		   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'
		   WHERE  i.indrelid = 'public.contact_postal'::regclass AND    d.objid IS NULL   INTO _sql;
	IF _sql IS NOT NULL THEN                  
    	    EXECUTE _sql;
    END IF;
END IF ;

INSERT INTO public.contact_postal 
	(id, contact_id, is_international, first_name, last_name, org_name, address1, address2, address3, city, postal_code, state)
SELECT  c.id, c.contact_id, c.is_international, c.first_name, c.last_name, c.org_name, c.address1, c.address2, c.address3, c.city, c.postal_code, c.state
FROM itdp.contact_postal_temp c;

IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	-- recreate constraints	 
     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN 
		 EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);
	 END IF;	
	--recreate indexes
	IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN 
		EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);
	END IF;
END IF ;

--ALTER TABLE public.contact_postal ENABLE  TRIGGER zz_60_trail_contact_postal;
ANALYSE public.contact_postal;
COMMIT;
END $$"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="DO $$&#xA;     DECLARE    _sql text; &#xA;BEGIN&#xA;SET work_mem TO '1900MB'; &#xA;--ALTER TABLE public.contact_postal DISABLE  TRIGGER zz_60_trail_contact_postal;&#xA;&#xA;IF  'co.in' in ('com' ,'net') THEN&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_constraints;&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_index;&#xA;&#x9;--save list of CONSTRAINTS &#xA;&#x9;CREATE TABLE itdp.temp_list_constraints&#xA;&#x9;&#x9;AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname&#xA;&#x9;&#x9;FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            &#xA;&#x9;&#x9;WHERE conrelid =(SELECT 'public.contact_postal'::regclass::OID) );&#xA;&#x9;--save list of indexes&#x9;&#x9;&#xA;&#x9;CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'public' AND TABLEname='contact_postal');&#xA;&#x9;&#x9;&#xA;&#x9;--DROP constraints&#xA;&#x9;SELECT string_agg('ALTER TABLE public.contact_postal DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint&#x9;&#xA;&#x9; &#x9;WHERE conrelid =(SELECT 'public.contact_postal'::regclass::OID) INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;        EXECUTE _sql;&#xA;    END IF;&#xA;   &#xA;   -- drop  indexes --   &#xA;    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')&#xA;&#x9;&#x9;   FROM   pg_index  i   &#xA;&#x9;&#x9;   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'&#xA;&#x9;&#x9;   WHERE  i.indrelid = 'public.contact_postal'::regclass AND    d.objid IS NULL   INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;    &#x9;    EXECUTE _sql;&#xA;    END IF;&#xA;END IF ;&#xA;&#xA;INSERT INTO public.contact_postal &#xA;&#x9;(id, contact_id, is_international, first_name, last_name, org_name, address1, address2, address3, city, postal_code, state)&#xA;SELECT  c.id, c.contact_id, c.is_international, c.first_name, c.last_name, c.org_name, c.address1, c.address2, c.address3, c.city, c.postal_code, c.state&#xA;FROM itdp.contact_postal_temp c;&#xA;&#xA;IF  'co.in' in ('com' ,'net') THEN&#xA;&#x9;-- recreate constraints&#x9; &#xA;     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN &#xA;&#x9;&#x9; EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);&#xA;&#x9; END IF;&#x9;&#xA;&#x9;--recreate indexes&#xA;&#x9;IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN &#xA;&#x9;&#x9;EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);&#xA;&#x9;END IF;&#xA;END IF ;&#xA;&#xA;--ALTER TABLE public.contact_postal ENABLE  TRIGGER zz_60_trail_contact_postal;&#xA;ANALYSE public.contact_postal;&#xA;COMMIT;&#xA;END $$" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Create itdp_contact_postal_temp"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{3ed81a00-a2d5-4481-a35b-0dcabf4e5389}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create itdp_contact_postal_temp"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="5">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"DROP TABLE IF EXISTS itdp.contact_postal_temp;         
CREATE unlogged TABLE itdp.contact_postal_temp  AS 
(SELECT  c.id, c.contact_id, c.is_international, c.first_name, c.last_name, c.org_name, c.address1, c.address2, c.address3, c.city, c.postal_code, c.state
FROM itdp.contact_postal c
JOIN ONLY public.contact pc ON pc.id=c.contact_id 
LEFT JOIN public.contact_postal pcp ON pcp.id=c.id
WHERE  pcp.id IS NULL AND 	
	c.tld='"+ @[$Package::TLD] +"' AND c.dm_source = '"+@[$Package::Tenant]+"' );"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="DROP TABLE IF EXISTS itdp.contact_postal_temp;         &#xA;CREATE unlogged TABLE itdp.contact_postal_temp  AS &#xA;(SELECT  c.id, c.contact_id, c.is_international, c.first_name, c.last_name, c.org_name, c.address1, c.address2, c.address3, c.city, c.postal_code, c.state&#xA;FROM itdp.contact_postal c&#xA;JOIN ONLY public.contact pc ON pc.id=c.contact_id &#xA;LEFT JOIN public.contact_postal pcp ON pcp.id=c.id&#xA;WHERE  pcp.id IS NULL AND &#x9;&#xA;&#x9;c.tld='co.in' AND c.dm_source = 'enom' );" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Create itdp_contact_temp"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{5df664b4-9522-4244-aad5-26ff9231dcc2}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create itdp_contact_temp"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="5">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"DROP TABLE IF EXISTS itdp.contact_temp;         
CREATE unlogged TABLE itdp.contact_temp  AS 
(SELECT  c.id, pct.id  as type_id,
	c.title, c.org_reg, c.org_vat, c.org_duns, t.tenant_customer_id, c.email, c.phone, c.fax, c.country,
	c.LANGUAGE, "+ @[$Project::jsonb_contact_issue] +"
FROM itdp.contact c
JOIN itdp.DOMAIN d ON d.id = c.itdp_domain_id AND d.tld='"+ @[$Package::TLD] +"' AND d.dm_source = '"+@[$Package::Tenant]+"' 
JOIN itdp.contact_type ict ON ict.id=c.type_id
JOIN public.contact_type pct ON pct.name=ict.name
LEFT JOIN itdp.tld t ON t.tld_name=c.tld  AND c.dm_source = t.dm_source
LEFT JOIN ONLY public.contact pc ON pc.id=c.id
WHERE  c.tld='"+ @[$Package::TLD] +"' AND c.dm_source = '"+@[$Package::Tenant]+"' 
AND pc.id IS NULL AND (d.dm_status).domain IS NULL)	;
"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="DROP TABLE IF EXISTS itdp.contact_temp;         &#xA;CREATE unlogged TABLE itdp.contact_temp  AS &#xA;(SELECT  c.id, pct.id  as type_id,&#xA;&#x9;c.title, c.org_reg, c.org_vat, c.org_duns, t.tenant_customer_id, c.email, c.phone, c.fax, c.country,&#xA;&#x9;c.LANGUAGE, CASE  WHEN TDP_contact_country_issue THEN   &#x9;CASE WHEN placeholder THEN  '{&quot;data_source&quot;: &quot;Enom&quot;, &quot;invalid_fields&quot;: [&quot;country&quot;], &quot;lost_handle&quot;: true, &quot;placeholder&quot;: true}'::jsonb &#x9;ELSE '{&quot;data_source&quot;: &quot;Enom&quot;, &quot;invalid_fields&quot;: [&quot;country&quot;], &quot;lost_handle&quot;: true}'::jsonb END ELSE  &#x9;CASE WHEN placeholder THEN '{&quot;data_source&quot;: &quot;Enom&quot;,  &quot;lost_handle&quot;: true, &quot;placeholder&quot;: true}'::jsonb &#x9;ELSE  '{&quot;data_source&quot;: &quot;Enom&quot;, &quot;lost_handle&quot;: true}'::jsonb  END END AS metadata&#xA;FROM itdp.contact c&#xA;JOIN itdp.DOMAIN d ON d.id = c.itdp_domain_id AND d.tld='co.in' AND d.dm_source = 'enom' &#xA;JOIN itdp.contact_type ict ON ict.id=c.type_id&#xA;JOIN public.contact_type pct ON pct.name=ict.name&#xA;LEFT JOIN itdp.tld t ON t.tld_name=c.tld  AND c.dm_source = t.dm_source&#xA;LEFT JOIN ONLY public.contact pc ON pc.id=c.id&#xA;WHERE  c.tld='co.in' AND c.dm_source = 'enom' &#xA;AND pc.id IS NULL AND (d.dm_status).domain IS NULL)&#x9;;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Create itdp_domain_contact_temp"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{eee19a47-160f-41b8-981b-82f4826bad43}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create itdp_domain_contact_temp"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="6">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"
DROP TABLE IF EXISTS itdp.domain_contact_temp;         
CREATE unlogged TABLE itdp.domain_contact_temp  AS 
(SELECT  ic.itdp_domain_id, ic.id AS contact_id, dct.id AS domain_contact_type_id, NULL AS handle, ic.is_private
         FROM itdp.contact ic
         JOIN ONLY public.contact c ON c.id=ic.id 
         JOIN public.domain d ON d.id=ic.itdp_domain_id  
         JOIN itdp.domain id ON id.TLD  = '"+ @[$Package::TLD] +"' AND id.dm_source = '"+@[$Package::Tenant]+"' AND  id.id=ic.itdp_domain_id  AND (id.dm_status).domain IS NULL
         JOIN public.domain_contact_type dct ON dct.name=ic.domain_contact_type_name
         LEFT JOIN  public.domain_contact pdc ON pdc.contact_id = ic.id AND pdc.domain_id =ic.itdp_domain_id 
         WHERE ic.TLD  = '"+ @[$Package::TLD] +"' AND ic.dm_source = '"+@[$Package::Tenant]+"'           
         AND pdc.contact_id IS NULL);  
"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="&#xA;DROP TABLE IF EXISTS itdp.domain_contact_temp;         &#xA;CREATE unlogged TABLE itdp.domain_contact_temp  AS &#xA;(SELECT  ic.itdp_domain_id, ic.id AS contact_id, dct.id AS domain_contact_type_id, NULL AS handle, ic.is_private&#xA;         FROM itdp.contact ic&#xA;         JOIN ONLY public.contact c ON c.id=ic.id &#xA;         JOIN public.domain d ON d.id=ic.itdp_domain_id  &#xA;         JOIN itdp.domain id ON id.TLD  = 'co.in' AND id.dm_source = 'enom' AND  id.id=ic.itdp_domain_id  AND (id.dm_status).domain IS NULL&#xA;         JOIN public.domain_contact_type dct ON dct.name=ic.domain_contact_type_name&#xA;         LEFT JOIN  public.domain_contact pdc ON pdc.contact_id = ic.id AND pdc.domain_id =ic.itdp_domain_id &#xA;         WHERE ic.TLD  = 'co.in' AND ic.dm_source = 'enom'           &#xA;         AND pdc.contact_id IS NULL);  &#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\domain_contact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{38367cdb-d5c6-40ad-b7c3-d571295e8f1f}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="domain_contact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="6">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"DO $$
	  DECLARE    _sql text; 
BEGIN
SET work_mem TO '1900MB'; 
--ALTER TABLE public.domain_contact DISABLE  TRIGGER zz_60_trail_domain_contact; 
--ALTER TABLE public.domain_contact DISABLE  TRIGGER zz_50_audit_domain_contact;

IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	DROP TABLE IF EXISTS itdp.temp_list_constraints2;
	DROP TABLE IF EXISTS itdp.temp_list_index2;
	--save list of CONSTRAINTS 
	CREATE TABLE itdp.temp_list_constraints2
		AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname
		FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            
		WHERE conrelid =(SELECT 'public.domain_contact'::regclass::OID) );
	--save list of indexes		
	CREATE TABLE itdp.temp_list_index2 AS (SELECT * FROM pg_indexes WHERE schemaname = 'public' AND TABLEname='domain_contact');
		
	--DROP constraints
	SELECT string_agg('ALTER TABLE public.domain_contact DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint	
	 	WHERE conrelid =(SELECT 'public.domain_contact'::regclass::OID) INTO _sql;
	IF _sql IS NOT NULL THEN                  
        EXECUTE _sql;
    END IF;
   
   -- drop  indexes --   
    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')
		   FROM   pg_index  i   
		   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'
		   WHERE  i.indrelid = 'public.domain_contact'::regclass AND    d.objid IS NULL   INTO _sql;
	IF _sql IS NOT NULL THEN                  
    	    EXECUTE _sql;
    END IF;

END IF;

INSERT INTO public.domain_contact  ( domain_id, contact_id, domain_contact_type_id,is_private)
SELECT  itdp_domain_id, contact_id,domain_contact_type_id,is_private  FROM itdp.domain_contact_temp;

IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	-- recreate constraints	 
     IF (SELECT count(*) FROM itdp.temp_list_constraints2) &gt;0 THEN 
		 EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints2);
	 END IF;	
	--recreate indexes
	IF (SELECT count(*) FROM itdp.temp_list_index2) &gt;0 THEN 
		EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index2);
	END IF;
END IF;


--ALTER TABLE public.domain_contact ENABLE TRIGGER zz_60_trail_domain_contact;
--ALTER TABLE public.domain_contact ENABLE  TRIGGER zz_50_audit_domain_contact;
ANALYSE public.domain_contact;
COMMIT;
END $$
"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="DO $$&#xA;&#x9;  DECLARE    _sql text; &#xA;BEGIN&#xA;SET work_mem TO '1900MB'; &#xA;--ALTER TABLE public.domain_contact DISABLE  TRIGGER zz_60_trail_domain_contact; &#xA;--ALTER TABLE public.domain_contact DISABLE  TRIGGER zz_50_audit_domain_contact;&#xA;&#xA;IF  'co.in' in ('com' ,'net') THEN&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_constraints2;&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_index2;&#xA;&#x9;--save list of CONSTRAINTS &#xA;&#x9;CREATE TABLE itdp.temp_list_constraints2&#xA;&#x9;&#x9;AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname&#xA;&#x9;&#x9;FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            &#xA;&#x9;&#x9;WHERE conrelid =(SELECT 'public.domain_contact'::regclass::OID) );&#xA;&#x9;--save list of indexes&#x9;&#x9;&#xA;&#x9;CREATE TABLE itdp.temp_list_index2 AS (SELECT * FROM pg_indexes WHERE schemaname = 'public' AND TABLEname='domain_contact');&#xA;&#x9;&#x9;&#xA;&#x9;--DROP constraints&#xA;&#x9;SELECT string_agg('ALTER TABLE public.domain_contact DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint&#x9;&#xA;&#x9; &#x9;WHERE conrelid =(SELECT 'public.domain_contact'::regclass::OID) INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;        EXECUTE _sql;&#xA;    END IF;&#xA;   &#xA;   -- drop  indexes --   &#xA;    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')&#xA;&#x9;&#x9;   FROM   pg_index  i   &#xA;&#x9;&#x9;   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'&#xA;&#x9;&#x9;   WHERE  i.indrelid = 'public.domain_contact'::regclass AND    d.objid IS NULL   INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;    &#x9;    EXECUTE _sql;&#xA;    END IF;&#xA;&#xA;END IF;&#xA;&#xA;INSERT INTO public.domain_contact  ( domain_id, contact_id, domain_contact_type_id,is_private)&#xA;SELECT  itdp_domain_id, contact_id,domain_contact_type_id,is_private  FROM itdp.domain_contact_temp;&#xA;&#xA;IF  'co.in' in ('com' ,'net') THEN&#xA;&#x9;-- recreate constraints&#x9; &#xA;     IF (SELECT count(*) FROM itdp.temp_list_constraints2) &gt;0 THEN &#xA;&#x9;&#x9; EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints2);&#xA;&#x9; END IF;&#x9;&#xA;&#x9;--recreate indexes&#xA;&#x9;IF (SELECT count(*) FROM itdp.temp_list_index2) &gt;0 THEN &#xA;&#x9;&#x9;EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index2);&#xA;&#x9;END IF;&#xA;END IF;&#xA;&#xA;&#xA;--ALTER TABLE public.domain_contact ENABLE TRIGGER zz_60_trail_domain_contact;&#xA;--ALTER TABLE public.domain_contact ENABLE  TRIGGER zz_50_audit_domain_contact;&#xA;ANALYSE public.domain_contact;&#xA;COMMIT;&#xA;END $$&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Populate lost handle flag in contact_metadata"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{7E9A6B05-96F2-4E71-A4EE-55C6E12062A0}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Populate lost handle flag in contact_metadata"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;
ALTER TABLE public.contact DISABLE  TRIGGER zz_60_trail_contact;
ALTER TABLE public.contact DISABLE  TRIGGER zz_50_audit_contact;
UPDATE public.contact pc
SET metadata = jsonb_set(pc.metadata, '{migration_lost_handle}', 'true'::jsonb)
FROM itdp.contact c
JOIN itdp.domain d ON d.id=c.itdp_domain_id  AND d.dm_status IS null
JOIN public.domain_contact dc ON dc.contact_id=c.id AND handle IS NULL
JOIN public.contact pc1 ON pc1.id=c.id
JOIN public.v_tenant_customer vtc  ON vtc.id=pc1.tenant_customer_id
WHERE c.id=pc.id AND 
	pc.metadata IS NOT NULL AND c.tld='"+ @[$Package::TLD]+ "'  AND tenant_name='"+  @[$Package::Tenant] +"'	;
ALTER TABLE public.contact ENABLE TRIGGER zz_60_trail_contact;	
ALTER TABLE public.contact ENABLE TRIGGER zz_50_audit_contact;
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;&#xA;ALTER TABLE public.contact DISABLE  TRIGGER zz_60_trail_contact;&#xA;ALTER TABLE public.contact DISABLE  TRIGGER zz_50_audit_contact;&#xA;UPDATE public.contact pc&#xA;SET metadata = jsonb_set(pc.metadata, '{migration_lost_handle}', 'true'::jsonb)&#xA;FROM itdp.contact c&#xA;JOIN itdp.domain d ON d.id=c.itdp_domain_id  AND d.dm_status IS null&#xA;JOIN public.domain_contact dc ON dc.contact_id=c.id AND handle IS NULL&#xA;JOIN public.contact pc1 ON pc1.id=c.id&#xA;JOIN public.v_tenant_customer vtc  ON vtc.id=pc1.tenant_customer_id&#xA;WHERE c.id=pc.id AND &#xA;&#x9;pc.metadata IS NOT NULL AND c.tld='co.in'  AND tenant_name='enom'&#x9;;&#xA;ALTER TABLE public.contact ENABLE TRIGGER zz_60_trail_contact;&#x9;&#xA;ALTER TABLE public.contact ENABLE TRIGGER zz_50_audit_contact;&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\provision_contact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{a59a6620-7509-4a9e-931a-edb11baea918}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="provision_contact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="7">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN;    
	ALTER TABLE provision_contact DISABLE TRIGGER   provision_contact_job_tg;  --DO NOT CREATE a job 
    INSERT INTO public.provision_contact   (tenant_customer_id, provisioned_date, status_id,  contact_id, accreditation_id, handle)
         SELECT d.tenant_customer_id, c.created_date,  tc_id_from_name('provision_status'::text, 'completed'::text) ,  dc.contact_id, vat.accreditation_id, dc.handle
         FROM public.domain_contact dc
         JOIN public.DOMAIN d ON d.id =dc.domain_id        
         JOIN public.contact c ON c.id =dc.contact_id   
         JOIN v_accreditation_tld vat ON vat.accreditation_tld_id =d.accreditation_tld_id
         LEFT JOIN  public.provision_contact pc ON pc.contact_id = dc.contact_id AND pc.handle =dc.handle 
         WHERE vat.tld_name  = '"+ @[$Package::TLD] +"' AND vat.tenant_name ='enom'          
         AND pc.contact_id IS NULL;  
 	ALTER TABLE provision_contact ENABLE TRIGGER   provision_contact_job_tg;       
 COMMIT;   "</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN;    &#xA;&#x9;ALTER TABLE provision_contact DISABLE TRIGGER   provision_contact_job_tg;  --DO NOT CREATE a job &#xA;    INSERT INTO public.provision_contact   (tenant_customer_id, provisioned_date, status_id,  contact_id, accreditation_id, handle)&#xA;         SELECT d.tenant_customer_id, c.created_date,  tc_id_from_name('provision_status'::text, 'completed'::text) ,  dc.contact_id, vat.accreditation_id, dc.handle&#xA;         FROM public.domain_contact dc&#xA;         JOIN public.DOMAIN d ON d.id =dc.domain_id        &#xA;         JOIN public.contact c ON c.id =dc.contact_id   &#xA;         JOIN v_accreditation_tld vat ON vat.accreditation_tld_id =d.accreditation_tld_id&#xA;         LEFT JOIN  public.provision_contact pc ON pc.contact_id = dc.contact_id AND pc.handle =dc.handle &#xA;         WHERE vat.tld_name  = 'co.in' AND vat.tenant_name ='enom'          &#xA;         AND pc.contact_id IS NULL;  &#xA; &#x9;ALTER TABLE provision_contact ENABLE TRIGGER   provision_contact_job_tg;       &#xA; COMMIT;   " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Vacuum public_contact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{9d11ebd6-f721-415d-8803-e5735e6d98a2}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum public_contact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="5">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  public.contact" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{D3AD068C-4E9D-4360-8EF4-8081604F6E3A}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Vacuum public_contact"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Create itdp_contact_postal_temp" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{04A9EA83-AA88-4561-9D13-389AB2A73EED}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\contact"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Vacuum public_contact" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{1F03351B-0C97-4688-B4B0-DBBBCC9B7519}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Vacuum public_contact"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Create itdp_domain_contact_temp" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint 6]"
              DTS:CreationName=""
              DTS:DTSID="{D15A8E11-BE6C-48FF-B9F7-2743C2B79B30}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Create itdp_contact_postal_temp"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 6"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\contact_postal" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint 7]"
              DTS:CreationName=""
              DTS:DTSID="{6d7893c0-e495-487f-891b-653446b2be57}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Create itdp_domain_contact_temp"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 7"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\domain_contact" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint 8]"
              DTS:CreationName=""
              DTS:DTSID="{06BB2A9C-50DB-4892-A6D1-2A3DF06127BF}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Create itdp_contact_temp"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 8"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\contact" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Host"
          DTS:DTSID="{3F132A1C-1FF5-4D3E-91FD-ABA57943E422}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:ISOLevel="4096"
          DTS:LocaleID="-1"
          DTS:ObjectName="03_4 Domain_Host">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host\Create itdp_domain_host_temp"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{c3198c96-03a5-4e67-8d50-2ac9174bf94a}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create itdp_domain_host_temp"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"DROP TABLE IF EXISTS itdp.domain_host_temp;         
CREATE unlogged TABLE itdp.domain_host_temp  AS
 
(SELECT   h.itdp_domain_id, COALESCE(h.host_id_unique_name_tdp,h.host_id_unique_name) AS host_id 
	FROM itdp.host h 
		JOIN itdp.domain d ON h.itdp_domain_id=d.id AND  (d.dm_status).domain IS null AND
			 d.tld = '"+ @[$Package::TLD] +"' AND d.dm_source='"+ @[$Package::Tenant] +"'
		JOIN public.domain pd ON h.itdp_domain_id=pd.id 
		JOIN ONLY public.host ph ON COALESCE(h.host_id_unique_name_tdp,h.host_id_unique_name)=ph.id 
        LEFT JOIN  public.domain_host pdh ON pdh.host_id = COALESCE(h.host_id_unique_name_tdp,h.host_id_unique_name) AND pdh.domain_id =h.itdp_domain_id 
        WHERE h.TLD  = '"+ @[$Package::TLD] +"' AND  h.dm_source='"+ @[$Package::Tenant] +"'            
         AND pdh.host_id IS NULL)  ; "</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="DROP TABLE IF EXISTS itdp.domain_host_temp;         &#xA;CREATE unlogged TABLE itdp.domain_host_temp  AS&#xA; &#xA;(SELECT   h.itdp_domain_id, COALESCE(h.host_id_unique_name_tdp,h.host_id_unique_name) AS host_id &#xA;&#x9;FROM itdp.host h &#xA;&#x9;&#x9;JOIN itdp.domain d ON h.itdp_domain_id=d.id AND  (d.dm_status).domain IS null AND&#xA;&#x9;&#x9;&#x9; d.tld = 'co.in' AND d.dm_source='enom'&#xA;&#x9;&#x9;JOIN public.domain pd ON h.itdp_domain_id=pd.id &#xA;&#x9;&#x9;JOIN ONLY public.host ph ON COALESCE(h.host_id_unique_name_tdp,h.host_id_unique_name)=ph.id &#xA;        LEFT JOIN  public.domain_host pdh ON pdh.host_id = COALESCE(h.host_id_unique_name_tdp,h.host_id_unique_name) AND pdh.domain_id =h.itdp_domain_id &#xA;        WHERE h.TLD  = 'co.in' AND  h.dm_source='enom'            &#xA;         AND pdh.host_id IS NULL)  ; " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host\domain_host"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{DBD69AEE-7E3D-48CE-AD40-D7497850F5C2}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="domain_host"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"DO $$
	DECLARE    _sql text; 
BEGIN

SET work_mem TO '1900MB'  ;      
--ALTER TABLE public.domain_host DISABLE  TRIGGER zz_60_trail_domain_host;
--ALTER TABLE public.domain_host DISABLE  TRIGGER zz_50_audit_domain_host;

IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	DROP TABLE IF EXISTS itdp.temp_list_constraints1;
	DROP TABLE IF EXISTS itdp.temp_list_index1;
	--save list of CONSTRAINTS 
	CREATE TABLE itdp.temp_list_constraints1
		AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname
		FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            
		WHERE conrelid =(SELECT 'public.domain_host'::regclass::OID) );
	--save list of indexes		
	CREATE TABLE itdp.temp_list_index1 AS (SELECT * FROM pg_indexes WHERE schemaname = 'public' AND TABLEname='domain_host');
		
	--DROP constraints
	SELECT string_agg('ALTER TABLE public.domain_host DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint	
	 	WHERE conrelid =(SELECT 'public.domain_host'::regclass::OID) INTO _sql;
	IF _sql IS NOT NULL THEN                  
        EXECUTE _sql;
    END IF;
   
   -- drop  indexes --   
    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')
		   FROM   pg_index  i   
		   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'
		   WHERE  i.indrelid = 'public.domain_host'::regclass AND    d.objid IS NULL   INTO _sql;
	IF _sql IS NOT NULL THEN                  
    	    EXECUTE _sql;
    END IF;
	 
END IF;

    INSERT INTO public.domain_host  ( domain_id, host_id)
         SELECT itdp_domain_id, host_id 
         FROM itdp.domain_host_temp;        

IF  '"+@[$Package::TLD] +"' in ('"+@[User::list_middle_and_big_tlds]+"') THEN
	-- recreate constraints	 
     IF (SELECT count(*) FROM itdp.temp_list_constraints1) &gt;0 THEN 
		 EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints1);
	 END IF;	
	--recreate indexes
	IF (SELECT count(*) FROM itdp.temp_list_index1) &gt;0 THEN 
		EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index1);
	END IF;
END IF;


--ALTER TABLE public.domain_host ENABLE TRIGGER zz_60_trail_domain_host;	 
--ALTER TABLE public.domain_host ENABLE  TRIGGER zz_50_audit_domain_host;
ANALYSE public.domain_host;
COMMIT;

END $$
"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="DO $$&#xA;&#x9;DECLARE    _sql text; &#xA;BEGIN&#xA;&#xA;SET work_mem TO '1900MB'  ;      &#xA;--ALTER TABLE public.domain_host DISABLE  TRIGGER zz_60_trail_domain_host;&#xA;--ALTER TABLE public.domain_host DISABLE  TRIGGER zz_50_audit_domain_host;&#xA;&#xA;IF  'co.in' in ('com' ,'net') THEN&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_constraints1;&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_index1;&#xA;&#x9;--save list of CONSTRAINTS &#xA;&#x9;CREATE TABLE itdp.temp_list_constraints1&#xA;&#x9;&#x9;AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname&#xA;&#x9;&#x9;FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            &#xA;&#x9;&#x9;WHERE conrelid =(SELECT 'public.domain_host'::regclass::OID) );&#xA;&#x9;--save list of indexes&#x9;&#x9;&#xA;&#x9;CREATE TABLE itdp.temp_list_index1 AS (SELECT * FROM pg_indexes WHERE schemaname = 'public' AND TABLEname='domain_host');&#xA;&#x9;&#x9;&#xA;&#x9;--DROP constraints&#xA;&#x9;SELECT string_agg('ALTER TABLE public.domain_host DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint&#x9;&#xA;&#x9; &#x9;WHERE conrelid =(SELECT 'public.domain_host'::regclass::OID) INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;        EXECUTE _sql;&#xA;    END IF;&#xA;   &#xA;   -- drop  indexes --   &#xA;    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')&#xA;&#x9;&#x9;   FROM   pg_index  i   &#xA;&#x9;&#x9;   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'&#xA;&#x9;&#x9;   WHERE  i.indrelid = 'public.domain_host'::regclass AND    d.objid IS NULL   INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;    &#x9;    EXECUTE _sql;&#xA;    END IF;&#xA;&#x9; &#xA;END IF;&#xA;&#xA;    INSERT INTO public.domain_host  ( domain_id, host_id)&#xA;         SELECT itdp_domain_id, host_id &#xA;         FROM itdp.domain_host_temp;        &#xA;&#xA;IF  'co.in' in ('com' ,'net') THEN&#xA;&#x9;-- recreate constraints&#x9; &#xA;     IF (SELECT count(*) FROM itdp.temp_list_constraints1) &gt;0 THEN &#xA;&#x9;&#x9; EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints1);&#xA;&#x9; END IF;&#x9;&#xA;&#x9;--recreate indexes&#xA;&#x9;IF (SELECT count(*) FROM itdp.temp_list_index1) &gt;0 THEN &#xA;&#x9;&#x9;EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index1);&#xA;&#x9;END IF;&#xA;END IF;&#xA;&#xA;&#xA;--ALTER TABLE public.domain_host ENABLE TRIGGER zz_60_trail_domain_host;&#x9; &#xA;--ALTER TABLE public.domain_host ENABLE  TRIGGER zz_50_audit_domain_host;&#xA;ANALYSE public.domain_host;&#xA;COMMIT;&#xA;&#xA;END $$&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host.PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{F6900429-FEDA-46DF-B4A8-DFDCC98422DE}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host\Create itdp_domain_host_temp"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host\domain_host" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="03_4 Mark domain as migrated"
          DTS:DTSID="{8610E5D3-DC6B-4A35-8088-6D4F0FA7A971}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="03_5 Mark domain as migrated">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated\Mark domain as migrated in itdp_domain"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{EA855B5A-7515-48B3-9761-FB67A0346EA9}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Mark domain as migrated in itdp_domain"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">" DO $$
	DECLARE    _sql text; 
BEGIN

if '"+ @[$Package::TLD] +"' = 'com' THEN	
	DROP TABLE IF EXISTS itdp.temp_list_constraints;
	DROP TABLE IF EXISTS itdp.temp_list_index;
	--save list of CONSTRAINTS 
	CREATE TABLE itdp.temp_list_constraints
		AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname
		FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            
		WHERE relname ='domain_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"' AND nspname='itdp' AND contype&lt;&gt;'p');          
		
	--save list of indexes		
	CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'itdp' AND TABLEname='domain_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"');
		
	--DROP constraints
	SELECT string_agg('ALTER TABLE itdp.domain_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+" DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint	
	 	INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            
		WHERE relname ='domain_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"' AND nspname='itdp' AND contype&lt;&gt;'p'    INTO _sql;
	IF _sql IS NOT NULL THEN                  
        EXECUTE _sql;
    END IF;   

    -- drop  indexes --   
	--I need to detach the partition, drop the indexnfor 1 partition, load into the partition, re-create the index and re-attach the partition.
    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')
		   FROM   pg_index  i   
		   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'
		   WHERE  i.indrelid = 'itdp.domain_"+@[$Package::Tenant]+"_"+@[$Package::TLD]+"'::regclass AND    d.objid IS NULL   INTO _sql;
	IF _sql IS NOT NULL THEN                  
    	    EXECUTE _sql;
    END IF;

END IF;

	UPDATE itdp.DOMAIN d SET dm_status.domain = TRUE ,dm_status.host = TRUE , dm_status.public_contact = NOT(t.is_thin) 	
	FROM itdp.DOMAIN dd
	JOIN public.DOMAIN pd ON pd.id=dd.id		
	JOIN itdp.tld t ON t.tld_name =dd.tld	
	WHERE dd.id=d.id AND  dd.tld='"+ @[$Package::TLD] +"' AND dd.dm_source='"+ @[$Package::Tenant] +"'
 		AND d.tld='"+ @[$Package::TLD] +"' AND d.dm_source='"+ @[$Package::Tenant] +"';

if '"+ @[$Package::TLD] +"' = 'com' THEN
	-- recreate constraints	 
     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN 
		 EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);
	 END IF;	
	--recreate indexes
 	IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN 
		EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);
	END IF;	END IF;
ANALYSE itdp.DOMAIN ;
COMMIT;
END $$"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource=" DO $$&#xA;&#x9;DECLARE    _sql text; &#xA;BEGIN&#xA;&#xA;if 'co.in' = 'com' THEN&#x9;&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_constraints;&#xA;&#x9;DROP TABLE IF EXISTS itdp.temp_list_index;&#xA;&#x9;--save list of CONSTRAINTS &#xA;&#x9;CREATE TABLE itdp.temp_list_constraints&#xA;&#x9;&#x9;AS (SELECT 'ALTER TABLE '||nspname||'.'||relname||' ADD CONSTRAINT  '||conname||' '|| pg_get_constraintdef(pg_constraint.oid)||';' AS conname&#xA;&#x9;&#x9;FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            &#xA;&#x9;&#x9;WHERE relname ='domain_enom_co.in' AND nspname='itdp' AND contype&lt;&gt;'p');          &#xA;&#x9;&#x9;&#xA;&#x9;--save list of indexes&#x9;&#x9;&#xA;&#x9;CREATE TABLE itdp.temp_list_index AS (SELECT * FROM pg_indexes WHERE schemaname = 'itdp' AND TABLEname='domain_enom_co.in');&#xA;&#x9;&#x9;&#xA;&#x9;--DROP constraints&#xA;&#x9;SELECT string_agg('ALTER TABLE itdp.domain_enom_co.in DROP CONSTRAINT ' ||conname ,';') FROM pg_catalog.pg_constraint&#x9;&#xA;&#x9; &#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace            &#xA;&#x9;&#x9;WHERE relname ='domain_enom_co.in' AND nspname='itdp' AND contype&lt;&gt;'p'    INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;        EXECUTE _sql;&#xA;    END IF;   &#xA;&#xA;    -- drop  indexes --   &#xA;&#x9;--I need to detach the partition, drop the indexnfor 1 partition, load into the partition, re-create the index and re-attach the partition.&#xA;    SELECT 'DROP INDEX ' || string_agg(indexrelid::regclass::text, ', ')&#xA;&#x9;&#x9;   FROM   pg_index  i   &#xA;&#x9;&#x9;   LEFT   JOIN pg_depend d ON d.objid = i.indexrelid AND d.deptype = 'i'&#xA;&#x9;&#x9;   WHERE  i.indrelid = 'itdp.domain_enom_co.in'::regclass AND    d.objid IS NULL   INTO _sql;&#xA;&#x9;IF _sql IS NOT NULL THEN                  &#xA;    &#x9;    EXECUTE _sql;&#xA;    END IF;&#xA;&#xA;END IF;&#xA;&#xA;&#x9;UPDATE itdp.DOMAIN d SET dm_status.domain = TRUE ,dm_status.host = TRUE , dm_status.public_contact = NOT(t.is_thin) &#x9;&#xA;&#x9;FROM itdp.DOMAIN dd&#xA;&#x9;JOIN public.DOMAIN pd ON pd.id=dd.id&#x9;&#x9;&#xA;&#x9;JOIN itdp.tld t ON t.tld_name =dd.tld&#x9;&#xA;&#x9;WHERE dd.id=d.id AND  dd.tld='co.in' AND dd.dm_source='enom'&#xA; &#x9;&#x9;AND d.tld='co.in' AND d.dm_source='enom';&#xA;&#xA;if 'co.in' = 'com' THEN&#xA;&#x9;-- recreate constraints&#x9; &#xA;     IF (SELECT count(*) FROM itdp.temp_list_constraints) &gt;0 THEN &#xA;&#x9;&#x9; EXECUTE (SELECT string_agg(conname,';') FROM itdp.temp_list_constraints);&#xA;&#x9; END IF;&#x9;&#xA;&#x9;--recreate indexes&#xA; &#x9;IF (SELECT count(*) FROM itdp.temp_list_index) &gt;0 THEN &#xA;&#x9;&#x9;EXECUTE (SELECT string_agg(REPLACE(indexdef,'INDEX', 'INDEX IF NOT EXISTS '),';') FROM itdp.temp_list_index);&#xA;&#x9;END IF;&#x9;END IF;&#xA;ANALYSE itdp.DOMAIN ;&#xA;COMMIT;&#xA;END $$" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated\Mark TLD as migrated in itdp_tld"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{36A9F07A-772C-4893-A965-E70FDCB1FDD5}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Mark TLD as migrated in itdp_tld"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"BEGIN ;
UPDATE  itdp.tld t
SET result_domain.extract = (SELECT count(*) FROM dm_enom.domainname_ WHERE lower(tld)='"+ @[$Package::TLD] +"' ),
	result_host.extract=(SELECT count(*) FROM dm_enom.nameservers_ n JOIN dm_enom.domainname_ d ON d.domainnameid=n.domainnameid  WHERE lower(tld)='"+ @[$Package::TLD] +"' ),
	result_contact.extract=(SELECT count(*) FROM dm_enom.contact_ c  WHERE tld='"+ @[$Package::TLD] +"' ),
	result_domain.dm_enom = (SELECT count(*) FROM dm_enom.domainname WHERE tld='"+ @[$Package::TLD] +"' ),
	result_domain.itdp = (SELECT count(*) FROM itdp.domain WHERE tld='"+ @[$Package::TLD] +"' and dm_source='"+ @[$Package::Tenant] +"'  ),
	result_domain.error = (SELECT count(*) FROM itdp.domain_error_records WHERE tld='"+ @[$Package::TLD] +"' and dm_source='"+ @[$Package::Tenant] +"' ),
	result_domain.tdp = (SELECT count(*) FROM public.DOMAIN d 
	    JOIN public.v_accreditation_tld vat ON vat.accreditation_tld_id=d.accreditation_tld_id 
		JOIN itdp.domain id on id.id=d.id  and id.tld='"+ @[$Package::TLD] +"' and id.dm_source='"+ @[$Package::Tenant] +"' 
	    WHERE  tenant_name='"+ @[$Package::Tenant] +"'),
	result_host.dm_enom=(SELECT count(*) FROM dm_enom.nameservers n  JOIN dm_enom.domainname d ON d.domainnameid=n.domainnameid  WHERE d.tld='"+ @[$Package::TLD] +"' ),
	result_host.itdp=(SELECT count(*) FROM itdp.host WHERE tld='"+ @[$Package::TLD] +"' and dm_source='"+ @[$Package::Tenant] +"'  ),
	result_host.error=(SELECT count(*) FROM itdp.host_error_records WHERE tld='"+ @[$Package::TLD] +"' and dm_source='"+ @[$Package::Tenant] +"'  ),
	result_host.tdp=( SELECT count(*) FROM  public.domain_host dh 
		 JOIN public.domain d ON dh.domain_id=d.id
		 JOIN public.v_accreditation_tld vat ON vat.accreditation_tld_id=d.accreditation_tld_id		
		 JOIN itdp.domain id on id.id =dh.domain_id 	and id.tld='"+ @[$Package::TLD] +"' and id.dm_source='"+ @[$Package::Tenant] +"' 
	   	 WHERE  tenant_name='"+ @[$Package::Tenant] +"' ) ,
	result_contact.dm_enom=(SELECT count(*) FROM dm_enom.contact WHERE tld='"+ @[$Package::TLD] +"' ),
	result_contact.itdp=(SELECT count(*) FROM itdp.contact WHERE tld='"+ @[$Package::TLD] +"' and dm_source='"+ @[$Package::Tenant] +"' ),
	result_contact.error=(SELECT count(*) FROM itdp.contact_error_records WHERE tld='"+ @[$Package::TLD] +"' and dm_source='"+ @[$Package::Tenant] +"'),
	result_contact.tdp=(SELECT count(*)  FROM  public.contact c
		  JOIN public.domain_contact dc ON dc.contact_id=c.id 
		  JOIN public.domain d ON dc.domain_id=d.id
		  JOIN public.v_accreditation_tld vat ON vat.accreditation_tld_id=d.accreditation_tld_id 
		  JOIN itdp.contact ic on ic.id=c.id and ic.tld='"+ @[$Package::TLD] +"' and ic.dm_source='"+ @[$Package::Tenant] +"' 
			 WHERE  tenant_name='"+ @[$Package::Tenant] +"'  AND  ic.tld ='"+ @[$Package::TLD] +"' ),
	result_domain.dm_enom_itdp_pk = (SELECT count(*) FROM dm_enom.domainname 
		WHERE  itdp_domain_id is not null and tld='"+ @[$Package::TLD] +"' ),
	result_host.dm_enom_itdp_pk=(SELECT count(*) FROM dm_enom.nameservers n 		
		 WHERE n.itdp_host_id is not null and  tld='"+ @[$Package::TLD] +"' ),
	result_contact.dm_enom_itdp_pk=(SELECT count(*) FROM dm_enom.contact WHERE itdp_contact_id is not null and tld='"+ @[$Package::TLD] +"' ),
	updated_date = now()
WHERE t.TLD_name  = '"+ @[$Package::TLD] +"' AND t.dm_source='"+ @[$Package::Tenant] +"'  AND phase = '"+@[$Package::Migration_phase]+"';

UPDATE  itdp.tld 
SET migration_status =  CASE
	WHEN (result_domain).dm_enom=(result_domain).tdp THEN 'Done' 
	WHEN (result_domain).itdp&lt;&gt;(result_domain).tdp  OR (result_host).itdp&lt;&gt;(result_host).tdp  OR (result_contact).itdp&lt;&gt; (result_contact).tdp THEN 'Repeat TDP' 
	ELSE NULL END 
WHERE TLD_name  = '"+ @[$Package::TLD] +"' AND dm_source='"+ @[$Package::Tenant] +"'  AND phase = '"+@[$Package::Migration_phase]+"';
COMMIT;"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="BEGIN ;&#xA;UPDATE  itdp.tld t&#xA;SET result_domain.extract = (SELECT count(*) FROM dm_enom.domainname_ WHERE lower(tld)='co.in' ),&#xA;&#x9;result_host.extract=(SELECT count(*) FROM dm_enom.nameservers_ n JOIN dm_enom.domainname_ d ON d.domainnameid=n.domainnameid  WHERE lower(tld)='co.in' ),&#xA;&#x9;result_contact.extract=(SELECT count(*) FROM dm_enom.contact_ c  WHERE tld='co.in' ),&#xA;&#x9;result_domain.dm_enom = (SELECT count(*) FROM dm_enom.domainname WHERE tld='co.in' ),&#xA;&#x9;result_domain.itdp = (SELECT count(*) FROM itdp.domain WHERE tld='co.in' and dm_source='enom'  ),&#xA;&#x9;result_domain.error = (SELECT count(*) FROM itdp.domain_error_records WHERE tld='co.in' and dm_source='enom' ),&#xA;&#x9;result_domain.tdp = (SELECT count(*) FROM public.DOMAIN d &#xA;&#x9;    JOIN public.v_accreditation_tld vat ON vat.accreditation_tld_id=d.accreditation_tld_id &#xA;&#x9;&#x9;JOIN itdp.domain id on id.id=d.id  and id.tld='co.in' and id.dm_source='enom' &#xA;&#x9;    WHERE  tenant_name='enom'),&#xA;&#x9;result_host.dm_enom=(SELECT count(*) FROM dm_enom.nameservers n  JOIN dm_enom.domainname d ON d.domainnameid=n.domainnameid  WHERE d.tld='co.in' ),&#xA;&#x9;result_host.itdp=(SELECT count(*) FROM itdp.host WHERE tld='co.in' and dm_source='enom'  ),&#xA;&#x9;result_host.error=(SELECT count(*) FROM itdp.host_error_records WHERE tld='co.in' and dm_source='enom'  ),&#xA;&#x9;result_host.tdp=( SELECT count(*) FROM  public.domain_host dh &#xA;&#x9;&#x9; JOIN public.domain d ON dh.domain_id=d.id&#xA;&#x9;&#x9; JOIN public.v_accreditation_tld vat ON vat.accreditation_tld_id=d.accreditation_tld_id&#x9;&#x9;&#xA;&#x9;&#x9; JOIN itdp.domain id on id.id =dh.domain_id &#x9;and id.tld='co.in' and id.dm_source='enom' &#xA;&#x9;   &#x9; WHERE  tenant_name='enom' ) ,&#xA;&#x9;result_contact.dm_enom=(SELECT count(*) FROM dm_enom.contact WHERE tld='co.in' ),&#xA;&#x9;result_contact.itdp=(SELECT count(*) FROM itdp.contact WHERE tld='co.in' and dm_source='enom' ),&#xA;&#x9;result_contact.error=(SELECT count(*) FROM itdp.contact_error_records WHERE tld='co.in' and dm_source='enom'),&#xA;&#x9;result_contact.tdp=(SELECT count(*)  FROM  public.contact c&#xA;&#x9;&#x9;  JOIN public.domain_contact dc ON dc.contact_id=c.id &#xA;&#x9;&#x9;  JOIN public.domain d ON dc.domain_id=d.id&#xA;&#x9;&#x9;  JOIN public.v_accreditation_tld vat ON vat.accreditation_tld_id=d.accreditation_tld_id &#xA;&#x9;&#x9;  JOIN itdp.contact ic on ic.id=c.id and ic.tld='co.in' and ic.dm_source='enom' &#xA;&#x9;&#x9;&#x9; WHERE  tenant_name='enom'  AND  ic.tld ='co.in' ),&#xA;&#x9;result_domain.dm_enom_itdp_pk = (SELECT count(*) FROM dm_enom.domainname &#xA;&#x9;&#x9;WHERE  itdp_domain_id is not null and tld='co.in' ),&#xA;&#x9;result_host.dm_enom_itdp_pk=(SELECT count(*) FROM dm_enom.nameservers n &#x9;&#x9;&#xA;&#x9;&#x9; WHERE n.itdp_host_id is not null and  tld='co.in' ),&#xA;&#x9;result_contact.dm_enom_itdp_pk=(SELECT count(*) FROM dm_enom.contact WHERE itdp_contact_id is not null and tld='co.in' ),&#xA;&#x9;updated_date = now()&#xA;WHERE t.TLD_name  = 'co.in' AND t.dm_source='enom'  AND phase = '1.3';&#xA;&#xA;UPDATE  itdp.tld &#xA;SET migration_status =  CASE&#xA;&#x9;WHEN (result_domain).dm_enom=(result_domain).tdp THEN 'Done' &#xA;&#x9;WHEN (result_domain).itdp&lt;&gt;(result_domain).tdp  OR (result_host).itdp&lt;&gt;(result_host).tdp  OR (result_contact).itdp&lt;&gt; (result_contact).tdp THEN 'Repeat TDP' &#xA;&#x9;ELSE NULL END &#xA;WHERE TLD_name  = 'co.in' AND dm_source='enom'  AND phase = '1.3';&#xA;COMMIT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{8E48980A-5DF2-4404-A76D-675FF9350555}"
              DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated\Mark domain as migrated in itdp_domain"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated\Mark TLD as migrated in itdp_tld" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\dm_log - tdp_transfer_end"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{354a0f09-8b0a-40ac-9e79-e51c9590504a}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="dm_log - tdp_transfer_end"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"UPDATE  itdp.dm_log dl
SET end_date_tdp_transfer=now(),
	status='Enom mark domain started',
	result_domain.tdp = (t.result_domain).tdp,
	result_host.tdp=(t.result_host).tdp,
	result_contact.tdp=(t.result_contact).tdp
FROM itdp.tld t
WHERE t.tld_name=dl.tld AND t.dm_source=dl.dm_source
 AND	 dl.id = "+ (DT_WSTR, 5) @[User::dm_log_id] +" 
 AND dl.dm_source='"+ @[$Package::Tenant] +"' 
 AND dl.tld='"+ @[$Package::TLD] +"';"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{ABDE7B26-BFF2-467F-980A-2292D0F21D32}"
              SQLTask:SqlStatementSource="UPDATE  itdp.dm_log dl&#xA;SET end_date_tdp_transfer=now(),&#xA;&#x9;status='Enom mark domain started',&#xA;&#x9;result_domain.tdp = (t.result_domain).tdp,&#xA;&#x9;result_host.tdp=(t.result_host).tdp,&#xA;&#x9;result_contact.tdp=(t.result_contact).tdp&#xA;FROM itdp.tld t&#xA;WHERE t.tld_name=dl.tld AND t.dm_source=dl.dm_source&#xA; AND&#x9; dl.id = 1 &#xA; AND dl.dm_source='enom' &#xA; AND dl.tld='co.in';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:Disabled="True"
          DTS:DTSID="{86EB3077-2048-44A8-AC06-7D0BAEED2ABE}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:ISOLevel="4096"
          DTS:LocaleID="-1"
          DTS:ObjectName="Vacuum Analyse">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">FINDSTRING(@[User::list_big_tlds] , @[$Package::TLD], 1)   &gt; 0 ? false :true</DTS:PropertyExpression>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum  public_domain_contact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{9c74c946-4ca9-4554-95c6-934fe074e51d}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum  public_domain_contact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="VACUUM  analyse public.domain_contact" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_contact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{1e0e6df7-eaef-417a-a0c7-661f65a9ff0a}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum public_contact"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  public.contact" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_contact_postal"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{c7290060-1e01-49ef-be2a-80074e471098}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum public_contact_postal"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  public.contact_postal" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_domain"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{A45CAEDB-C034-4731-B3DB-DFCB30423BC4}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum public_domain"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  public.domain;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_domain_host"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{91e23234-d46e-4a3d-a4ec-5dbec3a71377}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum public_domain_host"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  public.domain_host" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_domain_lock"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{4567e8c7-1fae-4d3e-a80c-89ac9ce9dad5}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum public_domain_lock"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="5">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  public.domain_lock;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_domain_RGP"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{a750b9b3-d3b0-4b1d-92fd-7f9a7a6a6c14}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum public_domain_RGP"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="6">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  public.domain_RGP_status;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_host"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{bd75f6d1-519c-40fc-b5f9-a998ec496951}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum public_host"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="7">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  public.host" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_order"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{a09f02a0-1ea5-477d-b78d-9106cda5e0c5}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum public_order"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="8">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  public.order;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_order_import_domain"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{37f87876-2a4a-4b8e-afde-943a85931008}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:ISOLevel="4096"
              DTS:LocaleID="-1"
              DTS:ObjectName="Vacuum public_order_import_domain"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="9">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
                  SQLTask:SqlStatementSource="VACUUM  ANALYSE  public.order_item_import_domain;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{9EF4C7E0-BC97-43B1-A2A0-CE4FCB766919}"
          DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{3074E857-531D-4E89-8BFA-ABDE6818E714}"
          DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{AC09D7D5-E4A6-4AFF-9A30-79C23863649E}"
          DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{589A272C-ADF7-441B-B5E3-69D656692A1E}"
          DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{EA1D559F-5F52-4200-A2FC-2D5CFBC03168}"
          DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\dm_log - tdp_transfer_end" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{21B122A5-4875-4E85-A02A-D648FCC9831F}"
          DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{1F7C644A-8DEE-4BA2-A790-3B11829D577D}"
          DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 8]"
          DTS:CreationName=""
          DTS:DTSID="{EDDFE855-E9DD-4FD7-A939-0760340A9F86}"
          DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 8"
          DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 9]"
          DTS:CreationName=""
          DTS:DTSID="{4DBEC1C8-22F2-487F-9930-B75925DEFC4C}"
          DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 9"
          DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\04 Mark Enom domains"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{584F687E-41BD-4DFB-9C86-FD4586F9A1E5}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="04 Mark Enom domains">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\04 Mark Enom domains\Clean Enom_TDP_domain_"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{DAFF0BE1-3C27-4243-B1E2-EFA61C76EF98}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Clean Enom_TDP_domain_"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{EA1AB8D1-1F16-4E59-BEBD-75ADB38848AE}"
              SQLTask:SqlStatementSource="TRUNCATE TABLE [EnomMigrationDB].[dbo].[TDP_domain_]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\04 Mark Enom domains\dm_log - dm_end"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{0a9e2e98-bb39-44c8-8505-761e626b9dc7}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="dm_log - dm_end"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"UPDATE  itdp.dm_log dl
SET migration_status=t.migration_status,
 end_date=now(),
status='enom_dm finished'
--result_domain=t.result_domain,
--result_host=t.result_host,
--result_contact=t.result_contact
FROM itdp.tld t
WHERE t.tld_name=dl.tld AND t.dm_source=dl.dm_source AND dl.id = "+ (DT_WSTR, 5) @[User::dm_log_id] +" and dl.dm_source=
'"+ @[$Package::Tenant] +"' and dl.tld='"+ @[$Package::TLD] +"';"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{ABDE7B26-BFF2-467F-980A-2292D0F21D32}"
              SQLTask:SqlStatementSource="UPDATE  itdp.dm_log dl&#xA;SET migration_status=t.migration_status,&#xA; end_date=now(),&#xA;status='enom_dm finished'&#xA;--result_domain=t.result_domain,&#xA;--result_host=t.result_host,&#xA;--result_contact=t.result_contact&#xA;FROM itdp.tld t&#xA;WHERE t.tld_name=dl.tld AND t.dm_source=dl.dm_source AND dl.id = 1 and dl.dm_source=&#xA;'enom' and dl.tld='co.in';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{98F2FCFD-E985-47DA-BB69-BF0580648E57}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Mark domain as migrated in Enom"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:PropertyExpression
            DTS:Name="[ODBC Source itdp_domain].[SqlCommand]">"SELECT id, source_domain_id, tld,'"  + @[$Package::Migration_phase]  + "'::varchar(15) 
 as phase 
,
CASE WHEN (dm_status).public_contact then 'Migrated domain, host, public contact ' 
ELSE 'Migrated domain, host' END ::varchar(100) as status 
 
  FROM itdp.domain  WHERE (dm_status).DOMAIN IS NOT null  AND tld ='"+ @[$Package::TLD] +"';"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
                  name="ADO NET Destination"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.String"
                      description="The Destination database table name."
                      expressionType="Notify"
                      name="TableOrViewName"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."TDP_domain_"</property>
                    <property
                      dataType="System.Int32"
                      description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                      expressionType="Notify"
                      name="BatchSize">0</property>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                      expressionType="Notify"
                      name="CommandTimeout">30</property>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                      expressionType="Notify"
                      name="UseBulkInsertWhenPossible">true</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ADONETDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Connections[IDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Enom_ADO_EnomMigrationDB]"
                      connectionManagerRefId="Package.ConnectionManagers[Enom_ADO_EnomMigrationDB]"
                      description="Managed connection manager"
                      name="IDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Inputs[ADO NET Destination Input]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="ADO NET Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[tld]"
                          cachedDataType="wstr"
                          cachedLength="15"
                          cachedName="tld"
                          externalMetadataColumnId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[TLD]"
                          lineageId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].Columns[tld]" />
                        <inputColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[status]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="status"
                          externalMetadataColumnId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Status]"
                          lineageId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].Columns[status]" />
                        <inputColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[id]"
                          cachedDataType="guid"
                          cachedName="id"
                          externalMetadataColumnId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[TDP_domain_id]"
                          lineageId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].Columns[id]" />
                        <inputColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[phase]"
                          cachedDataType="wstr"
                          cachedLength="15"
                          cachedName="phase"
                          externalMetadataColumnId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Migration_phase]"
                          lineageId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].Columns[phase]" />
                        <inputColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Inputs[ADO NET Destination Input].Columns[source_domain_id]"
                          cachedDataType="i4"
                          cachedName="source_domain_id"
                          externalMetadataColumnId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[DomainNameId]"
                          lineageId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].Columns[source_domain_id]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[TLD]"
                          dataType="wstr"
                          length="15"
                          name="TLD" />
                        <externalMetadataColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[TDP_domain_id]"
                          dataType="guid"
                          name="TDP_domain_id" />
                        <externalMetadataColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[DomainNameId]"
                          dataType="i4"
                          name="DomainNameId" />
                        <externalMetadataColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Migration_date]"
                          dataType="dbTimeStamp"
                          name="Migration_date" />
                        <externalMetadataColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Migration_phase]"
                          dataType="wstr"
                          length="15"
                          name="Migration_phase" />
                        <externalMetadataColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Inputs[ADO NET Destination Input].ExternalColumns[Status]"
                          dataType="wstr"
                          length="100"
                          name="Status" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Outputs[ADO NET Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="ADO NET Destination Error Output"
                      synchronousInputId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Inputs[ADO NET Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain"
                  componentClassID="Microsoft.SSISODBCSrc"
                  contactInfo="ODBC Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="ODBC Source"
                  name="ODBC Source itdp_domain"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.String"
                      description="The name of the table to be fetched."
                      expressionType="Notify"
                      name="TableName"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT id, source_domain_id, tld,'1.3'::varchar(15) 
 as phase 
,
CASE WHEN (dm_status).public_contact then 'Migrated domain, host, public contact ' 
ELSE 'Migrated domain, host' END ::varchar(100) as status 
 
  FROM itdp.domain  WHERE (dm_status).DOMAIN IS NOT null  AND tld ='co.in';</property>
                    <property
                      dataType="System.Int32"
                      description="Specify the number of rows fetched per batch."
                      expressionType="Notify"
                      name="BatchSize">1000</property>
                    <property
                      dataType="System.Int32"
                      description="Determines the chunk size allocation for LOB columns"
                      expressionType="Notify"
                      name="LobChunkSize">32768</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines how the component exposes CHAR columns. If False, CHAR columns are exposed as (multi-)byte strings (DT_STR), if True, CHAR columns are exposed as wide strings (DT_WSTR)"
                      expressionType="Notify"
                      name="ExposeCharColumnsAsUnicode">false</property>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                      expressionType="Notify"
                      name="StatementTimeout">0</property>
                    <property
                      dataType="System.Int32"
                      description="The code page to use when code page information is unavailable from the data source."
                      expressionType="Notify"
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Int32"
                      description="The method used for fetching data."
                      expressionType="Notify"
                      name="FetchMethod">1</property>
                    <property
                      dataType="System.Int32"
                      description="The ODBC C data type for binding numeric data."
                      expressionType="Notify"
                      name="BindNumericAs">0</property>
                    <property
                      dataType="System.Int32"
                      description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                      expressionType="Notify"
                      name="BindCharColumnsAs">0</property>
                    <property
                      dataType="System.Int32"
                      description="The mode used to access the database."
                      expressionType="Notify"
                      name="AccessMode"
                      typeConverter="AccessMode">1</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Connections[ODBCConnection]"
                      connectionManagerID="Package.ConnectionManagers[tdpdb]"
                      connectionManagerRefId="Package.ConnectionManagers[tdpdb]"
                      description="The ODBC runtime connection used to access the database."
                      name="ODBCConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output]"
                      errorRowDisposition="FailComponent"
                      name="ODBC Source Output"
                      truncationRowDisposition="FailComponent">
                      <outputColumns>
                        <outputColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].Columns[id]"
                          dataType="guid"
                          externalMetadataColumnId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].ExternalColumns[id]"
                          lineageId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].Columns[id]"
                          name="id" />
                        <outputColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].Columns[tld]"
                          dataType="wstr"
                          externalMetadataColumnId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].ExternalColumns[tld]"
                          length="15"
                          lineageId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].Columns[tld]"
                          name="tld" />
                        <outputColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].Columns[source_domain_id]"
                          dataType="i4"
                          externalMetadataColumnId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].ExternalColumns[source_domain_id]"
                          lineageId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].Columns[source_domain_id]"
                          name="source_domain_id" />
                        <outputColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].Columns[phase]"
                          dataType="wstr"
                          externalMetadataColumnId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].ExternalColumns[phase]"
                          length="15"
                          lineageId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].Columns[phase]"
                          name="phase" />
                        <outputColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].Columns[status]"
                          dataType="wstr"
                          externalMetadataColumnId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].ExternalColumns[status]"
                          length="100"
                          lineageId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].Columns[status]"
                          name="status" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].ExternalColumns[id]"
                          dataType="guid"
                          name="id" />
                        <externalMetadataColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].ExternalColumns[tld]"
                          dataType="wstr"
                          length="15"
                          name="tld" />
                        <externalMetadataColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].ExternalColumns[source_domain_id]"
                          dataType="i4"
                          name="source_domain_id" />
                        <externalMetadataColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].ExternalColumns[phase]"
                          dataType="wstr"
                          length="15"
                          name="phase" />
                        <externalMetadataColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].ExternalColumns[status]"
                          dataType="wstr"
                          length="100"
                          name="status" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Error Output]"
                      isErrorOut="true"
                      name="ODBC Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Error Output].Columns[id]"
                          dataType="guid"
                          externalMetadataColumnId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].ExternalColumns[id]"
                          lineageId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Error Output].Columns[id]"
                          name="id" />
                        <outputColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Error Output].Columns[tld]"
                          dataType="wstr"
                          externalMetadataColumnId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].ExternalColumns[tld]"
                          length="15"
                          lineageId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Error Output].Columns[tld]"
                          name="tld" />
                        <outputColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Error Output].Columns[source_domain_id]"
                          dataType="i4"
                          externalMetadataColumnId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].ExternalColumns[source_domain_id]"
                          lineageId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Error Output].Columns[source_domain_id]"
                          name="source_domain_id" />
                        <outputColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Error Output].Columns[phase]"
                          dataType="wstr"
                          externalMetadataColumnId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output].ExternalColumns[phase]"
                          length="15"
                          lineageId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Error Output].Columns[phase]"
                          name="phase" />
                        <outputColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Error Output].Columns[status]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Error Output].Columns[status]"
                          name="status" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\04 Mark Enom domains\Mark domain as migrated in Enom.Paths[ODBC Source Output]"
                  endId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination.Inputs[ADO NET Destination Input]"
                  name="ODBC Source Output"
                  startId="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain.Outputs[ODBC Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\04 Mark Enom domains\Merge Enom_TDP_domain_ to Enom_TDP_domain"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{8576E709-C111-44D3-8373-80534C7B879B}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Merge Enom_TDP_domain_ to Enom_TDP_domain"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"
BEGIN
	INSERT INTO [dbo]."+ @[$Package::Enom_TDP_domain_table_name] +"  ([TLD] ,[TDP_domain_id] ,[DomainNameId]  ,[Migration_phase],[Status])
	SELECT d_.TLD, d_.TDP_domain_id, d_.DomainNameId,  d_.Migration_phase, d_.status
	FROM [dbo].[TDP_domain_]  d_
	LEFT JOIN [dbo]."+ @[$Package::Enom_TDP_domain_table_name] +" d on d.[DomainNameId]=d_.[DomainNameId]
	WHERE d.DomainNameId IS NULL
END
"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{EA1AB8D1-1F16-4E59-BEBD-75ADB38848AE}"
              SQLTask:SqlStatementSource="&#xA;BEGIN&#xA;&#x9;INSERT INTO [dbo].TDP_domain_test  ([TLD] ,[TDP_domain_id] ,[DomainNameId]  ,[Migration_phase],[Status])&#xA;&#x9;SELECT d_.TLD, d_.TDP_domain_id, d_.DomainNameId,  d_.Migration_phase, d_.status&#xA;&#x9;FROM [dbo].[TDP_domain_]  d_&#xA;&#x9;LEFT JOIN [dbo].TDP_domain_test d on d.[DomainNameId]=d_.[DomainNameId]&#xA;&#x9;WHERE d.DomainNameId IS NULL&#xA;END&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\04 Mark Enom domains.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{10544117-922A-406B-9F3D-EEF6CC0BCE64}"
          DTS:From="Package\04 Mark Enom domains\Clean Enom_TDP_domain_"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\04 Mark Enom domains\Mark domain as migrated in Enom" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\04 Mark Enom domains.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{90674599-2425-4DFC-8877-2A00071E499F}"
          DTS:From="Package\04 Mark Enom domains\Mark domain as migrated in Enom"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\04 Mark Enom domains\Merge Enom_TDP_domain_ to Enom_TDP_domain" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\04 Mark Enom domains.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{F4DE5064-6FC9-4A6E-A922-66E3ADBBD9FA}"
          DTS:From="Package\04 Mark Enom domains\Merge Enom_TDP_domain_ to Enom_TDP_domain"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\04 Mark Enom domains\dm_log - dm_end" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create partition in ITDP for tenant and tld"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{98EAB865-C726-42EA-933F-E272E99C5A26}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create partition in ITDP for tenant and tld"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:PropertyExpression
        DTS:Name="SqlStatementSource">"
-- domain
CREATE TABLE IF NOT EXISTS   itdp.domain_"+ @[$Package::Tenant] +"  PARTITION OF itdp.DOMAIN
    FOR VALUES IN ('"+ @[$Package::Tenant] +"')
   PARTITION BY LIST (tld);
  
CREATE TABLE IF NOT EXISTS  itdp.domain_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"  PARTITION OF itdp.domain_"+ @[$Package::Tenant] +"
    FOR VALUES IN ('"+ @[$Package::TLD] +"');  

CREATE INDEX  IF NOT EXISTS domain_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_source_domain_id_idx ON itdp.domain_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"  USING btree (source_domain_id);

DO $$
BEGIN 
	if not exists (select conname    FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         
        WHERE relname = 'domain_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"' AND nspname='itdp'  and conname = 'domain_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_name_key') then
     	ALTER TABLE itdp.domain_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"   ADD CONSTRAINT domain_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_name_key UNIQUE (name);
    end if;
	if not exists (select conname    FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         
        WHERE relname = 'domain_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"' AND nspname='itdp'  and conname = 'domain_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_status_id_fkey') then
     	ALTER TABLE itdp.domain_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"   ADD 	CONSTRAINT domain_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_status_id_fkey FOREIGN KEY (status_id) REFERENCES itdp.domain_status(id);
    end if;	
END$$  ;

-------------------------------------------------------------------------------------------------------    
-- host    
CREATE TABLE IF NOT EXISTS   itdp.host_"+ @[$Package::Tenant] +" PARTITION OF itdp.host
   FOR VALUES IN ('"+ @[$Package::Tenant] +"')
   PARTITION BY LIST (tld);
  
CREATE TABLE IF NOT EXISTS  itdp.host_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"  PARTITION OF itdp.host_"+ @[$Package::Tenant] +"
    FOR VALUES IN ('"+ @[$Package::TLD] +"'); 

CREATE INDEX  IF NOT EXISTS host_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_source_host_id_idx ON itdp.host_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +" USING btree (source_host_id);
CREATE INDEX  IF NOT EXISTS host_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_name_idx ON itdp.host_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +" USING btree (name);
CREATE INDEX  IF NOT EXISTS host_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_itdp_domain_id_idx ON itdp.host_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +" USING btree (itdp_domain_id) ;

--------------------------------------------------------------------------------------------------------   
--contact   
 CREATE TABLE IF NOT EXISTS  itdp.contact_"+ @[$Package::Tenant] +"  PARTITION OF itdp.contact
    FOR VALUES IN ('"+ @[$Package::Tenant] +"')
   PARTITION BY LIST (tld);
  
CREATE TABLE IF NOT EXISTS  itdp.contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"  PARTITION OF itdp.contact_"+ @[$Package::Tenant] +"
    FOR VALUES IN ('"+ @[$Package::TLD] +"'); 
 
 CREATE INDEX  IF NOT EXISTS contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_source_contact_id_idx ON itdp.contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +" USING btree (source_contact_id);

DO $$
BEGIN 
	if not exists (select conname    FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         
        WHERE relname = 'contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"' AND nspname='itdp'  and conname = 'contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_country_fkey') then
     	ALTER TABLE itdp.contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"   ADD CONSTRAINT contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_country_fkey FOREIGN KEY (country) REFERENCES itdp.country(alpha2);
    end if;
	if not exists (select conname    FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         
        WHERE relname = 'contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"' AND nspname='itdp'  and conname = 'contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_language_fkey') then
     	ALTER TABLE itdp.contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"   ADD CONSTRAINT contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_language_fkey FOREIGN KEY (language) REFERENCES itdp.language(alpha2); 
    end if;
	if not exists (select conname    FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         
        WHERE relname = 'contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"' AND nspname='itdp'  and conname = 'contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_type_id_fkey') then
     	ALTER TABLE itdp.contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"    ADD CONSTRAINT contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_type_id_fkey FOREIGN KEY (type_id) REFERENCES itdp.contact_type(id) ; 
    end if;
END$$  ;
   
 -------------------------------------------------------------------------------------------  
--contact_postal   
 CREATE TABLE IF NOT EXISTS  itdp.contact_postal_"+ @[$Package::Tenant] +"  PARTITION OF itdp.contact_postal 
    FOR VALUES IN ('"+ @[$Package::Tenant] +"')
   PARTITION BY LIST (tld);
  
CREATE TABLE IF NOT EXISTS  itdp.contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"  PARTITION OF itdp.contact_postal_"+ @[$Package::Tenant] +"
    FOR VALUES IN ('"+ @[$Package::TLD] +"'); 

DO $$
BEGIN 
	if not exists (select conname    FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         
        WHERE relname = 'contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"' AND nspname='itdp'  and conname = 'contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_check') then
     	ALTER TABLE itdp.contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"   ADD CONSTRAINT contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_check CHECK (((NOT is_international) OR (is_null_or_ascii(first_name) AND is_null_or_ascii(last_name)
	AND is_null_or_ascii(org_name) AND is_null_or_ascii(address1) AND is_null_or_ascii(address2) AND is_null_or_ascii(address3)
	AND is_null_or_ascii(city) AND is_null_or_ascii(postal_code) AND is_null_or_ascii(state))));
    end if;
	if not exists (select conname    FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         
        WHERE relname = 'contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"' AND nspname='itdp'  and conname = 'contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_contact_id_is_international_key') then
     	ALTER TABLE itdp.contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"   ADD CONSTRAINT contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_contact_id_is_international_key UNIQUE (contact_id, is_international);
    end if;
	if not exists (select conname    FROM pg_constraint
		INNER JOIN pg_class ON conrelid=pg_class.oid
		INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         
        WHERE relname = 'contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"' AND nspname='itdp'  and conname = 'contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_contact_id_fkey') then
     	ALTER TABLE itdp.contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"    ADD CONSTRAINT contact_postal_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"_contact_id_fkey FOREIGN KEY (dm_source,tld,contact_id) REFERENCES itdp.contact_"+ @[$Package::Tenant] +"_"+ REPLACE(@[$Package::TLD],".","_") +"(dm_source,tld,id);
    end if;
END$$  ; 
   "</DTS:PropertyExpression>
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
          SQLTask:SqlStatementSource="&#xA;-- domain&#xA;CREATE TABLE IF NOT EXISTS   itdp.domain_enom  PARTITION OF itdp.DOMAIN&#xA;    FOR VALUES IN ('enom')&#xA;   PARTITION BY LIST (tld);&#xA;  &#xA;CREATE TABLE IF NOT EXISTS  itdp.domain_enom_co_in  PARTITION OF itdp.domain_enom&#xA;    FOR VALUES IN ('co.in');  &#xA;&#xA;CREATE INDEX  IF NOT EXISTS domain_enom_co_in_source_domain_id_idx ON itdp.domain_enom_co_in  USING btree (source_domain_id);&#xA;&#xA;DO $$&#xA;BEGIN &#xA;&#x9;if not exists (select conname    FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         &#xA;        WHERE relname = 'domain_enom_co_in' AND nspname='itdp'  and conname = 'domain_enom_co_in_name_key') then&#xA;     &#x9;ALTER TABLE itdp.domain_enom_co_in   ADD CONSTRAINT domain_enom_co_in_name_key UNIQUE (name);&#xA;    end if;&#xA;&#x9;if not exists (select conname    FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         &#xA;        WHERE relname = 'domain_enom_co_in' AND nspname='itdp'  and conname = 'domain_enom_co_in_status_id_fkey') then&#xA;     &#x9;ALTER TABLE itdp.domain_enom_co_in   ADD &#x9;CONSTRAINT domain_enom_co_in_status_id_fkey FOREIGN KEY (status_id) REFERENCES itdp.domain_status(id);&#xA;    end if;&#x9;&#xA;END$$  ;&#xA;&#xA;-------------------------------------------------------------------------------------------------------    &#xA;-- host    &#xA;CREATE TABLE IF NOT EXISTS   itdp.host_enom PARTITION OF itdp.host&#xA;   FOR VALUES IN ('enom')&#xA;   PARTITION BY LIST (tld);&#xA;  &#xA;CREATE TABLE IF NOT EXISTS  itdp.host_enom_co_in  PARTITION OF itdp.host_enom&#xA;    FOR VALUES IN ('co.in'); &#xA;&#xA;CREATE INDEX  IF NOT EXISTS host_enom_co_in_source_host_id_idx ON itdp.host_enom_co_in USING btree (source_host_id);&#xA;CREATE INDEX  IF NOT EXISTS host_enom_co_in_name_idx ON itdp.host_enom_co_in USING btree (name);&#xA;CREATE INDEX  IF NOT EXISTS host_enom_co_in_itdp_domain_id_idx ON itdp.host_enom_co_in USING btree (itdp_domain_id) ;&#xA;&#xA;--------------------------------------------------------------------------------------------------------   &#xA;--contact   &#xA; CREATE TABLE IF NOT EXISTS  itdp.contact_enom  PARTITION OF itdp.contact&#xA;    FOR VALUES IN ('enom')&#xA;   PARTITION BY LIST (tld);&#xA;  &#xA;CREATE TABLE IF NOT EXISTS  itdp.contact_enom_co_in  PARTITION OF itdp.contact_enom&#xA;    FOR VALUES IN ('co.in'); &#xA; &#xA; CREATE INDEX  IF NOT EXISTS contact_enom_co_in_source_contact_id_idx ON itdp.contact_enom_co_in USING btree (source_contact_id);&#xA;&#xA;DO $$&#xA;BEGIN &#xA;&#x9;if not exists (select conname    FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         &#xA;        WHERE relname = 'contact_enom_co_in' AND nspname='itdp'  and conname = 'contact_enom_co_in_country_fkey') then&#xA;     &#x9;ALTER TABLE itdp.contact_enom_co_in   ADD CONSTRAINT contact_enom_co_in_country_fkey FOREIGN KEY (country) REFERENCES itdp.country(alpha2);&#xA;    end if;&#xA;&#x9;if not exists (select conname    FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         &#xA;        WHERE relname = 'contact_enom_co_in' AND nspname='itdp'  and conname = 'contact_enom_co_in_language_fkey') then&#xA;     &#x9;ALTER TABLE itdp.contact_enom_co_in   ADD CONSTRAINT contact_enom_co_in_language_fkey FOREIGN KEY (language) REFERENCES itdp.language(alpha2); &#xA;    end if;&#xA;&#x9;if not exists (select conname    FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         &#xA;        WHERE relname = 'contact_enom_co_in' AND nspname='itdp'  and conname = 'contact_enom_co_in_type_id_fkey') then&#xA;     &#x9;ALTER TABLE itdp.contact_enom_co_in    ADD CONSTRAINT contact_enom_co_in_type_id_fkey FOREIGN KEY (type_id) REFERENCES itdp.contact_type(id) ; &#xA;    end if;&#xA;END$$  ;&#xA;   &#xA; -------------------------------------------------------------------------------------------  &#xA;--contact_postal   &#xA; CREATE TABLE IF NOT EXISTS  itdp.contact_postal_enom  PARTITION OF itdp.contact_postal &#xA;    FOR VALUES IN ('enom')&#xA;   PARTITION BY LIST (tld);&#xA;  &#xA;CREATE TABLE IF NOT EXISTS  itdp.contact_postal_enom_co_in  PARTITION OF itdp.contact_postal_enom&#xA;    FOR VALUES IN ('co.in'); &#xA;&#xA;DO $$&#xA;BEGIN &#xA;&#x9;if not exists (select conname    FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         &#xA;        WHERE relname = 'contact_postal_enom_co_in' AND nspname='itdp'  and conname = 'contact_postal_enom_co_in_check') then&#xA;     &#x9;ALTER TABLE itdp.contact_postal_enom_co_in   ADD CONSTRAINT contact_postal_enom_co_in_check CHECK (((NOT is_international) OR (is_null_or_ascii(first_name) AND is_null_or_ascii(last_name)&#xA;&#x9;AND is_null_or_ascii(org_name) AND is_null_or_ascii(address1) AND is_null_or_ascii(address2) AND is_null_or_ascii(address3)&#xA;&#x9;AND is_null_or_ascii(city) AND is_null_or_ascii(postal_code) AND is_null_or_ascii(state))));&#xA;    end if;&#xA;&#x9;if not exists (select conname    FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         &#xA;        WHERE relname = 'contact_postal_enom_co_in' AND nspname='itdp'  and conname = 'contact_postal_enom_co_in_contact_id_is_international_key') then&#xA;     &#x9;ALTER TABLE itdp.contact_postal_enom_co_in   ADD CONSTRAINT contact_postal_enom_co_in_contact_id_is_international_key UNIQUE (contact_id, is_international);&#xA;    end if;&#xA;&#x9;if not exists (select conname    FROM pg_constraint&#xA;&#x9;&#x9;INNER JOIN pg_class ON conrelid=pg_class.oid&#xA;&#x9;&#x9;INNER JOIN pg_namespace ON pg_namespace.oid=pg_class.relnamespace         &#xA;        WHERE relname = 'contact_postal_enom_co_in' AND nspname='itdp'  and conname = 'contact_postal_enom_co_in_contact_id_fkey') then&#xA;     &#x9;ALTER TABLE itdp.contact_postal_enom_co_in    ADD CONSTRAINT contact_postal_enom_co_in_contact_id_fkey FOREIGN KEY (dm_source,tld,contact_id) REFERENCES itdp.contact_enom_co_in(dm_source,tld,id);&#xA;    end if;&#xA;END$$  ; &#xA;   " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{5D6E2EDF-C431-420C-AFD1-1F3CCCBD876A}"
      DTS:From="Package\01 Extract Enom domain, contact, host"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{BDEFCEDD-FA4B-461A-B87B-530A53414F30}"
      DTS:From="Package\00 Schemas creation"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Create partition in ITDP for tenant and tld" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{C40E859C-AB38-4DB1-A5AD-08D4051E3802}"
      DTS:From="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{F31FF808-6814-4FD7-9A0C-934298161413}"
      DTS:From="Package\Create partition in ITDP for tenant and tld"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\01 Extract Enom domain, contact, host" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{3CC230D4-746D-4E32-9535-B12212A80C26}"
      DTS:From="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\04 Mark Enom domains" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{F22C207F-774F-4FCE-8467-2C38A5D388A0}"
      DTS:EventID="10485920"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{6D8E04A9-5E8E-4ECF-B593-C5EAE8794ABF}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Save errorlog"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{FBB7A1AD-C1AE-4B4D-8AD6-12A68E5C67CD}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Save errorlog"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"INSERT INTO itdp.ssis_errorlog
(id, machinename, packagename, taskname, errorcode, errordescription, dated)
VALUES(gen_random_uuid(), '"+ @[System::MachineName]+" ', '"+ @[System::PackageName] +"', '"+ @[System::SourceName]  +"', "+(DT_WSTR,12) @[System::ErrorCode] +", '"+ REPLACE(@[System::ErrorDescription],"'","") +"', now())"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{7DFCCC25-E16B-4CF6-B7A1-BB7346811ED8}"
              SQLTask:SqlStatementSource="INSERT INTO itdp.ssis_errorlog&#xA;(id, machinename, packagename, taskname, errorcode, errordescription, dated)&#xA;VALUES(gen_random_uuid(), 'CEN0VWSQLMGR01 ', 'Enom_dm_by_TLD', '', 0, '', now())" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="256" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="224,41.6"
          Id="Package\00 Schemas creation\00_1 Create schema dm_enom"
          TopLeft="25.617414204555,14.9403477653672" />
        <NodeLayout
          Size="168,41.6"
          Id="Package\00 Schemas creation\00_2 Create schema itdp"
          TopLeft="248.916637098211,15.0842065338914" />
        <NodeLayout
          Size="289.6,41.6"
          Id="Package\00 Schemas creation\00_3 Populate itdp_TLD list for data migration"
          TopLeft="225.433318262465,82.8666657566362" />
        <NodeLayout
          Size="257.6,41.6"
          Id="Package\00 Schemas creation\00_4 Create Enom_TDP_domain table"
          TopLeft="432.869668959655,15.5030292894502" />
        <EdgeLayout
          Id="Package\00 Schemas creation.PrecedenceConstraints[Constraint 1]"
          TopLeft="332.916637098211,56.6842065338914">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="37.316681164254,26.1824592227448"
              Start="0,0"
              End="37.316681164254,18.6824592227448">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.0912296113724" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.0912296113724"
                    Point2="0,13.0912296113724"
                    Point3="4,13.0912296113724" />
                  <mssgle:LineSegment
                    End="33.316681164254,13.0912296113724" />
                  <mssgle:CubicBezierSegment
                    Point1="33.316681164254,13.0912296113724"
                    Point2="37.316681164254,13.0912296113724"
                    Point3="37.316681164254,17.0912296113724" />
                  <mssgle:LineSegment
                    End="37.316681164254,18.6824592227448" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="713.6,179.2"
          Size="713.6,222.4"
          Id="Package\00 Schemas creation"
          TopLeft="764.366631197767,41.6848482339198" />
        <NodeLayout
          Size="176.8,48"
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Clean Enom_TDP_domain (Exists TDP)"
          TopLeft="21.3333324682382,66.3333318206335" />
        <NodeLayout
          Size="172,48.8"
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO"
          TopLeft="24.1363626294066,221.092661681927" />
        <NodeLayout
          Size="220.8,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC"
          TopLeft="3.83333342439585,151.480699426197" />
        <NodeLayout
          Size="208,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Clean Enom_TDP_domain_"
          TopLeft="16.6909035402268,5.5" />
        <NodeLayout
          Size="240.8,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_"
          TopLeft="5.5,78.4878788103424" />
        <NodeLayout
          Size="209.6,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Merge Enom_TDP_domain_ to Enom_TDP_domain"
          TopLeft="19.2333440787261,147.433331784474" />
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP.PrecedenceConstraints[Constraint 1]"
          TopLeft="123.295451770113,47.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.3878788103424"
              Start="0,0"
              End="0,23.8878788103424">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.8878788103424" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP.PrecedenceConstraints[Constraint 2]"
          TopLeft="125.166672039363,120.087878810342">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.3454529741311"
              Start="0,0"
              End="0,19.8454529741311">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.8454529741311" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="252.8,195.2"
          Size="252.8,238.4"
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP"
          TopLeft="280.366642125283,5.06666440063066" />
        <NodeLayout
          Size="240,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Merge DomainName_ to DomainNmae"
          TopLeft="274.01891846524,278.880697744751" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Truncate DomainName_"
          TopLeft="17.8636294853961,5.25039720246099" />
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain.PrecedenceConstraints[Constraint]"
          TopLeft="173.863629485396,26.450397202461">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-64.1302970171579,39.8829346181725"
              Start="0,0"
              End="-64.1302970171579,32.3829346181725">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-60.1302970171579,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-60.1302970171579,0"
                    Point2="-64.1302970171579,0"
                    Point3="-64.1302970171579,4" />
                  <mssgle:LineSegment
                    End="-64.1302970171579,32.3829346181725" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain.PrecedenceConstraints[Constraint 1]"
          TopLeft="111.983332946317,114.333331820634">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.1473676055635"
              Start="0,0"
              End="0,29.6473676055635">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.6473676055635" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain.PrecedenceConstraints[Constraint 2]"
          TopLeft="406.766642125283,243.466664400631">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-12.747723660043,35.4140333441199"
              Start="0,0"
              End="-12.747723660043,27.9140333441199">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.70701667206" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.70701667206"
                    Point2="0,17.70701667206"
                    Point3="-4,17.70701667206" />
                  <mssgle:LineSegment
                    End="-8.74772366004299,17.70701667206" />
                  <mssgle:CubicBezierSegment
                    Point1="-8.74772366004299,17.70701667206"
                    Point2="-12.747723660043,17.70701667206"
                    Point3="-12.747723660043,21.70701667206" />
                  <mssgle:LineSegment
                    End="-12.747723660043,27.9140333441199" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain.PrecedenceConstraints[Constraint 3]"
          TopLeft="224.633333424396,172.280699426197">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="55.7333087008872,-48.0140350255664"
              Start="0,0"
              End="48.2333087008872,-48.0140350255664">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="23.8666543504436,0" />
                  <mssgle:CubicBezierSegment
                    Point1="23.8666543504436,0"
                    Point2="27.8666543504436,0"
                    Point3="27.8666543504436,-4" />
                  <mssgle:LineSegment
                    End="27.8666543504436,-44.0140350255664" />
                  <mssgle:CubicBezierSegment
                    Point1="27.8666543504436,-44.0140350255664"
                    Point2="27.8666543504436,-48.0140350255664"
                    Point3="31.8666543504436,-48.0140350255664" />
                  <mssgle:LineSegment
                    End="48.2333087008872,-48.0140350255664" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="537.6,375.2"
          Size="537.6,417.6"
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain"
          TopLeft="17.5060756663935,61.499999276797" />
        <NodeLayout
          Size="280.8,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_1_4 Add DNS host to nameservers table"
          TopLeft="599.299968173605,720.292978478991" />
        <NodeLayout
          Size="260,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_"
          TopLeft="1.00000111758698,61.0877134084487" />
        <NodeLayout
          Size="160.8,63.2"
          Id="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Merge DomainContact_ to DomainContact"
          TopLeft="7.37500092200929,128.929817882794" />
        <NodeLayout
          Size="184.8,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Truncate DomainContact_"
          TopLeft="7.54166367712125,5.5" />
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact.PrecedenceConstraints[Constraint]"
          TopLeft="131.000001117587,102.687713408449">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-43.2250001955777,26.2421044743453"
              Start="0,0"
              End="-43.2250001955777,18.7421044743453">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.12105223717263" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.12105223717263"
                    Point2="0,13.1210522371726"
                    Point3="-4,13.1210522371726" />
                  <mssgle:LineSegment
                    End="-39.2250001955777,13.1210522371726" />
                  <mssgle:CubicBezierSegment
                    Point1="-39.2250001955777,13.1210522371726"
                    Point2="-43.2250001955777,13.1210522371726"
                    Point3="-43.2250001955777,17.1210522371726" />
                  <mssgle:LineSegment
                    End="-43.2250001955777,18.7421044743453" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact.PrecedenceConstraints[Constraint 1]"
          TopLeft="192.341663677121,26.7">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-61.3416625595343,34.3877134084487"
              Start="0,0"
              End="-61.3416625595343,26.8877134084487">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-57.3416625595343,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-57.3416625595343,0"
                    Point2="-61.3416625595343,0"
                    Point3="-61.3416625595343,4" />
                  <mssgle:LineSegment
                    End="-61.3416625595343,26.8877134084487" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="267.2,247.2"
          Size="267.2,289.6"
          Id="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact"
          TopLeft="6.69169962410263,541.566665937438" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Delete duplicate"
          TopLeft="42.8333087008871,142.799998011192" />
        <NodeLayout
          Size="200.8,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_"
          TopLeft="27.3749714177111,67.5263139939867" />
        <NodeLayout
          Size="156,49.6"
          Id="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Merge NameServers_ to NameServers"
          TopLeft="45.4999705329549,213.442101833068" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Truncate NameServers_"
          TopLeft="32.9999711662542,7.83891400828938" />
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers.PrecedenceConstraints[Constraint]"
          TopLeft="186.599971166254,29.0389140082894">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-58.8249997485431,38.4873999856973"
              Start="0,0"
              End="-58.8249997485431,30.9873999856973">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-54.8249997485431,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-54.8249997485431,0"
                    Point2="-58.8249997485431,0"
                    Point3="-58.8249997485431,4" />
                  <mssgle:LineSegment
                    End="-58.8249997485431,30.9873999856973" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers.PrecedenceConstraints[Constraint 1]"
          TopLeft="127.774971417711,109.126313993987">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-8.54166271682402,33.673684017205"
              Start="0,0"
              End="-8.54166271682402,26.173684017205">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.8368420086025" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.8368420086025"
                    Point2="0,16.8368420086025"
                    Point3="-4,16.8368420086025" />
                  <mssgle:LineSegment
                    End="-4.54166271682402,16.8368420086025" />
                  <mssgle:CubicBezierSegment
                    Point1="-4.54166271682402,16.8368420086025"
                    Point2="-8.54166271682402,16.8368420086025"
                    Point3="-8.54166271682402,20.8368420086025" />
                  <mssgle:LineSegment
                    End="-8.54166271682402,26.173684017205" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers.PrecedenceConstraints[Constraint 2]"
          TopLeft="121.366639616921,184.399998011192">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.0421038218759"
              Start="0,0"
              End="0,21.5421038218759">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5421038218759" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="257.6,275.2"
          Size="257.6,318.4"
          Id="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers"
          TopLeft="292.105298994666,520.299996420145" />
        <NodeLayout
          Size="265.6,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\Create or truncate nazca_domaincontact"
          TopLeft="59.6666703340082,5.94736273409285" />
        <NodeLayout
          Size="284.8,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca"
          TopLeft="50.2916707531032,68.2105199451926" />
        <NodeLayout
          Size="316,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private"
          TopLeft="26.3333334243963,184.294733855437" />
        <NodeLayout
          Size="233.6,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\Merge Contact_Private to Contact"
          TopLeft="82.5833354877928,302.975433065306" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\Set TLD, type_c"
          TopLeft="93.9999601145605,235.133332182235" />
        <NodeLayout
          Size="201.6,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\Truncate dm_enom_contact_private"
          TopLeft="34.6666714515951,130.701749517867" />
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca.PrecedenceConstraints[Constraint]"
          TopLeft="59.6666703340082,26.7473627340928">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9.37499958090498,62.2631572110998"
              Start="0,0"
              End="-16.874999580905,62.2631572110998">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-27.874999580905,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-27.874999580905,0"
                    Point2="-31.874999580905,0"
                    Point3="-31.874999580905,4" />
                  <mssgle:LineSegment
                    End="-31.874999580905,58.2631572110998" />
                  <mssgle:CubicBezierSegment
                    Point1="-31.874999580905,58.2631572110998"
                    Point2="-31.874999580905,62.2631572110998"
                    Point3="-27.874999580905,62.2631572110998" />
                  <mssgle:LineSegment
                    End="-16.874999580905,62.2631572110998" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca.PrecedenceConstraints[Constraint 1]"
          TopLeft="192.691670753103,109.810519945193">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="44.3750006984919,36.3578962393411"
              Start="0,0"
              End="36.8750006984919,36.3578962393411">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.3578962393411" />
                  <mssgle:CubicBezierSegment
                    Point1="0,32.3578962393411"
                    Point2="0,36.3578962393411"
                    Point3="4,36.3578962393411" />
                  <mssgle:LineSegment
                    End="36.8750006984919,36.3578962393411" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca.PrecedenceConstraints[Constraint 2]"
          TopLeft="236.266671451595,157.101749517867">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-51.9333380271988,27.19298433757"
              Start="0,0"
              End="-51.9333380271988,19.69298433757">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-47.9333380271988,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-47.9333380271988,0"
                    Point2="-51.9333380271988,0"
                    Point3="-51.9333380271988,4" />
                  <mssgle:LineSegment
                    End="-51.9333380271988,19.69298433757" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca.PrecedenceConstraints[Constraint 3]"
          TopLeft="184.333333424396,225.894733855437">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="62.4666266901642,30.038598326798"
              Start="0,0"
              End="54.9666266901642,30.038598326798">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.038598326798" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.038598326798"
                    Point2="0,30.038598326798"
                    Point3="4,30.038598326798" />
                  <mssgle:LineSegment
                    End="54.9666266901642,30.038598326798" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca.PrecedenceConstraints[Constraint 4]"
          TopLeft="170.399960114561,276.733332182235">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="29.3833753732323,26.2421008830709"
              Start="0,0"
              End="29.3833753732323,18.7421008830709">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.12105044153543" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.12105044153543"
                    Point2="0,13.1210504415354"
                    Point3="4,13.1210504415354" />
                  <mssgle:LineSegment
                    End="25.3833753732323,13.1210504415354" />
                  <mssgle:CubicBezierSegment
                    Point1="25.3833753732323,13.1210504415354"
                    Point2="29.3833753732323,13.1210504415354"
                    Point3="29.3833753732323,17.1210504415354" />
                  <mssgle:LineSegment
                    End="29.3833753732323,18.7421008830709" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="368,364"
          Size="368,407.2"
          Id="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca"
          TopLeft="593.52498007901,230.233333122398" />
        <NodeLayout
          Size="286.4,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Merge Contact_ to Contact only for thick TLD"
          TopLeft="37.1332935389562,71.866665521595" />
        <NodeLayout
          Size="198.4,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact\Populate contact__c_type"
          TopLeft="41.0666324271113,7.13333297775881" />
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact.PrecedenceConstraints[Constraint]"
          TopLeft="139.866632427111,48.7333329777588">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="40.0666611118449,23.1333325438362"
              Start="0,0"
              End="40.0666611118449,15.6333325438362">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.56666627191809" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.56666627191809"
                    Point2="0,11.5666662719181"
                    Point3="4,11.5666662719181" />
                  <mssgle:LineSegment
                    End="36.0666611118449,11.5666662719181" />
                  <mssgle:CubicBezierSegment
                    Point1="36.0666611118449,11.5666662719181"
                    Point2="40.0666611118449,11.5666662719181"
                    Point3="40.0666611118449,15.5666662719181" />
                  <mssgle:LineSegment
                    End="40.0666611118449,15.6333325438362" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="328,126.4"
          Size="328,169.6"
          Id="Package\01 Extract Enom domain, contact, host\01_5 Extract public contact"
          TopLeft="620.63328547991,17.5333331224008" />
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\01 Extract Enom domain, contact, host\dm_log - dm_start"
          TopLeft="235.199983608723,6.93333690113633" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\01 Extract Enom domain, contact, host\Get max dm_log"
          TopLeft="15.2666622045966,7.66667009585473" />
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host.PrecedenceConstraints[Constraint]"
          TopLeft="375.106075666393,479.899999276797">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="46.1992233282725,40.3999971433482"
              Start="0,0"
              End="46.1992233282725,32.8999971433482">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.231821074483" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.231821074483"
                    Point2="0,16.231821074483"
                    Point3="4,16.231821074483" />
                  <mssgle:LineSegment
                    End="42.1992233282725,16.231821074483" />
                  <mssgle:CubicBezierSegment
                    Point1="42.1992233282725,16.231821074483"
                    Point2="46.1992233282725,16.231821074483"
                    Point3="46.1992233282725,20.231821074483" />
                  <mssgle:LineSegment
                    End="46.1992233282725,32.8999971433482" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host.PrecedenceConstraints[Constraint 2]"
          TopLeft="169.666662204597,28.1000034984955">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="65.5333214041265,0"
              Start="0,0"
              End="58.0333214041265,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="58.0333214041265,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host.PrecedenceConstraints[Constraint 3]"
          TopLeft="198.306075666393,479.899999276797">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-58.0143760422908,61.6666666606409"
              Start="0,0"
              End="-58.0143760422908,54.1666666606409">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.7762962938753" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.7762962938753"
                    Point2="0,24.7762962938753"
                    Point3="-4,24.7762962938753" />
                  <mssgle:LineSegment
                    End="-54.0143760422908,24.7762962938753" />
                  <mssgle:CubicBezierSegment
                    Point1="-54.0143760422908,24.7762962938753"
                    Point2="-58.0143760422908,24.7762962938753"
                    Point3="-58.0143760422908,28.7762962938753" />
                  <mssgle:LineSegment
                    End="-58.0143760422908,54.1666666606409" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host.PrecedenceConstraints[Constraint 4]"
          TopLeft="555.106075666394,338.566665943464">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="38.4189044126163,95.2666671789344"
              Start="0,0"
              End="30.9189044126163,95.2666671789344">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="11.4555439888922,0" />
                  <mssgle:CubicBezierSegment
                    Point1="11.4555439888922,0"
                    Point2="15.4555439888922,0"
                    Point3="15.4555439888922,4" />
                  <mssgle:LineSegment
                    End="15.4555439888922,91.2666671789344" />
                  <mssgle:CubicBezierSegment
                    Point1="15.4555439888922,91.2666671789344"
                    Point2="15.4555439888922,95.2666671789344"
                    Point3="19.4555439888922,95.2666671789344" />
                  <mssgle:LineSegment
                    End="30.9189044126163,95.2666671789344" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host.PrecedenceConstraints[Constraint 5]"
          TopLeft="555.106075666394,202.03333261013">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="65.5272098135165,-99.6999994877295"
              Start="0,0"
              End="58.0272098135165,-99.6999994877295">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="22.3609462379566,0" />
                  <mssgle:CubicBezierSegment
                    Point1="22.3609462379566,0"
                    Point2="26.3609462379566,0"
                    Point3="26.3609462379566,-4" />
                  <mssgle:LineSegment
                    End="26.3609462379566,-95.6999994877295" />
                  <mssgle:CubicBezierSegment
                    Point1="26.3609462379566,-95.6999994877295"
                    Point2="26.3609462379566,-99.6999994877295"
                    Point3="30.3609462379566,-99.6999994877295" />
                  <mssgle:LineSegment
                    End="58.0272098135165,-99.6999994877295" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="993.6,893.6"
          Size="993.6,936.8"
          Id="Package\01 Extract Enom domain, contact, host"
          TopLeft="763.866637344493,393.033330600229" />
        <NodeLayout
          Size="182.4,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Add DNS host to nameservers table"
          TopLeft="180.66668638173,276.999998246233" />
        <NodeLayout
          Size="184,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Add host error for not migrated domains"
          TopLeft="252.283313939059,156.933330790069" />
        <NodeLayout
          Size="177.6,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Create itdp_domain_itemp"
          TopLeft="32.9333156671802,75.3333313686317" />
        <NodeLayout
          Size="187.2,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Mark domain with min_nameservers problem"
          TopLeft="259.699973090988,361.533331748314" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Move domains with host error to domain_error"
          TopLeft="30.4999998634058,278.208769977227" />
        <NodeLayout
          Size="220.8,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Move domains with number of  host &lt;min_nameservers to domain_error"
          TopLeft="18.8833256861404,350.266663930548" />
        <NodeLayout
          Size="230.4,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Move host with domain error to host error table"
          TopLeft="12.4833147586227,415.266663478547" />
        <NodeLayout
          Size="134.4,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Populate itdp-domain"
          TopLeft="41.3999816964077,131.066665738556" />
        <NodeLayout
          Size="158.4,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp"
          TopLeft="231.916650914898,75.7912263861417" />
        <NodeLayout
          Size="203.2,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domains with expdate null to domain_error"
          TopLeft="238.599978964529,8.99999875247499" />
        <NodeLayout
          Size="225.6,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host  for domains migrated without errors to itdp"
          TopLeft="3.21663766528263,208.066665141914" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp"
          TopLeft="253.833319764999,209.650875597596" />
        <NodeLayout
          Size="196.8,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Truncate itdp_error_domain, error_host tables"
          TopLeft="11.2500020965105,8.96666664256009" />
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint]"
          TopLeft="208.050002096511,29.7833326975175">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="30.5499768680185,0"
              Start="0,0"
              End="23.0499768680185,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="23.0499768680185,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 10]"
          TopLeft="340.199978964529,50.599998752475">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-218.066663297349,24.7333326161567"
              Start="0,0"
              End="-218.066663297349,17.2333326161567">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.36666630807835" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.36666630807835"
                    Point2="0,12.3666663080784"
                    Point3="-4,12.3666663080784" />
                  <mssgle:LineSegment
                    End="-214.066663297349,12.3666663080784" />
                  <mssgle:CubicBezierSegment
                    Point1="-214.066663297349,12.3666663080784"
                    Point2="-218.066663297349,12.3666663080784"
                    Point3="-218.066663297349,16.3666663080784" />
                  <mssgle:LineSegment
                    End="-218.066663297349,17.2333326161567" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 11]"
          TopLeft="174.999981696408,157.466665738556">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="77.2833322426513,14.6666650515131"
              Start="0,0"
              End="69.7833322426513,14.6666650515131">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="34.6416661213257,0" />
                  <mssgle:CubicBezierSegment
                    Point1="34.6416661213257,0"
                    Point2="38.6416661213257,0"
                    Point3="38.6416661213257,4" />
                  <mssgle:LineSegment
                    End="38.6416661213257,10.6666650515131" />
                  <mssgle:CubicBezierSegment
                    Point1="38.6416661213257,10.6666650515131"
                    Point2="38.6416661213257,14.6666650515131"
                    Point3="42.6416661213257,14.6666650515131" />
                  <mssgle:LineSegment
                    End="69.7833322426513,14.6666650515131" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 2]"
          TopLeft="152.283304331949,249.666665141914">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="119.58338204978,27.3333331043188"
              Start="0,0"
              End="119.58338204978,19.8333331043188">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.04882619850632" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.04882619850632"
                    Point2="0,11.0488261985063"
                    Point3="4,11.0488261985063" />
                  <mssgle:LineSegment
                    End="115.58338204978,11.0488261985063" />
                  <mssgle:CubicBezierSegment
                    Point1="115.58338204978,11.0488261985063"
                    Point2="119.58338204978,11.0488261985063"
                    Point3="119.58338204978,15.0488261985063" />
                  <mssgle:LineSegment
                    End="119.58338204978,19.8333331043188" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 3]"
          TopLeft="252.283313939059,183.333330790069">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-23.4666762737764,45.5333343518445"
              Start="0,0"
              End="-15.9666762737764,45.5333343518445">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-5.90815220448335,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-5.90815220448335,0"
                    Point2="-9.90815220448335,0"
                    Point3="-9.90815220448335,4" />
                  <mssgle:LineSegment
                    End="-9.90815220448335,41.5333343518445" />
                  <mssgle:CubicBezierSegment
                    Point1="-9.90815220448335,41.5333343518445"
                    Point2="-9.90815220448335,45.5333343518445"
                    Point3="-13.9081522044834,45.5333343518445" />
                  <mssgle:LineSegment
                    End="-15.9666762737764,45.5333343518445" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 4]"
          TopLeft="128.283320222382,391.866663930548">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.3999995479982"
              Start="0,0"
              End="0,15.8999995479982">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.8999995479982" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 5]"
          TopLeft="79.749970998616,249.666665141914">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="15.5500288647899,28.5421048353129"
              Start="0,0"
              End="15.5500288647899,21.0421048353129">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.53744237709128" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.53744237709128"
                    Point2="0,11.5374423770913"
                    Point3="4,11.5374423770913" />
                  <mssgle:LineSegment
                    End="11.5500288647899,11.5374423770913" />
                  <mssgle:CubicBezierSegment
                    Point1="11.5500288647899,11.5374423770913"
                    Point2="15.5500288647899,11.5374423770913"
                    Point3="15.5500288647899,15.5374423770913" />
                  <mssgle:LineSegment
                    End="15.5500288647899,21.0421048353129" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 6]"
          TopLeft="94.5583294414398,319.808769977227">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.4578939533211"
              Start="0,0"
              End="0,22.9578939533211">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.9578939533211" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 7]"
          TopLeft="242.800019715063,318.599998246233">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-78.0500273622557,31.6666656843153"
              Start="0,0"
              End="-78.0500273622557,24.1666656843153">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.8629333896285" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.8629333896285"
                    Point2="0,15.8629333896285"
                    Point3="-4,15.8629333896285" />
                  <mssgle:LineSegment
                    End="-74.0500273622557,15.8629333896285" />
                  <mssgle:CubicBezierSegment
                    Point1="-74.0500273622557,15.8629333896285"
                    Point2="-78.0500273622557,15.8629333896285"
                    Point3="-78.0500273622557,19.8629333896285" />
                  <mssgle:LineSegment
                    End="-78.0500273622557,24.1666656843153" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 8]"
          TopLeft="122.13331566718,116.933331368632">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="52.8666660292275,29.3333343699243"
              Start="0,0"
              End="45.3666660292275,29.3333343699243">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.3333343699243" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.3333343699243"
                    Point2="0,29.3333343699243"
                    Point3="4,29.3333343699243" />
                  <mssgle:LineSegment
                    End="45.3666660292275,29.3333343699243" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host.PrecedenceConstraints[Constraint 9]"
          TopLeft="300.933353048396,318.599998246233">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="52.3666200425915,42.9333335020812"
              Start="0,0"
              End="52.3666200425915,35.4333335020812">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.3973334017129" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.3973334017129"
                    Point2="0,17.3973334017129"
                    Point3="4,17.3973334017129" />
                  <mssgle:LineSegment
                    End="48.3666200425915,17.3973334017129" />
                  <mssgle:CubicBezierSegment
                    Point1="48.3666200425915,17.3973334017129"
                    Point2="52.3666200425915,17.3973334017129"
                    Point3="52.3666200425915,21.3973334017129" />
                  <mssgle:LineSegment
                    End="52.3666200425915,35.4333335020812" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="456,463.2"
          Size="456,505.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host"
          TopLeft="5.5,67.2964925811375" />
        <NodeLayout
          Size="188.8,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Add contact_error for not migrated domains"
          TopLeft="229.99996011456,15.3999991863966" />
        <NodeLayout
          Size="142.4,46.4"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Add contact_error for wrong email"
          TopLeft="33.3999674906343,76.7999988428755" />
        <NodeLayout
          Size="142.4,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact\Create contact_itemp"
          TopLeft="9.03332973635884,5.5" />
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact\Populate contact_postal"
          TopLeft="15.4666444473808,136.199998752475" />
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact\Populate itdp_contact"
          TopLeft="18.7999775985886,66.7999996022386" />
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact.PrecedenceConstraints[Constraint]"
          TopLeft="150.633329736359,26.3">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-49.4333521377702,40.4999996022386"
              Start="0,0"
              End="-49.4333521377702,32.9999996022386">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-45.4333521377702,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-45.4333521377702,0"
                    Point2="-49.4333521377702,0"
                    Point3="-49.4333521377702,4" />
                  <mssgle:LineSegment
                    End="-49.4333521377702,32.9999996022386" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact.PrecedenceConstraints[Constraint 1]"
          TopLeft="99.5333110229847,108.399999602239">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.799999150236"
              Start="0,0"
              End="0,20.299999150236">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.299999150236" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="200,188"
          Size="200,231.2"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact"
          TopLeft="24.8999976779023,149.599998770554" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\create contact_id constraint for conatct_postal"
          TopLeft="33.2666604288761,152.199997956952" />
        <NodeLayout
          Size="169.6,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Drop contact_id constraint"
          TopLeft="5.20001133729966,5.1999991683158" />
        <NodeLayout
          Size="166.4,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Move contacts with bad contact_postal to  contact_error for TLD"
          TopLeft="22.9999718616421,212.066663550867" />
        <NodeLayout
          Size="187.2,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp"
          TopLeft="12.9999995902181,82.9333310431919" />
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow.PrecedenceConstraints[Constraint]"
          TopLeft="162.866660428876,172.999997956952">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-56.666688567234,39.0666655939153"
              Start="0,0"
              End="-56.666688567234,31.5666655939153">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-52.666688567234,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-52.666688567234,0"
                    Point2="-56.666688567234,0"
                    Point3="-56.666688567234,4" />
                  <mssgle:LineSegment
                    End="-56.666688567234,31.5666655939153" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow.PrecedenceConstraints[Constraint 1]"
          TopLeft="106.599999590218,124.533331043192">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-8.53333916134197,27.66666691376"
              Start="0,0"
              End="-8.53333916134197,20.16666691376">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.83333345688" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.83333345688"
                    Point2="0,13.83333345688"
                    Point3="-4,13.83333345688" />
                  <mssgle:LineSegment
                    End="-4.53333916134197,13.83333345688" />
                  <mssgle:CubicBezierSegment
                    Point1="-4.53333916134197,13.83333345688"
                    Point2="-8.53333916134197,13.83333345688"
                    Point3="-8.53333916134197,17.83333345688" />
                  <mssgle:LineSegment
                    End="-8.53333916134197,20.16666691376" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow.PrecedenceConstraints[Constraint 4]"
          TopLeft="90.4000113372997,46.7999991683158">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="16.1999882529184,36.1333318748761"
              Start="0,0"
              End="16.1999882529184,28.6333318748761">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.066665937438" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.066665937438"
                    Point2="0,18.066665937438"
                    Point3="4,18.066665937438" />
                  <mssgle:LineSegment
                    End="12.1999882529184,18.066665937438" />
                  <mssgle:CubicBezierSegment
                    Point1="12.1999882529184,18.066665937438"
                    Point2="16.1999882529184,18.066665937438"
                    Point3="16.1999882529184,22.066665937438" />
                  <mssgle:LineSegment
                    End="16.1999882529184,28.6333318748761" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="212.8,260"
          Size="212.8,303.2"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow"
          TopLeft="257.633348449732,99.3999993310379" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Populate contact_postal_conatct_id"
          TopLeft="304.791649125724,462.842099189887" />
        <NodeLayout
          Size="190.4,46.4"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Truncate  contact_error_records,contact_postal_error_records"
          TopLeft="5.91666182585959,8.09999998192006" />
        <NodeLayout
          Size="176,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\Vacuum itdp_contact"
          TopLeft="23.8666351589907,462.066663153105" />
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact.PrecedenceConstraints[Constraint]"
          TopLeft="196.31666182586,33.7499995841583">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="33.6832982887009,0"
              Start="0,0"
              End="26.1832982887009,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="26.1832982887009,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact.PrecedenceConstraints[Constraint 1]"
          TopLeft="104.599967490634,123.199998842876">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="20.3000301872681,26.3999999276788"
              Start="0,0"
              End="20.3000301872681,18.8999999276788">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.19999996383939" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.19999996383939"
                    Point2="0,13.1999999638394"
                    Point3="4,13.1999999638394" />
                  <mssgle:LineSegment
                    End="16.3000301872681,13.1999999638394" />
                  <mssgle:CubicBezierSegment
                    Point1="16.3000301872681,13.1999999638394"
                    Point2="20.3000301872681,13.1999999638394"
                    Point3="20.3000301872681,17.1999999638394" />
                  <mssgle:LineSegment
                    End="20.3000301872681,18.8999999276788" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact.PrecedenceConstraints[Constraint 2]"
          TopLeft="124.899997677902,380.799998770554">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-41.0333625189116,81.266664382551"
              Start="0,0"
              End="-41.0333625189116,73.766664382551">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.3207193625979" />
                  <mssgle:CubicBezierSegment
                    Point1="0,44.3207193625979"
                    Point2="0,48.3207193625979"
                    Point3="-4,48.3207193625979" />
                  <mssgle:LineSegment
                    End="-37.0333625189116,48.3207193625979" />
                  <mssgle:CubicBezierSegment
                    Point1="-37.0333625189116,48.3207193625979"
                    Point2="-41.0333625189116,48.3207193625979"
                    Point3="-41.0333625189116,52.3207193625979" />
                  <mssgle:LineSegment
                    End="-41.0333625189116,73.766664382551" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact.PrecedenceConstraints[Constraint 3]"
          TopLeft="229.99996011456,41.7999991863966">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-54.1999926239262,58.199999656479"
              Start="0,0"
              End="-46.6999926239262,58.199999656479">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-18.8844413301022,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.8844413301022,0"
                    Point2="-22.8844413301022,0"
                    Point3="-22.8844413301022,4" />
                  <mssgle:LineSegment
                    End="-22.8844413301022,54.199999656479" />
                  <mssgle:CubicBezierSegment
                    Point1="-22.8844413301022,54.199999656479"
                    Point2="-22.8844413301022,58.199999656479"
                    Point3="-26.8844413301022,58.199999656479" />
                  <mssgle:LineSegment
                    End="-46.6999926239262,58.199999656479" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact.PrecedenceConstraints[Constraint 4]"
          TopLeft="175.799967490634,106.399998842875">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="81.8333809590981,144.600000488162"
              Start="0,0"
              End="74.3333809590981,144.600000488162">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="58.7033517880893,0" />
                  <mssgle:CubicBezierSegment
                    Point1="58.7033517880893,0"
                    Point2="62.7033517880893,0"
                    Point3="62.7033517880893,4" />
                  <mssgle:LineSegment
                    End="62.7033517880893,140.600000488162" />
                  <mssgle:CubicBezierSegment
                    Point1="62.7033517880893,140.600000488162"
                    Point2="62.7033517880893,144.600000488162"
                    Point3="66.7033517880893,144.600000488162" />
                  <mssgle:LineSegment
                    End="74.3333809590981,144.600000488162" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact.PrecedenceConstraints[Constraint 5]"
          TopLeft="364.033348449732,402.599999331038">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-224.166713290742,59.4666638220675"
              Start="0,0"
              End="-224.166713290742,51.9666638220675">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.3585568671752" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.3585568671752"
                    Point2="0,35.3585568671752"
                    Point3="-4,35.3585568671752" />
                  <mssgle:LineSegment
                    End="-220.166713290742,35.3585568671752" />
                  <mssgle:CubicBezierSegment
                    Point1="-220.166713290742,35.3585568671752"
                    Point2="-224.166713290742,35.3585568671752"
                    Point3="-224.166713290742,39.3585568671752" />
                  <mssgle:LineSegment
                    End="-224.166713290742,51.9666638220675" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="475.2,515.2"
          Size="475.2,558.4"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact"
          TopLeft="526.791667131293,17.3999993671971" />
        <NodeLayout
          Size="235.2,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\move contact records with bad domain to contact error"
          TopLeft="95.8666329734874,330.399996528626" />
        <NodeLayout
          Size="225.6,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move host with domain error to host error table"
          TopLeft="429.583301662158,162.252624630788" />
        <NodeLayout
          Size="326.4,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move to domain error table domains with contact error"
          TopLeft="78.0999796474983,77.1999984451136" />
        <NodeLayout
          Size="316.8,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Move to domain error table domains without contact"
          TopLeft="96.9166531749079,14.5824518476606" />
        <NodeLayout
          Size="142.4,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Populate domain_contact table"
          TopLeft="358.083298048627,406.15788728812" />
        <NodeLayout
          Size="182.4,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Populate domain_host"
          TopLeft="469.066618221338,30.0666669860818" />
        <NodeLayout
          Size="180.8,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Populate domain_lock"
          TopLeft="11.3749920640973,161.454383767574" />
        <NodeLayout
          Size="239.2,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Return ITDP_PKs to dm_enom_contact"
          TopLeft="98.1333271410733,400.133331440952" />
        <NodeLayout
          Size="262.4,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Return ITDP_PKs to dm_enom_domainname"
          TopLeft="3.62499801835247,252.450873525996" />
        <NodeLayout
          Size="172.8,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact\Return ITDP_PKs to dm_enom_namesersvers"
          TopLeft="472.366625734007,239.799999222556" />
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint]"
          TopLeft="413.716653174908,35.3824518476606">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9.21667352740963,62.6175465974529"
              Start="0,0"
              End="-1.71667352740963,62.6175465974529">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="18.5,0"
                    Point2="22.5,0"
                    Point3="22.5,4" />
                  <mssgle:LineSegment
                    End="22.5,58.6175465974529" />
                  <mssgle:CubicBezierSegment
                    Point1="22.5,58.6175465974529"
                    Point2="22.5,62.6175465974529"
                    Point3="18.5,62.6175465974529" />
                  <mssgle:LineSegment
                    End="-1.71667352740963,62.6175465974529" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 1]"
          TopLeft="188.233312980832,118.799998445114">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-86.4583209167343,42.6543853224599"
              Start="0,0"
              End="-86.4583209167343,35.1543853224599">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.1865962323668" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.1865962323668"
                    Point2="0,17.1865962323668"
                    Point3="-4,17.1865962323668" />
                  <mssgle:LineSegment
                    End="-82.4583209167343,17.1865962323668" />
                  <mssgle:CubicBezierSegment
                    Point1="-82.4583209167343,17.1865962323668"
                    Point2="-86.4583209167343,17.1865962323668"
                    Point3="-86.4583209167343,21.1865962323668" />
                  <mssgle:LineSegment
                    End="-86.4583209167343,35.1543853224599" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 2]"
          TopLeft="101.774992064097,203.054383767574">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="33.0500059542552,49.396489758422"
              Start="0,0"
              End="33.0500059542552,41.896489758422">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.698244879211" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.698244879211"
                    Point2="0,24.698244879211"
                    Point3="4,24.698244879211" />
                  <mssgle:LineSegment
                    End="29.0500059542552,24.698244879211" />
                  <mssgle:CubicBezierSegment
                    Point1="29.0500059542552,24.698244879211"
                    Point2="33.0500059542552,24.698244879211"
                    Point3="33.0500059542552,28.698244879211" />
                  <mssgle:LineSegment
                    End="33.0500059542552,41.896489758422" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 3]"
          TopLeft="542.383301662158,203.852624630788">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="16.3833240718486,35.9473745917679"
              Start="0,0"
              End="16.3833240718486,28.4473745917679">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.973687295884" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.973687295884"
                    Point2="0,17.973687295884"
                    Point3="4,17.973687295884" />
                  <mssgle:LineSegment
                    End="12.3833240718486,17.973687295884" />
                  <mssgle:CubicBezierSegment
                    Point1="12.3833240718486,17.973687295884"
                    Point2="16.3833240718486,17.973687295884"
                    Point3="16.3833240718486,21.973687295884" />
                  <mssgle:LineSegment
                    End="16.3833240718486,28.4473745917679" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 4]"
          TopLeft="273.139979647498,118.799998445114">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-59.6733466740109,211.599998083512"
              Start="0,0"
              End="-59.6733466740109,204.099998083512">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,90.3637145174164" />
                  <mssgle:CubicBezierSegment
                    Point1="0,90.3637145174164"
                    Point2="0,94.3637145174164"
                    Point3="-4,94.3637145174164" />
                  <mssgle:LineSegment
                    End="-55.6733466740109,94.3637145174164" />
                  <mssgle:CubicBezierSegment
                    Point1="-55.6733466740109,94.3637145174164"
                    Point2="-59.6733466740109,94.3637145174164"
                    Point3="-59.6733466740109,98.3637145174164" />
                  <mssgle:LineSegment
                    End="-59.6733466740109,204.099998083512" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 5]"
          TopLeft="336.819979647498,118.799998445114">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="205.563322014659,43.4526261856741"
              Start="0,0"
              End="205.563322014659,35.9526261856741">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.73767212511446" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.73767212511446"
                    Point2="0,12.7376721251145"
                    Point3="4,12.7376721251145" />
                  <mssgle:LineSegment
                    End="201.563322014659,12.7376721251145" />
                  <mssgle:CubicBezierSegment
                    Point1="201.563322014659,12.7376721251145"
                    Point2="205.563322014659,12.7376721251145"
                    Point3="205.563322014659,16.7376721251145" />
                  <mssgle:LineSegment
                    End="205.563322014659,35.9526261856741" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 6]"
          TopLeft="215.59998005728,371.999996528626">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28.1333349123264"
              Start="0,0"
              End="0,20.6333349123264">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.6333349123264" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact.PrecedenceConstraints[Constraint 8]"
          TopLeft="256.266660474407,400.133331440952">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="173.01663757422,6.02455584716802"
              Start="0,0"
              End="173.01663757422,-1.47544415283198">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-18.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-18.5"
                    Point2="0,-22.5"
                    Point3="4,-22.5" />
                  <mssgle:LineSegment
                    End="169.01663757422,-22.5" />
                  <mssgle:CubicBezierSegment
                    Point1="169.01663757422,-22.5"
                    Point2="173.01663757422,-22.5"
                    Point3="173.01663757422,-18.5" />
                  <mssgle:LineSegment
                    End="173.01663757422,-1.47544415283198" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="692,464"
          Size="692,507.2"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_3 populate domain_host and domain_contact"
          TopLeft="27.6805574965002,668.412862267709" />
        <NodeLayout
          Size="191.2,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\dm_log - extract_transfer_end"
          TopLeft="4.99999972681229,6.9333381305803" />
        <NodeLayout
          Size="201.6,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\dm_log - itdp_transfer_end"
          TopLeft="158.833324955571,1230.59999600431" />
        <NodeLayout
          Size="176,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\Vacuum Analyse\Vacuum itdp_contact"
          TopLeft="27.255501570583,62.1555601579396" />
        <NodeLayout
          Size="176,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\Vacuum Analyse\Vacuum itdp_contact_postal"
          TopLeft="214.344371670213,61.2444496595415" />
        <NodeLayout
          Size="176,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\Vacuum Analyse\Vacuum itdp_domain"
          TopLeft="15.3110577787534,10.2444491352206" />
        <NodeLayout
          Size="176,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\Vacuum Analyse\Vacuum itdp_domain_lock"
          TopLeft="408.499905340378,15.2000065088266" />
        <NodeLayout
          Size="176,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\Vacuum Analyse\Vacuum itdp_host"
          TopLeft="213.23326061981,11.0666715241804" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="592,110.4"
          Size="592,152.8"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\Vacuum Analyse"
          TopLeft="414.155595957017,1221.91109478681" />
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD.PrecedenceConstraints[Constraint]"
          TopLeft="461.5,320.096492581138">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="65.291667131293,-23.4964932139404"
              Start="0,0"
              End="57.791667131293,-23.4964932139404">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28.6458335656465,0" />
                  <mssgle:CubicBezierSegment
                    Point1="28.6458335656465,0"
                    Point2="32.6458335656465,0"
                    Point3="32.6458335656465,-4" />
                  <mssgle:LineSegment
                    End="32.6458335656465,-19.4964932139404" />
                  <mssgle:CubicBezierSegment
                    Point1="32.6458335656465,-19.4964932139404"
                    Point2="32.6458335656465,-23.4964932139404"
                    Point3="36.6458335656465,-23.4964932139404" />
                  <mssgle:LineSegment
                    End="57.791667131293,-23.4964932139404" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD.PrecedenceConstraints[Constraint 1]"
          TopLeft="764.391667131293,575.799999367197">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-390.711109634793,92.6128629005117"
              Start="0,0"
              End="-390.711109634793,85.1128629005117">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.3064314502558" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.3064314502558"
                    Point2="0,46.3064314502558"
                    Point3="-4,46.3064314502558" />
                  <mssgle:LineSegment
                    End="-386.711109634793,46.3064314502558" />
                  <mssgle:CubicBezierSegment
                    Point1="-386.711109634793,46.3064314502558"
                    Point2="-390.711109634793,46.3064314502558"
                    Point3="-390.711109634793,50.3064314502558" />
                  <mssgle:LineSegment
                    End="-390.711109634793,85.1128629005117" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD.PrecedenceConstraints[Constraint 2]"
          TopLeft="373.6805574965,1175.61286226771">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-114.047232540929,54.9871337366012"
              Start="0,0"
              End="-114.047232540929,47.4871337366012">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.4935668683006" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.4935668683006"
                    Point2="0,27.4935668683006"
                    Point3="-4,27.4935668683006" />
                  <mssgle:LineSegment
                    End="-110.047232540929,27.4935668683006" />
                  <mssgle:CubicBezierSegment
                    Point1="-110.047232540929,27.4935668683006"
                    Point2="-114.047232540929,27.4935668683006"
                    Point3="-114.047232540929,31.4935668683006" />
                  <mssgle:LineSegment
                    End="-114.047232540929,47.4871337366012" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD.PrecedenceConstraints[Constraint 3]"
          TopLeft="196.199999726812,27.7333381305803">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="37.3000002731877,39.5631544505572"
              Start="0,0"
              End="37.3000002731877,32.0631544505572">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="33.3000002731877,0" />
                  <mssgle:CubicBezierSegment
                    Point1="33.3000002731877,0"
                    Point2="37.3000002731877,0"
                    Point3="37.3000002731877,4" />
                  <mssgle:LineSegment
                    End="37.3000002731877,32.0631544505572" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD.PrecedenceConstraints[Constraint 4]"
          TopLeft="487.6805574965,1175.61286226771">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="222.475038460517,46.298232519101"
              Start="0,0"
              End="222.475038460517,38.798232519101">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.5833736062828" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.5833736062828"
                    Point2="0,18.5833736062828"
                    Point3="4,18.5833736062828" />
                  <mssgle:LineSegment
                    End="218.475038460517,18.5833736062828" />
                  <mssgle:CubicBezierSegment
                    Point1="218.475038460517,18.5833736062828"
                    Point2="222.475038460517,18.5833736062828"
                    Point3="222.475038460517,22.5833736062828" />
                  <mssgle:LineSegment
                    End="222.475038460517,38.798232519101" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1007.2,1430.4"
          Size="1007.2,1472.8"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD"
          TopLeft="720.833293948739,1321.03332741815" />
        <NodeLayout
          Size="204,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Create itdp_temp_domain_lock"
          TopLeft="14.9962807903507,165.859257805487" />
        <NodeLayout
          Size="167.2,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Populate domain _RGP_status table"
          TopLeft="216.140730455719,226.551849185375" />
        <NodeLayout
          Size="169.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\populate domain_lock table"
          TopLeft="22.8148138687748,234.085185670668" />
        <NodeLayout
          Size="252.8,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Transfer domains, create import order"
          TopLeft="9.53332673129103,10.0333330319984" />
        <NodeLayout
          Size="185.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain\Vacuum public_domain"
          TopLeft="42.6666389836216,76.666665159994" />
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain.PrecedenceConstraints[Constraint]"
          TopLeft="106.133305650288,118.266665159994">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="10.8629751400624,47.5925926454931"
              Start="0,0"
              End="10.8629751400624,40.0925926454931">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.2800630631955" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.2800630631955"
                    Point2="0,19.2800630631955"
                    Point3="4,19.2800630631955" />
                  <mssgle:LineSegment
                    End="6.86297514006242,19.2800630631955" />
                  <mssgle:CubicBezierSegment
                    Point1="6.86297514006242,19.2800630631955"
                    Point2="10.8629751400624,19.2800630631955"
                    Point3="10.8629751400624,23.2800630631955" />
                  <mssgle:LineSegment
                    End="10.8629751400624,40.0925926454931" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain.PrecedenceConstraints[Constraint 1]"
          TopLeft="165.599972316955,118.266665159994">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="134.140758138764,108.285184025381"
              Start="0,0"
              End="134.140758138764,100.785184025381">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.8670192307075" />
                  <mssgle:CubicBezierSegment
                    Point1="0,39.8670192307075"
                    Point2="0,43.8670192307075"
                    Point3="4,43.8670192307075" />
                  <mssgle:LineSegment
                    End="130.140758138764,43.8670192307075" />
                  <mssgle:CubicBezierSegment
                    Point1="130.140758138764,43.8670192307075"
                    Point2="134.140758138764,43.8670192307075"
                    Point3="134.140758138764,47.8670192307075" />
                  <mssgle:LineSegment
                    End="134.140758138764,100.785184025381" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain.PrecedenceConstraints[Constraint 4]"
          TopLeft="135.699982857456,51.6333330319984">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25.0333321279956"
              Start="0,0"
              End="0,17.5333321279956">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5333321279956" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain.PrecedenceConstraints[Constraint 8]"
          TopLeft="116.996280790351,207.459257805487">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9.38146692157598,26.6259278651814"
              Start="0,0"
              End="-9.38146692157598,19.1259278651814">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.31296393259068" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.31296393259068"
                    Point2="0,13.3129639325907"
                    Point3="-4,13.3129639325907" />
                  <mssgle:LineSegment
                    End="-5.38146692157598,13.3129639325907" />
                  <mssgle:CubicBezierSegment
                    Point1="-5.38146692157598,13.3129639325907"
                    Point2="-9.38146692157598,13.3129639325907"
                    Point3="-9.38146692157598,17.3129639325907" />
                  <mssgle:LineSegment
                    End="-9.38146692157598,19.1259278651814" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="388.8,330.4"
          Size="388.8,373.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_1 Domain"
          TopLeft="38.499967080852,213.233331694073" />
        <NodeLayout
          Size="100,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Host"
          TopLeft="230.362931930836,89.3111069547036" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Mark duplicate host by name in ITDP"
          TopLeft="12.5666473158553,123.866663496628" />
        <NodeLayout
          Size="144.8,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Mark host that exists inTDP"
          TopLeft="31.0999903018274,16.7333334116804" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Unigue host"
          TopLeft="216.207387940237,10.0740735450643" />
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host\Vacuum itdp_host"
          TopLeft="28,69.2666664798395" />
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host.PrecedenceConstraints[Constraint]"
          TopLeft="31.0999903018274,37.5333334116804">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-3.09999030182738,52.5333330681591"
              Start="0,0"
              End="-10.5999903018274,52.5333330681591">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-21.5999903018274,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-21.5999903018274,0"
                    Point2="-25.5999903018274,0"
                    Point3="-25.5999903018274,4" />
                  <mssgle:LineSegment
                    End="-25.5999903018274,48.5333330681591" />
                  <mssgle:CubicBezierSegment
                    Point1="-25.5999903018274,48.5333330681591"
                    Point2="-25.5999903018274,52.5333330681591"
                    Point3="-21.5999903018274,52.5333330681591" />
                  <mssgle:LineSegment
                    End="-10.5999903018274,52.5333330681591" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host.PrecedenceConstraints[Constraint 1]"
          TopLeft="152.566647315855,150.266663496628">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="77.7962846149808,-40.1555565419247"
              Start="0,0"
              End="70.2962846149808,-40.1555565419247">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28.8473201707697,0" />
                  <mssgle:CubicBezierSegment
                    Point1="28.8473201707697,0"
                    Point2="32.8473201707697,0"
                    Point3="32.8473201707697,-4" />
                  <mssgle:LineSegment
                    End="32.8473201707697,-36.1555565419247" />
                  <mssgle:CubicBezierSegment
                    Point1="32.8473201707697,-36.1555565419247"
                    Point2="32.8473201707697,-40.1555565419247"
                    Point3="36.8473201707697,-40.1555565419247" />
                  <mssgle:LineSegment
                    End="70.2962846149808,-40.1555565419247" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host.PrecedenceConstraints[Constraint 2]"
          TopLeft="280.685159935536,51.6740735450643">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.6370334096394"
              Start="0,0"
              End="0,30.1370334096394">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.1370334096394" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host.PrecedenceConstraints[Constraint 3]"
          TopLeft="108.8,110.866666479839">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="43.7666473158553,33.7999970167889"
              Start="0,0"
              End="36.2666473158553,33.7999970167889">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.7999970167889" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.7999970167889"
                    Point2="0,33.7999970167889"
                    Point3="4,33.7999970167889" />
                  <mssgle:LineSegment
                    End="36.2666473158553,33.7999970167889" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="348.8,171.2"
          Size="348.8,214.4"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_2 Host"
          TopLeft="517.133284796944,203.555553052469" />
        <NodeLayout
          Size="112,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\contact"
          TopLeft="33.7332806991235,79.9999971795085" />
        <NodeLayout
          Size="145.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\contact_postal"
          TopLeft="240.133280699124,145.599996094703" />
        <NodeLayout
          Size="201.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Create itdp_contact_postal_temp"
          TopLeft="203.299960524341,11.3999997649587" />
        <NodeLayout
          Size="169.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Create itdp_contact_temp"
          TopLeft="7.96663720789911,12.6666659555174" />
        <NodeLayout
          Size="243.2,46.4"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Create itdp_domain_contact_temp"
          TopLeft="12.137057005054,234.237038128537" />
        <NodeLayout
          Size="152,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\domain_contact"
          TopLeft="28.3148206984756,312.429627646178" />
        <NodeLayout
          Size="175.2,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Populate lost handle flag in contact_metadata"
          TopLeft="229.896246110659,298.162960895137" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\provision_contact"
          TopLeft="280.399927878382,191.066664798391" />
        <NodeLayout
          Size="144.8,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact\Vacuum public_contact"
          TopLeft="36.0333408004694,151.799998643995" />
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint]"
          TopLeft="131.233340800469,151.799998643995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="140.599953057205,-98.7999988790363"
              Start="0,0"
              End="140.599953057205,-91.2999988790363">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-45.5877838659606" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-45.5877838659606"
                    Point2="0,-49.5877838659606"
                    Point3="4,-49.5877838659606" />
                  <mssgle:LineSegment
                    End="136.599953057205,-49.5877838659606" />
                  <mssgle:CubicBezierSegment
                    Point1="136.599953057205,-49.5877838659606"
                    Point2="140.599953057205,-49.5877838659606"
                    Point3="140.599953057205,-53.5877838659606" />
                  <mssgle:LineSegment
                    End="140.599953057205,-91.2999988790363" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint 1]"
          TopLeft="89.7332806991235,121.599997179508">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="18.7000601013459,30.2000014644865"
              Start="0,0"
              End="18.7000601013459,22.7000014644865">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.1000007322433" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.1000007322433"
                    Point2="0,15.1000007322433"
                    Point3="4,15.1000007322433" />
                  <mssgle:LineSegment
                    End="14.7000601013459,15.1000007322433" />
                  <mssgle:CubicBezierSegment
                    Point1="14.7000601013459,15.1000007322433"
                    Point2="18.7000601013459,15.1000007322433"
                    Point3="18.7000601013459,19.1000007322433" />
                  <mssgle:LineSegment
                    End="18.7000601013459,22.7000014644865" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint 2]"
          TopLeft="108.433340800469,193.399998643995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="25.3037162045846,40.8370394845422"
              Start="0,0"
              End="25.3037162045846,33.3370394845422">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.4185197422711" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.4185197422711"
                    Point2="0,20.4185197422711"
                    Point3="4,20.4185197422711" />
                  <mssgle:LineSegment
                    End="21.3037162045846,20.4185197422711" />
                  <mssgle:CubicBezierSegment
                    Point1="21.3037162045846,20.4185197422711"
                    Point2="25.3037162045846,20.4185197422711"
                    Point3="25.3037162045846,24.4185197422711" />
                  <mssgle:LineSegment
                    End="25.3037162045846,33.3370394845422" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint 6]"
          TopLeft="336.366627191007,52.9999997649587">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-23.4333464918835,92.5999963297443"
              Start="0,0"
              End="-23.4333464918835,85.0999963297443">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.4774788295186" />
                  <mssgle:CubicBezierSegment
                    Point1="0,33.4774788295186"
                    Point2="0,37.4774788295186"
                    Point3="-4,37.4774788295186" />
                  <mssgle:LineSegment
                    End="-19.4333464918835,37.4774788295186" />
                  <mssgle:CubicBezierSegment
                    Point1="-19.4333464918835,37.4774788295186"
                    Point2="-23.4333464918835,37.4774788295186"
                    Point3="-23.4333464918835,41.4774788295186" />
                  <mssgle:LineSegment
                    End="-23.4333464918835,85.0999963297443" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint 7]"
          TopLeft="133.737057005054,280.637038128537">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-29.4222363065784,31.7925895176409"
              Start="0,0"
              End="-29.4222363065784,24.2925895176409">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.8962947588204" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.8962947588204"
                    Point2="0,15.8962947588204"
                    Point3="-4,15.8962947588204" />
                  <mssgle:LineSegment
                    End="-25.4222363065784,15.8962947588204" />
                  <mssgle:CubicBezierSegment
                    Point1="-25.4222363065784,15.8962947588204"
                    Point2="-29.4222363065784,15.8962947588204"
                    Point3="-29.4222363065784,19.8962947588204" />
                  <mssgle:LineSegment
                    End="-29.4222363065784,24.2925895176409" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact.PrecedenceConstraints[Constraint 8]"
          TopLeft="91.2499589535113,54.2666659555174">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25.7333312239911"
              Start="0,0"
              End="0,18.2333312239911">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.2333312239911" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="409.6,363.2"
          Size="409.6,406.4"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_3 Contact"
          TopLeft="890.474016542716,241.162959177531" />
        <NodeLayout
          Size="142.4,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host\Create itdp_domain_host_temp"
          TopLeft="27.1666667121981,12.9333335382403" />
        <NodeLayout
          Size="137.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host\domain_host"
          TopLeft="20.4999960387765,94.733331278233" />
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host.PrecedenceConstraints[Constraint 5]"
          TopLeft="97.9666667121981,54.5333335382403">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-8.66667067342161,40.1999977399927"
              Start="0,0"
              End="-8.66667067342161,32.6999977399927">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.0999988699963" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.0999988699963"
                    Point2="0,20.0999988699963"
                    Point3="-4,20.0999988699963" />
                  <mssgle:LineSegment
                    End="-4.66667067342161,20.0999988699963" />
                  <mssgle:CubicBezierSegment
                    Point1="-4.66667067342161,20.0999988699963"
                    Point2="-8.66667067342161,20.0999988699963"
                    Point3="-8.66667067342161,24.0999988699963" />
                  <mssgle:LineSegment
                    End="-8.66667067342161,32.6999977399927" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="201.6,191.2"
          Size="201.6,233.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_4 Domain_Host"
          TopLeft="92.1370034602157,677.203700630758" />
        <NodeLayout
          Size="232.8,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated\Mark domain as migrated in itdp_domain"
          TopLeft="63.3030271448117,24.0939392646392" />
        <NodeLayout
          Size="180.8,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated\Mark TLD as migrated in itdp_tld"
          TopLeft="85.7666205434352,109.866664617591" />
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated.PrecedenceConstraints[Constraint]"
          TopLeft="177.934823844123,65.6939392646392">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.1727253529515"
              Start="0,0"
              End="0,36.6727253529515">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.6727253529515" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="313.6,160"
          Size="313.6,203.2"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\03_5 Mark domain as migrated"
          TopLeft="357.775726639294,683.745451596758" />
        <NodeLayout
          Size="200,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\dm_log - tdp_transfer_end"
          TopLeft="732.881421025999,710.125923580202" />
        <NodeLayout
          Size="164,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum  public_domain_contact"
          TopLeft="160.400056276719,66.333335798251" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_contact"
          TopLeft="477.666646906073,69.2666660459174" />
        <NodeLayout
          Size="185.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_contact_postal"
          TopLeft="251.699998224278,70.6666657747159" />
        <NodeLayout
          Size="156.8,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_domain"
          TopLeft="4.79996175368751,3.1333331947194" />
        <NodeLayout
          Size="156.8,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_domain_host"
          TopLeft="14.2333433957579,62.8666700958543" />
        <NodeLayout
          Size="169.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_domain_lock"
          TopLeft="414.266644857163,9.16666886640928" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_domain_RGP"
          TopLeft="338.433315667179,72.6333357982494" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_host"
          TopLeft="500.099973500769,10.233336232172" />
        <NodeLayout
          Size="151.2,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_order"
          TopLeft="141.733299275903,6.79999989151975" />
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse\Vacuum public_order_import_domain"
          TopLeft="265.733292719393,5.06666657023948" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1153.6,120"
          Size="1153.6,163.2"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD\Vacuum Analyse"
          TopLeft="62.1666593361228,9.39999994575982" />
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint]"
          TopLeft="1095.67401654272,647.562959177531">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-581.098289903422,36.1824924192271"
              Start="0,0"
              End="-581.098289903422,28.6824924192271">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.0912462096135" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.0912462096135"
                    Point2="0,18.0912462096135"
                    Point3="-4,18.0912462096135" />
                  <mssgle:LineSegment
                    End="-577.098289903422,18.0912462096135" />
                  <mssgle:CubicBezierSegment
                    Point1="-577.098289903422,18.0912462096135"
                    Point2="-581.098289903422,18.0912462096135"
                    Point3="-581.098289903422,22.0912462096135" />
                  <mssgle:LineSegment
                    End="-581.098289903422,28.6824924192271" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 1]"
          TopLeft="427.299967080852,375.233331694073">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="463.174049461864,69.129627483458"
              Start="0,0"
              End="455.674049461864,69.129627483458">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="227.587024730932,0" />
                  <mssgle:CubicBezierSegment
                    Point1="227.587024730932,0"
                    Point2="231.587024730932,0"
                    Point3="231.587024730932,4" />
                  <mssgle:LineSegment
                    End="231.587024730932,65.129627483458" />
                  <mssgle:CubicBezierSegment
                    Point1="231.587024730932,65.129627483458"
                    Point2="231.587024730932,69.129627483458"
                    Point3="235.587024730932,69.129627483458" />
                  <mssgle:LineSegment
                    End="455.674049461864,69.129627483458" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 2]"
          TopLeft="691.533284796944,417.955553052469">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-466.329614670061,259.248147578289"
              Start="0,0"
              End="-466.329614670061,251.748147578289">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,150.324094148966" />
                  <mssgle:CubicBezierSegment
                    Point1="0,150.324094148966"
                    Point2="0,154.324094148966"
                    Point3="-4,154.324094148966" />
                  <mssgle:LineSegment
                    End="-462.329614670061,154.324094148966" />
                  <mssgle:CubicBezierSegment
                    Point1="-462.329614670061,154.324094148966"
                    Point2="-466.329614670061,154.324094148966"
                    Point3="-466.329614670061,158.324094148966" />
                  <mssgle:LineSegment
                    End="-466.329614670061,251.748147578289" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 3]"
          TopLeft="232.899967080852,537.233331694073">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-72.229630287303,139.970368936685"
              Start="0,0"
              End="-72.229630287303,132.470368936685">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,79.3209440284518" />
                  <mssgle:CubicBezierSegment
                    Point1="0,79.3209440284518"
                    Point2="0,83.3209440284518"
                    Point3="-4,83.3209440284518" />
                  <mssgle:LineSegment
                    End="-68.229630287303,83.3209440284518" />
                  <mssgle:CubicBezierSegment
                    Point1="-68.229630287303,83.3209440284518"
                    Point2="-72.229630287303,83.3209440284518"
                    Point3="-72.229630287303,87.3209440284518" />
                  <mssgle:LineSegment
                    End="-72.229630287303,132.470368936685" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 4]"
          TopLeft="671.375726639294,752.812118263425">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="61.5056943867048,-21.8861946832228"
              Start="0,0"
              End="54.0056943867048,-21.8861946832228">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="20.8905856971196,0" />
                  <mssgle:CubicBezierSegment
                    Point1="20.8905856971196,0"
                    Point2="24.8905856971196,0"
                    Point3="24.8905856971196,-4" />
                  <mssgle:LineSegment
                    End="24.8905856971196,-17.8861946832228" />
                  <mssgle:CubicBezierSegment
                    Point1="24.8905856971196,-17.8861946832228"
                    Point2="24.8905856971196,-21.8861946832228"
                    Point3="28.8905856971196,-21.8861946832228" />
                  <mssgle:LineSegment
                    End="54.0056943867048,-21.8861946832228" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 5]"
          TopLeft="294.537003460216,774.003700630758">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="63.2387231790781,11.3417509660009"
              Start="0,0"
              End="55.7387231790781,11.3417509660009">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="27.6193615895391,0" />
                  <mssgle:CubicBezierSegment
                    Point1="27.6193615895391,0"
                    Point2="31.6193615895391,0"
                    Point3="31.6193615895391,4" />
                  <mssgle:LineSegment
                    End="31.6193615895391,7.34175096600086" />
                  <mssgle:CubicBezierSegment
                    Point1="31.6193615895391,7.34175096600086"
                    Point2="31.6193615895391,11.3417509660009"
                    Point3="35.6193615895391,11.3417509660009" />
                  <mssgle:LineSegment
                    End="55.7387231790781,11.3417509660009" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 7]"
          TopLeft="352.566659336123,172.59999994576">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-119.666692255271,40.6333317483132"
              Start="0,0"
              End="-119.666692255271,33.1333317483132">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.60691828841115" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.60691828841115"
                    Point2="0,13.6069182884112"
                    Point3="-4,13.6069182884112" />
                  <mssgle:LineSegment
                    End="-115.666692255271,13.6069182884112" />
                  <mssgle:CubicBezierSegment
                    Point1="-115.666692255271,13.6069182884112"
                    Point2="-119.666692255271,13.6069182884112"
                    Point3="-119.666692255271,17.6069182884112" />
                  <mssgle:LineSegment
                    End="-119.666692255271,33.1333317483132" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 8]"
          TopLeft="638.966659336123,172.59999994576">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="52.566625460821,30.9555531067091"
              Start="0,0"
              End="52.566625460821,23.4555531067091">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.4777765533546" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.4777765533546"
                    Point2="0,15.4777765533546"
                    Point3="4,15.4777765533546" />
                  <mssgle:LineSegment
                    End="48.566625460821,15.4777765533546" />
                  <mssgle:CubicBezierSegment
                    Point1="48.566625460821,15.4777765533546"
                    Point2="52.566625460821,15.4777765533546"
                    Point3="52.566625460821,19.4777765533546" />
                  <mssgle:LineSegment
                    End="52.566625460821,23.4555531067091" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD.PrecedenceConstraints[Constraint 9]"
          TopLeft="925.366659336123,172.59999994576">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="169.907357206593,68.5629592317712"
              Start="0,0"
              End="169.907357206593,61.0629592317712">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.9597363479086" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.9597363479086"
                    Point2="0,22.9597363479086"
                    Point3="4,22.9597363479086" />
                  <mssgle:LineSegment
                    End="165.907357206593,22.9597363479086" />
                  <mssgle:CubicBezierSegment
                    Point1="165.907357206593,22.9597363479086"
                    Point2="169.907357206593,22.9597363479086"
                    Point3="169.907357206593,26.9597363479086" />
                  <mssgle:LineSegment
                    End="169.907357206593,61.0629592317712" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1305.6,967.2"
          Size="1305.6,1010.4"
          Id="Package\03 Transfer domain,contact,host data  from itdp schema to public schema for parameter TLD"
          TopLeft="1844.03324805317,390.344461022886" />
        <NodeLayout
          Size="208,41.6"
          Id="Package\04 Mark Enom domains\Clean Enom_TDP_domain_"
          TopLeft="65.0333035103163,9.93332853006041" />
        <NodeLayout
          Size="159.2,41.6"
          Id="Package\04 Mark Enom domains\dm_log - dm_end"
          TopLeft="101.133307744729,218.799996637107" />
        <NodeLayout
          Size="236,41.6"
          Id="Package\04 Mark Enom domains\Mark domain as migrated in Enom"
          TopLeft="53.8423999700897,65.5878741276028" />
        <NodeLayout
          Size="318.4,41.6"
          Id="Package\04 Mark Enom domains\Merge Enom_TDP_domain_ to Enom_TDP_domain"
          TopLeft="7.16666657560404,139.533328385419" />
        <EdgeLayout
          Id="Package\04 Mark Enom domains.PrecedenceConstraints[Constraint]"
          TopLeft="65.0333035103163,30.7333285300604">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-11.1909035402266,55.6545455975424"
              Start="0,0"
              End="-18.6909035402266,55.6545455975424">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-29.6909035402266,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-29.6909035402266,0"
                    Point2="-33.6909035402266,0"
                    Point3="-33.6909035402266,4" />
                  <mssgle:LineSegment
                    End="-33.6909035402266,51.6545455975424" />
                  <mssgle:CubicBezierSegment
                    Point1="-33.6909035402266,51.6545455975424"
                    Point2="-33.6909035402266,55.6545455975424"
                    Point3="-29.6909035402266,55.6545455975424" />
                  <mssgle:LineSegment
                    End="-18.6909035402266,55.6545455975424" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\04 Mark Enom domains.PrecedenceConstraints[Constraint 1]"
          TopLeft="168.904533272847,107.187874127603">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.3454542578162"
              Start="0,0"
              End="0,24.8454542578162">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.8454542578162" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\04 Mark Enom domains.PrecedenceConstraints[Constraint 2]"
          TopLeft="165.966666575604,181.133328385419">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="14.7666411691249,37.666668251688"
              Start="0,0"
              End="14.7666411691249,30.166668251688">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.833334125844" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.833334125844"
                    Point2="0,18.833334125844"
                    Point3="4,18.833334125844" />
                  <mssgle:LineSegment
                    End="10.7666411691249,18.833334125844" />
                  <mssgle:CubicBezierSegment
                    Point1="10.7666411691249,18.833334125844"
                    Point2="14.7666411691249,18.833334125844"
                    Point3="14.7666411691249,22.833334125844" />
                  <mssgle:LineSegment
                    End="14.7666411691249,30.166668251688" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="344.8,270.4"
          Size="344.8,312.8"
          Id="Package\04 Mark Enom domains"
          TopLeft="2352.75018207206,1462.78995286731" />
        <NodeLayout
          Size="267.2,41.6"
          Id="Package\Create partition in ITDP for tenant and tld"
          TopLeft="1124.5666167188,301.599997902712" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="763.866637344493,861.433330600229">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="460.566656604246,459.599996817921"
              Start="0,0"
              End="460.566656604246,452.099996817921">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="456.566656604246,0" />
                  <mssgle:CubicBezierSegment
                    Point1="456.566656604246,0"
                    Point2="460.566656604246,0"
                    Point3="460.566656604246,4" />
                  <mssgle:LineSegment
                    End="460.566656604246,452.099996817921" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="1121.16663119777,264.08484823392">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="136.999985521033,37.5151496687922"
              Start="0,0"
              End="136.999985521033,30.0151496687922">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.7575748343961" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.7575748343961"
                    Point2="0,18.7575748343961"
                    Point3="4,18.7575748343961" />
                  <mssgle:LineSegment
                    End="132.999985521033,18.7575748343961" />
                  <mssgle:CubicBezierSegment
                    Point1="132.999985521033,18.7575748343961"
                    Point2="136.999985521033,18.7575748343961"
                    Point3="136.999985521033,22.7575748343961" />
                  <mssgle:LineSegment
                    End="136.999985521033,30.0151496687922" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="1728.03329394874,2057.43332741815">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="115.999954104431,-1161.88886639526"
              Start="0,0"
              End="108.499954104431,-1161.88886639526">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="53.9999770522155,0" />
                  <mssgle:CubicBezierSegment
                    Point1="53.9999770522155,0"
                    Point2="57.9999770522155,0"
                    Point3="57.9999770522155,-4" />
                  <mssgle:LineSegment
                    End="57.9999770522155,-1157.88886639526" />
                  <mssgle:CubicBezierSegment
                    Point1="57.9999770522155,-1157.88886639526"
                    Point2="57.9999770522155,-1161.88886639526"
                    Point3="61.9999770522155,-1161.88886639526" />
                  <mssgle:LineSegment
                    End="108.499954104431,-1161.88886639526" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="1259.41662703165,343.199997902712">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49.8333326975171"
              Start="0,0"
              End="0,42.3333326975171">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.3333326975171" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="2496.83324805317,1400.74446102289">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="28.3169340188902,62.0454918444241"
              Start="0,0"
              End="28.3169340188902,54.5454918444241">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.022745922212" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.022745922212"
                    Point2="0,31.022745922212"
                    Point3="4,31.022745922212" />
                  <mssgle:LineSegment
                    End="24.3169340188902,31.022745922212" />
                  <mssgle:CubicBezierSegment
                    Point1="24.3169340188902,31.022745922212"
                    Point2="28.3169340188902,31.022745922212"
                    Point3="28.3169340188902,35.022745922212" />
                  <mssgle:LineSegment
                    End="28.3169340188902,54.5454918444241" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="168,42.4"
          Id="Package.EventHandlers[OnError]\Save errorlog"
          TopLeft="546.99998369813,212.999993652106" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="232,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_"
          TopLeft="9.37499958090483,192.263155783725" />
        <NodeLayout
          Size="160,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source"
          TopLeft="31.3333452509505,12.7333331573672" />
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO.Paths[ADO NET Source Output]"
          TopLeft="111.333345250951,54.3333331573672">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="14.0416543299543,137.929822626358"
              Start="0,0"
              End="14.0416543299543,130.429822626358">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,64.9649113131789" />
                  <mssgle:CubicBezierSegment
                    Point1="0,64.9649113131789"
                    Point2="0,68.9649113131789"
                    Point3="4,68.9649113131789" />
                  <mssgle:LineSegment
                    End="10.0416543299543,68.9649113131789" />
                  <mssgle:CubicBezierSegment
                    Point1="10.0416543299543,68.9649113131789"
                    Point2="14.0416543299543,68.9649113131789"
                    Point3="14.0416543299543,72.9649113131789" />
                  <mssgle:LineSegment
                    End="14.0416543299543,130.429822626358" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ADO NET Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ADO\ODBC Destination DimainName_">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="144,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source"
          TopLeft="34.9999994784592,27.9999995827675" />
        <NodeLayout
          Size="232,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_"
          TopLeft="9.37499958090483,192.263155783725" />
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC.Paths[ODBC Source Output]"
          TopLeft="106.999999478459,69.5999995827675">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="18.3750001024456,122.663156200958"
              Start="0,0"
              End="18.3750001024456,115.163156200958">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.3315781004788" />
                  <mssgle:CubicBezierSegment
                    Point1="0,57.3315781004788"
                    Point2="0,61.3315781004788"
                    Point3="4,61.3315781004788" />
                  <mssgle:LineSegment
                    End="14.3750001024456,61.3315781004788" />
                  <mssgle:CubicBezierSegment
                    Point1="14.3750001024456,61.3315781004788"
                    Point2="18.3750001024456,61.3315781004788"
                    Point3="18.3750001024456,65.3315781004788" />
                  <mssgle:LineSegment
                    End="18.3750001024456,115.163156200958" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Destination DimainName_">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Extract DomainName to DomainName__ODBC\ODBC Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="264.8,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_"
          TopLeft="442.999993398786,53.9999991953373" />
        <NodeLayout
          Size="179.2,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination"
          TopLeft="548.999991819263,245.999996334314" />
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_.Paths[ODBC Source Output]"
          TopLeft="575.399993398786,95.5999991953373">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="63.1999984204767,150.399997138977"
              Start="0,0"
              End="63.1999984204767,142.899997138977">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,71.1999985694885" />
                  <mssgle:CubicBezierSegment
                    Point1="0,71.1999985694885"
                    Point2="0,75.1999985694885"
                    Point3="4,75.1999985694885" />
                  <mssgle:LineSegment
                    End="59.1999984204767,75.1999985694885" />
                  <mssgle:CubicBezierSegment
                    Point1="59.1999984204767,75.1999985694885"
                    Point2="63.1999984204767,75.1999985694885"
                    Point3="63.1999984204767,79.1999985694885" />
                  <mssgle:LineSegment
                    End="63.1999984204767,142.899997138977" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ADO NET Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\01 Extract Enom domain, contact, host\01_1  Extract  Enom Domain\Mark in Enom that domain exists in TDP\Mark domain as Exists TDP in Enom_TDP_domain_\ODBC Source dm_enom_domainname_">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="243.2,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_"
          TopLeft="355.999989584089,206.999991849065" />
        <NodeLayout
          Size="160,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source"
          TopLeft="392.999994143844,54.9999991804361" />
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_.Paths[ADO NET Source Output]"
          TopLeft="475.299991863966,96.5999991804361">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,110.399992668629"
              Start="0,0"
              End="0,102.899992668629">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,102.899992668629" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ADO NET Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\01 Extract Enom domain, contact, host\01_2 Extract Enom DomainContact\Extract Enom_DomainContact to DomainContact_\ODBC Destination DomainContact_">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="226.4,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers"
          TopLeft="162.999997571111,42.9999993592501" />
        <NodeLayout
          Size="166.4,42.4"
          Id="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ODBC Destination Nameservers_"
          TopLeft="199.999994039536,203.999993920326" />
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_.Paths[ADO NET Source Output]"
          TopLeft="279.699995805323,84.5999993592501">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,119.399994561076"
              Start="0,0"
              End="0,111.899994561076">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,111.899994561076" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\01 Extract Enom domain, contact, host\01_3  Extract  Enom Domain NameServers\Extract NameServers table to NameServers_\ADO NET Source NameServers">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="200,42.4"
          Id="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact"
          TopLeft="154.99999538064,227.999993205071" />
        <NodeLayout
          Size="234.4,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact"
          TopLeft="142.999997869134,74.9999988824129" />
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca.Paths[ADO NET Source Output]"
          TopLeft="257.599996624887,116.599998882413">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,111.399994322658"
              Start="0,0"
              End="0,103.899994322658">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,103.899994322658" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ADO NET Source DomainContact">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract domaincontact from MSSQL to nazca\ODBC Destination Nazca DomainContact">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="239.2,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private"
          TopLeft="283.749987315387,283.263154784563" />
        <NodeLayout
          Size="182.4,41.6"
          Id="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact"
          TopLeft="229.374989746139,147.789472061511" />
        <EdgeLayout
          Id="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private.Paths[ODBC Source Output]"
          TopLeft="320.574989746139,189.389472061511">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="82.774997569248,93.873682723052"
              Start="0,0"
              End="82.774997569248,86.373682723052">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.936841361526" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.936841361526"
                    Point2="0,46.936841361526"
                    Point3="4,46.936841361526" />
                  <mssgle:LineSegment
                    End="78.774997569248,46.936841361526" />
                  <mssgle:CubicBezierSegment
                    Point1="78.774997569248,46.936841361526"
                    Point2="82.774997569248,46.936841361526"
                    Point3="82.774997569248,50.936841361526" />
                  <mssgle:LineSegment
                    End="82.774997569248,86.373682723052" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Destination Contact_private">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\01 Extract Enom domain, contact, host\01_4 Extract Private Contact with domaincontact in nazca\extract nazca_contact to dm_enom_contact_private\ODBC Source Contact">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="256,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain"
          TopLeft="536.874982109294,187.105257414302" />
        <NodeLayout
          Size="259.2,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname"
          TopLeft="118.374994693324,50.6315781467509" />
        <NodeLayout
          Size="223.2,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain"
          TopLeft="108.124995166436,188.842103189709" />
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp.Paths[ODBC Source Output]"
          TopLeft="247.974994693324,92.2315781467509">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-28.249999526888,96.6105250429581"
              Start="0,0"
              End="-28.249999526888,89.1105250429581">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.3052625214791" />
                  <mssgle:CubicBezierSegment
                    Point1="0,44.3052625214791"
                    Point2="0,48.3052625214791"
                    Point3="-4,48.3052625214791" />
                  <mssgle:LineSegment
                    End="-24.249999526888,48.3052625214791" />
                  <mssgle:CubicBezierSegment
                    Point1="-24.249999526888,48.3052625214791"
                    Point2="-28.249999526888,48.3052625214791"
                    Point3="-28.249999526888,52.3052625214791" />
                  <mssgle:LineSegment
                    End="-28.249999526888,89.1105250429581" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp.Paths[ODBC Destination Error Output]"
          TopLeft="331.324995166436,208.973680302006">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="205.549986942858,0"
              Start="0,0"
              End="198.049986942858,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="198.049986942858,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="29.671087221429,5,138.7078125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_error_domain">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Source dm_enom_domainname">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer domain data from dm_enom to itdp\ODBC Destination itdp_domain">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="265.6,42.4"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers"
          TopLeft="155.499995529651,45.4999988079072" />
        <NodeLayout
          Size="256,42.4"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host"
          TopLeft="536.874982109294,187.105257414302" />
        <NodeLayout
          Size="213.6,42.4"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host"
          TopLeft="108.124995166436,188.842103189709" />
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp.Paths[ODBC Destination Error Output]"
          TopLeft="321.458328499769,209.307013635339">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="215.416653609525,0"
              Start="0,0"
              End="207.916653609525,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="207.916653609525,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="34.6044205547625,5,138.7078125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp.Paths[ODBC Source Output]"
          TopLeft="288.166662196318,88.1666654745738">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-73.3750003632155,100.675437715135"
              Start="0,0"
              End="-73.3750003632155,93.1754377151352">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.3377188575676" />
                  <mssgle:CubicBezierSegment
                    Point1="0,46.3377188575676"
                    Point2="0,50.3377188575676"
                    Point3="-4,50.3377188575676" />
                  <mssgle:LineSegment
                    End="-69.3750003632155,50.3377188575676" />
                  <mssgle:CubicBezierSegment
                    Point1="-69.3750003632155,50.3377188575676"
                    Point2="-73.3750003632155,50.3377188575676"
                    Point3="-73.3750003632155,54.3377188575676" />
                  <mssgle:LineSegment
                    End="-73.3750003632155,93.1754377151352" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Source dm_enom_nameservers">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_error_host">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_1 domain and host\Transfer host for domains migrated without errors to itdp\ODBC Destination itdp_host">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="168,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal"
          TopLeft="652.499964348973,263.466664834552" />
        <NodeLayout
          Size="206.4,56"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom"
          TopLeft="439.999993443489,62.9999990612268" />
        <NodeLayout
          Size="168,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error"
          TopLeft="784.999957109493,321.533331097431" />
        <NodeLayout
          Size="182.4,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact"
          TopLeft="21.5000138853981,247.999995891253" />
        <NodeLayout
          Size="119.2,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\Multicast"
          TopLeft="442.999976096055,145.899999023676" />
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error"
          TopLeft="265.833318808841,313.133331205911" />
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp.Paths[ODBC Source Output]"
          TopLeft="542.799993443489,118.999999061227">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-40.200017347434,26.8999999624492"
              Start="0,0"
              End="-40.200017347434,19.3999999624492">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.44999998122459" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.44999998122459"
                    Point2="0,13.4499999812246"
                    Point3="-4,13.4499999812246" />
                  <mssgle:LineSegment
                    End="-36.200017347434,13.4499999812246" />
                  <mssgle:CubicBezierSegment
                    Point1="-36.200017347434,13.4499999812246"
                    Point2="-40.200017347434,13.4499999812246"
                    Point3="-40.200017347434,17.4499999812246" />
                  <mssgle:LineSegment
                    End="-40.200017347434,19.3999999624492" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp.Paths[ODBC Destination Error Output1]"
          TopLeft="820.499964348973,284.266664834552">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="48.4999927605196,37.2666662628786"
              Start="0,0"
              End="48.4999927605196,29.7666662628786">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="44.4999927605196,0" />
                  <mssgle:CubicBezierSegment
                    Point1="44.4999927605196,0"
                    Point2="48.4999927605196,0"
                    Point3="48.4999927605196,4" />
                  <mssgle:LineSegment
                    End="48.4999927605196,29.7666662628786" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-20.8539134894804,-17.43359375,138.7078125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp.Paths[ODBC Destination Error Output]"
          TopLeft="112.500013885398,289.999995891253">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="234.333304923443,23.133335314658"
              Start="0,0"
              End="234.333304923443,15.633335314658">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.56666765732902" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.56666765732902"
                    Point2="0,11.566667657329"
                    Point3="4,11.566667657329" />
                  <mssgle:LineSegment
                    End="230.333304923443,11.566667657329" />
                  <mssgle:CubicBezierSegment
                    Point1="230.333304923443,11.566667657329"
                    Point2="234.333304923443,11.566667657329"
                    Point3="234.333304923443,15.566667657329" />
                  <mssgle:LineSegment
                    End="234.333304923443,15.633335314658" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="47.8127462117215,16.566667657329,138.7078125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp.Paths[Multicast Output 3]"
          TopLeft="521.133309429388,187.499999023676">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="215.366654919585,75.9666658108764"
              Start="0,0"
              End="215.366654919585,68.4666658108764">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.9903749268211" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.9903749268211"
                    Point2="0,30.9903749268211"
                    Point3="4,30.9903749268211" />
                  <mssgle:LineSegment
                    End="211.366654919585,30.9903749268211" />
                  <mssgle:CubicBezierSegment
                    Point1="211.366654919585,30.9903749268211"
                    Point2="215.366654919585,30.9903749268211"
                    Point3="215.366654919585,34.9903749268211" />
                  <mssgle:LineSegment
                    End="215.366654919585,68.4666658108764" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp.Paths[Multicast Output 1]"
          TopLeft="483.999976096055,187.899999023676">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-371.499962210657,60.099996867577"
              Start="0,0"
              End="-371.499962210657,52.599996867577">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5184066822951" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5184066822951"
                    Point2="0,24.5184066822951"
                    Point3="-4,24.5184066822951" />
                  <mssgle:LineSegment
                    End="-367.499962210657,24.5184066822951" />
                  <mssgle:CubicBezierSegment
                    Point1="-367.499962210657,24.5184066822951"
                    Point2="-371.499962210657,24.5184066822951"
                    Point3="-371.499962210657,28.5184066822951" />
                  <mssgle:LineSegment
                    End="-371.499962210657,52.599996867577" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\ODBC contact_dm_enom">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_postal_error">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\02 Transfer domain,contact,host data  from dm_enom schema to itdp schema for parameter TLD\02_2 contact\contact_data flow\Transfer contact  to itdp\itdp_contact_error">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\04 Mark Enom domains\Mark domain as migrated in Enom">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="191.2,41.6"
          Id="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain"
          TopLeft="442.999993398786,53.9999991953373" />
        <NodeLayout
          Size="179.2,41.6"
          Id="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination"
          TopLeft="433.999993532896,227.999996602535" />
        <EdgeLayout
          Id="Package\04 Mark Enom domains\Mark domain as migrated in Enom.Paths[ODBC Source Output]"
          TopLeft="538.599993398786,95.5999991953373">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-14.9999998658897,132.399997407198"
              Start="0,0"
              End="-14.9999998658897,124.899997407198">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,62.199998703599" />
                  <mssgle:CubicBezierSegment
                    Point1="0,62.199998703599"
                    Point2="0,66.199998703599"
                    Point3="-4,66.199998703599" />
                  <mssgle:LineSegment
                    End="-10.9999998658897,66.199998703599" />
                  <mssgle:CubicBezierSegment
                    Point1="-10.9999998658897,66.199998703599"
                    Point2="-14.9999998658897,66.199998703599"
                    Point3="-14.9999998658897,70.199998703599" />
                  <mssgle:LineSegment
                    End="-14.9999998658897,124.899997407198" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ADO NET Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\04 Mark Enom domains\Mark domain as migrated in Enom\ODBC Source itdp_domain">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>