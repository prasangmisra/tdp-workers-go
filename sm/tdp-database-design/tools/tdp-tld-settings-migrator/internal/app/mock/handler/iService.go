// Code generated by mockery v2.46.0. DO NOT EDIT.

package handlermock

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	modelcsv "github.com/tucowsinc/tdp-database-design/tools/tdp-tld-settings-migrator/internal/app/model/csv"
)

// IService is an autogenerated mock type for the IService type
type IService struct {
	mock.Mock
}

// MigrateTLD provides a mock function with given fields: _a0, _a1
func (_m *IService) MigrateTLD(_a0 context.Context, _a1 []*modelcsv.TLDRecordCSV) error {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for MigrateTLD")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []*modelcsv.TLDRecordCSV) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIService creates a new instance of IService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIService(t interface {
	mock.TestingT
	Cleanup(func())
}) *IService {
	mock := &IService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
