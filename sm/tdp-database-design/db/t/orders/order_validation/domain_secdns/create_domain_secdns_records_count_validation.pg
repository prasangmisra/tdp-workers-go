BEGIN;

-- start testing
SELECT * FROM no_plan();

-- clean attr_value table
DELETE FROM attr_value;

-- update secdns supported list for .sexy TLD
INSERT INTO attr_value(
    key_id, 
    value_text_list, 
    tld_id, 
    tenant_id
) VALUES (
    (SELECT id FROM attr_key WHERE name = 'secdns_supported'),
    ARRAY['dsData'],
    (SELECT id FROM tld WHERE name = 'sexy'),
    (SELECT tenant_id FROM v_tenant_customer limit 1)
);

CREATE SEQUENCE IF NOT EXISTS domain_counter;

-- create a host parent domain entry for testing
SELECT accreditation_tld_id as id INTO TEMP _acc_tld
FROM v_accreditation_tld
WHERE tld_name = 'sexy'
  AND tenant_id=(SELECT tenant_id FROM v_tenant_customer limit 1)
  AND is_default;

WITH test_domain AS (
    INSERT INTO domain(
        tenant_customer_id,
        name,
        accreditation_tld_id,
        ry_created_date,
        ry_expiry_date,
        expiry_date
    ) VALUES (
        (SELECT id FROM v_tenant_customer LIMIT 1),
        FORMAT('host-parent-domain-%s-%s-1.sexy',NEXTVAL('domain_counter'),EXTRACT(epoch from NOW())::INT),
        (SELECT id FROM _acc_tld),
        NOW(),
        NOW() + ('1 years')::INTERVAL,
        NOW() + ('1 years')::INTERVAL
    ) RETURNING *
)
SELECT * INTO TEMP _host_parent_domain FROM test_domain;


-- create an order
WITH o AS (
    INSERT INTO "order"(
        tenant_customer_id,
        type_id
    )
    VALUES(
        (SELECT id FROM v_tenant_customer LIMIT 1),
        (SELECT id FROM v_order_type WHERE product_name='domain' AND name='create')
    ) RETURNING *
)
SELECT * INTO TEMP _order FROM o;


-- check that the order ID exists
SELECT ok((SELECT LENGTH(id::TEXT) > 0 FROM "order" WHERE id = (SELECT id FROM _order)),'is TRUE!');

-- by default order should have a created status
SELECT is(
    (SELECT name FROM order_status WHERE id=(SELECT status_id FROM _order)),
    'created',
    'order status is ''created'' by default'
);

-- now we add the order item (order_item_create_domain)
CREATE SEQUENCE IF NOT EXISTS domain_counter;
WITH cd AS (
    INSERT INTO order_item_create_domain(order_id, name, secdns_max_sig_life) 
        VALUES(
            (SELECT id FROM _order),
            FORMAT('tdp-test-%s-%s.sexy',NEXTVAL('domain_counter'),EXTRACT(epoch from NOW())::INT),
            5    
        ) RETURNING *
)
SELECT * INTO TEMP _oi_create_domain FROM cd;

-- create a contact (personal)
WITH oc AS (
    INSERT INTO order_contact (
        order_id,
        type_id,
        email,
        phone,
        fax,
        country,
        tenant_customer_id
    )
    VALUES( 
        (SELECT id FROM _order),
        tc_id_from_name('contact_type','individual'),
        'person@test.example', 
        '+555.5555551212',
        '+555.5555551213',
        'US',
        (SELECT id FROM v_tenant_customer LIMIT 1)
    ) RETURNING *
)
SELECT * INTO TEMP _order_contact FROM oc;


-- postal data as well
WITH cp AS (
    INSERT INTO order_contact_postal
    (
        contact_id,
        is_international,
        first_name,
        last_name,
        address1,
        city,
        postal_code,
        state 
    )
    VALUES(
        (SELECT id FROM _order_contact),
        TRUE,
        'John',
        'Smith',
        '555 Adress line',
        'Los Angeles',
        '90210',
        'California'
    ) RETURNING *
)
SELECT * INTO TEMP _order_contact_postal FROM cp;


-- create a host
WITH oh AS (
    INSERT INTO order_host (
        "name",
         tenant_customer_id        
    )
    VALUES(    
       'ns1.' || (SELECT name FROM _host_parent_domain),
       (SELECT id FROM v_tenant_customer LIMIT 1)
    ) RETURNING *
)
SELECT * INTO TEMP _order_host FROM oh;

-- add the host address 
SELECT lives_ok($$
    INSERT INTO order_host_addr(
        host_id,
        address
    )
    (
           SELECT 
             (SELECT id FROM _order_host),
             a.addr 
        FROM ( SELECT addr FROM (
                        VALUES
                            ('192.168.1.100'::INET),
                            ('192.168.1.101'::INET)
                        ) AS t (addr)
            )a
    )
$$,'insert record in order_host_addr');


-- add the domain contacts 
SELECT lives_ok($$
    INSERT INTO create_domain_contact(
        create_domain_id,
        domain_contact_type_id,
        order_contact_id
    )
    (
        SELECT 
            cd.id,
            dct.id AS domain_contact_type_id,
            oc.id AS order_contact_id
        FROM _oi_create_domain cd
            JOIN domain_contact_type dct ON TRUE
            JOIN _order_contact oc ON TRUE
    );
$$,'insert record in create_domain_contact');


-- add the domain nameservers 
SELECT lives_ok($$
    INSERT INTO create_domain_nameserver(
        create_domain_id,        
        host_id
    )
    VALUES(
        (SELECT id FROM _oi_create_domain),
        (SELECT id FROM _order_host)
    );
$$,'insert record in create_domain_nameserver');

-- add secdns records
WITH osdd AS (
    INSERT INTO order_secdns_ds_data(key_tag, algorithm, digest)
    VALUES (1, 3, 'test-digest')
    RETURNING *
)
SELECT * INTO TEMP _order_secdns_ds_data FROM osdd;


INSERT INTO create_domain_secdns (create_domain_id, ds_data_id)
VALUES ((SELECT id FROM _oi_create_domain), (SELECT id FROM _order_secdns_ds_data));


-- the order should now be set to processing
SELECT lives_ok($$
    UPDATE "order" SET status_id = order_next_status((SELECT id FROM _order),TRUE) WHERE id=(SELECT id FROM _order);
$$,'move order to next status (pending->processing)');

-- domain order item validation must be in status failed
SELECT cmp_ok(
  (SELECT plan_validation_status_name FROM f_order_item_plan((SELECT id FROM _oi_create_domain)) WHERE object_id = tc_id_from_name('order_item_object','domain')),
  '=',
  'failed'
);

-- order must be in status failed
SELECT cmp_ok(
    (SELECT s.name FROM "order" o JOIN order_status s ON s.id=o.status_id WHERE o.id = (SELECT id FROM _order)),
    '=',
    'failed'
);

-- finish testing
SELECT * FROM finish(true);

-- COMMIT;
ROLLBACK;
