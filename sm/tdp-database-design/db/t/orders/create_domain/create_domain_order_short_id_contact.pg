BEGIN;


-- start testing
SELECT * FROM no_plan();


-- create an order
WITH o AS (
    INSERT INTO "order"(
        tenant_customer_id,
        type_id
    )
    VALUES(
        (SELECT id FROM v_tenant_customer LIMIT 1),
        (SELECT id FROM v_order_type WHERE product_name='domain' AND name='create')
    ) RETURNING *
)
SELECT * INTO TEMP _order FROM o;


-- check that the order ID exists
SELECT ok((SELECT LENGTH(id::TEXT) > 0 FROM "order" WHERE id = (SELECT id FROM _order)),'is TRUE!');

-- by default order should have a created status
SELECT is(
    (SELECT name FROM order_status WHERE id=(SELECT status_id FROM _order)),
    'created',
    'order status is ''created'' by default'
);

-- now we add the order item (order_item_create_domain)
CREATE SEQUENCE IF NOT EXISTS domain_counter;
WITH cd AS (
    INSERT INTO order_item_create_domain(order_id,name) 
        VALUES((SELECT id FROM _order),FORMAT('tdp-test-%s-%s.help',NEXTVAL('domain_counter'),EXTRACT(epoch from NOW())::INT)) RETURNING *
)
SELECT * INTO TEMP _oi_create_domain FROM cd;


-- create a contact (personal)
WITH oc AS (
    INSERT INTO order_contact (
        order_id,
        type_id,
        email,
        phone,
        fax,
        country,
        tenant_customer_id
    )
    VALUES( 
        (SELECT id FROM _order),
        tc_id_from_name('contact_type','individual'),
        'person@test.example', 
        '+555.5555551212',
        '+555.5555551213',
        'US',
        (SELECT id FROM v_tenant_customer LIMIT 1)
    ) RETURNING *
)
SELECT * INTO TEMP _order_contact FROM oc;


-- postal data as well
WITH cp AS (
    INSERT INTO order_contact_postal
    (
        contact_id,
        is_international,
        first_name,
        last_name,
        address1,
        city,
        postal_code,
        state 
    )
    VALUES(
        (SELECT id FROM _order_contact),
        TRUE,
        'John',
        'Smith',
        '555 Adress line',
        'Los Angeles',
        '90210',
        'California'
    ) RETURNING *
)
SELECT * INTO TEMP _order_contact_postal FROM cp;


-- add the domain contacts 
SELECT lives_ok($$
    INSERT INTO create_domain_contact(
        create_domain_id,
        domain_contact_type_id,
        short_id
    )
    VALUES
    (
        (SELECT id FROM _oi_create_domain),
        tc_id_from_name('domain_contact_type','registrant'),
        (SELECT short_id FROM _order_contact)
    );
$$,'insert record in create_domain_contact');


-- the order should now be set to processing
SELECT lives_ok($$
    UPDATE "order" SET status_id = order_next_status((SELECT id FROM _order),TRUE) WHERE id=(SELECT id FROM _order);
$$,'move order to next status (pending->processing)');

-- order must be in status processing
SELECT cmp_ok( 
    (SELECT s.name FROM "order" o JOIN order_status s ON s.id=o.status_id WHERE o.id = (SELECT id FROM _order)),
    '=',
    'processing'
);

-- order item must be in status 'ready' now
SELECT cmp_ok( 
    (SELECT s.name FROM order_item oi JOIN order_item_status s ON s.id=oi.status_id WHERE oi.order_id = (SELECT id FROM _order)),
    '=',
    'ready'
);

-- there should be 2 items to be provisioned in the order_item_plan view
SELECT cmp_ok(
  (SELECT COUNT(*)::INT FROM f_order_item_plan((SELECT id FROM _oi_create_domain))),
  '=',
  2::INT
);

-- let's update the validate_domain_available job to see if it changes to complete
SELECT lives_ok($$
    UPDATE job
    SET status_id = tc_id_from_name('job_status','completed')
    WHERE id = ( 
        SELECT job_id
        FROM v_job vj 
        JOIN create_domain_plan cdp ON cdp.id = vj.reference_id
        WHERE cdp.order_item_id = (SELECT id FROM _oi_create_domain)
            AND vj.job_type_name = 'validate_domain_available'
            AND vj.job_status_name = 'submitted'
    ) 
$$);

-- let's grab that provision_contact entry
WITH pc AS (
    SELECT pc.*,ps.name AS status_name 
    FROM provision_contact pc
        JOIN provision_status ps ON ps.id = pc.status_id
    WHERE (
        SELECT id FROM f_order_item_plan((SELECT id FROM _oi_create_domain))
            WHERE object_name='contact'
    ) = ANY(order_item_plan_ids) 
    AND ps.name = 'pending'
)
SELECT * INTO TEMP _prov_contact FROM pc;

-- there should be a contact entry in provision_contact that is pending to be provisioned
SELECT ok(
    EXISTS(
        SELECT * FROM _prov_contact
    ) 
);

-- job should not be null
SELECT ok((SELECT job_id FROM _prov_contact) IS NOT NULL,'job_id is not null');


-- let's update the job to see if it changes to complete
SELECT lives_ok($$
    UPDATE job SET status_id = tc_id_from_name('job_status','completed')
        WHERE status_id=tc_id_from_name('job_status','submitted')
$$);

-- provisioned date should be set on contact
SELECT ok(
    (SELECT provisioned_date IS NOT NULL FROM provision_contact WHERE id=(SELECT id FROM _prov_contact)),
    'provisioned date was set on provision_contact' 
);

-- status must be successful
SELECT ok(
    (SELECT s.is_success AND s.is_final 
        FROM provision_contact c 
            JOIN provision_status s ON c.status_id=s.id 
        WHERE c.id=(SELECT id FROM _prov_contact )),
    'status is set to success and final on contact' 
);

-- let's update the provision_contact to simulate handle presence
SELECT lives_ok($$
    UPDATE provision_contact SET handle = '3de54hq2db5'
        WHERE id=(SELECT id FROM _prov_contact)
$$);

SELECT ok(
    (SELECT plan_status_name = 'completed' FROM f_order_item_plan((SELECT d.id FROM _oi_create_domain d)) 
            WHERE  object_name='contact'),
    'contact order_item_plan completed successfully'
);


-- now let's process the domain 
-- there should be a job of status 'submitted' for the domain 
SELECT ok(
    EXISTS (
        SELECT 1
        FROM v_job 
        WHERE 
            job_type_name='provision_domain_create'
            AND job_status_name ='submitted'
    )
);

SELECT lives_ok($$
    UPDATE job SET status_id = tc_id_from_name('job_status','completed')
        WHERE status_id=tc_id_from_name('job_status','submitted')
$$);

-- check rgp status set
SELECT ok(
    (SELECT rgp_epp_status = 'addPeriod' FROM v_domain 
            WHERE  name=(SELECT d.name FROM _oi_create_domain d)),
    'domain rgp add_grace_period status is set'
);

-- order should now be complete 
SELECT ok( 
        order_status_is_final 
        AND 
        order_status_is_success
    )
    FROM v_order
    WHERE order_id=(SELECT id FROM _order);


-- finish testing
SELECT * FROM finish(true);

--COMMIT;
ROLLBACK;
