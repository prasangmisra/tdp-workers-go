BEGIN;

-- start testing
SELECT * FROM no_plan();

-- First, we check the schema itself, to ensure it looks like we expect

SELECT has_table('rgp_status');
SELECT has_table('domain_rgp_status');

CREATE SEQUENCE IF NOT EXISTS domain_counter;

SELECT * INTO TEMP _tenant_customer FROM v_tenant_customer LIMIT 1;

SELECT accreditation_tld_id as id INTO TEMP _acc_tld 
    FROM v_accreditation_tld
    WHERE tld_name = 'help' 
        AND tenant_id=(SELECT tenant_id FROM _tenant_customer)
        AND is_default;


-- create a domain entry for testing
WITH test_domain AS (
  INSERT INTO domain(
    tenant_customer_id,
    name,
    accreditation_tld_id,
    ry_created_date,
    ry_expiry_date,
    expiry_date
  ) VALUES (
    (SELECT id FROM _tenant_customer),
    FORMAT('tdp-test-%s-%s.help',NEXTVAL('domain_counter'),EXTRACT(epoch from NOW())::INT),
    (SELECT id FROM _acc_tld),
    NOW(),
    NOW() + ('1 years')::INTERVAL,
    NOW() + ('1 years')::INTERVAL
  ) RETURNING * 
)
SELECT * INTO TEMP _test_domain FROM test_domain;

SELECT ok( 
    (SELECT rgp_epp_status FROM v_domain vd WHERE vd.id = (SELECT id FROM _test_domain)) IS NULL,
    'rgp status is not set'
);


-- rgp status without expiry date
SELECT lives_ok($$
    INSERT INTO domain_rgp_status(
        domain_id,
        status_id
    ) VALUES (
        (SELECT id FROM _test_domain),
        tc_id_from_name('rgp_status', 'add_grace_period')     
    );
$$,'set add_grace_period status with expiry date');

-- check expiry date was set
SELECT ok( 
    (SELECT expiry_date FROM domain_rgp_status drs WHERE drs.domain_id = (SELECT id FROM _test_domain)) IS NOT NULL,
    'domain rgp status expiry date was set'
);

-- check status was set
SELECT cmp_ok( 
    (SELECT rgp_epp_status FROM v_domain vd WHERE vd.id = (SELECT id FROM _test_domain)),
    '=',
    'addPeriod'
);

-- rgp status with custom expiry date
SELECT lives_ok($$
    INSERT INTO domain_rgp_status(
        domain_id,
        status_id,
        created_date,
        expiry_date
    ) VALUES (
        (SELECT id FROM _test_domain),
        tc_id_from_name('rgp_status', 'autorenew_grace_period'),
        NOW() + ('1 seconds')::INTERVAL, -- otherwise both records are created at same time
        NOW() + ('120 hours')::INTERVAL
    );
$$,'set autoRenewPeriod status with custom expiry date');

-- check custom expiry date was set
SELECT cmp_ok( 
    (SELECT expiry_date FROM domain_rgp_status drs WHERE drs.domain_id = (SELECT id FROM _test_domain) ORDER BY drs.created_date DESC LIMIT 1),
    '=',
    NOW() + ('120 hours')::INTERVAL
);

-- check status was set
SELECT cmp_ok( 
    (SELECT rgp_epp_status FROM v_domain vd WHERE vd.id = (SELECT id FROM _test_domain)),
    '=',
    'autoRenewPeriod'
);

-- simulate status expired
SELECT lives_ok($$
    UPDATE domain_rgp_status SET expiry_date = NOW() - ('1 days')::INTERVAL
    WHERE
        id = (SELECT drs.id FROM domain_rgp_status drs WHERE drs.domain_id = (SELECT id FROM _test_domain) ORDER BY drs.created_date DESC LIMIT 1);
$$, 'simulate rgp status expired');

-- check status is null
SELECT ok( 
    (SELECT rgp_epp_status FROM v_domain vd WHERE vd.id = (SELECT id FROM _test_domain)) IS NULL,
    'rgp status is null'
);

SELECT * FROM finish(true);

--COMMIT;

ROLLBACK;
