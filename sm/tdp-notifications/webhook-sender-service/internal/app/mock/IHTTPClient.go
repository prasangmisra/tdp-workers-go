// Code generated by mockery v2.46.1. DO NOT EDIT.

package mock

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	logger "github.com/tucowsinc/tdp-shared-go/logger"
)

// IHTTPClient is an autogenerated mock type for the IHTTPClient type
type IHTTPClient struct {
	mock.Mock
}

// SendPostRequest provides a mock function with given fields: ctx, url, payload, signedPayload, requestID, log
func (_m *IHTTPClient) SendPostRequest(ctx context.Context, url string, payload []byte, signedPayload string, requestID string, log logger.ILogger) (int, error) {
	ret := _m.Called(ctx, url, payload, signedPayload, requestID, log)

	if len(ret) == 0 {
		panic("no return value specified for SendPostRequest")
	}

	var r0 int
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, []byte, string, string, logger.ILogger) (int, error)); ok {
		return rf(ctx, url, payload, signedPayload, requestID, log)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, []byte, string, string, logger.ILogger) int); ok {
		r0 = rf(ctx, url, payload, signedPayload, requestID, log)
	} else {
		r0 = ret.Get(0).(int)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, []byte, string, string, logger.ILogger) error); ok {
		r1 = rf(ctx, url, payload, signedPayload, requestID, log)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIHTTPClient creates a new instance of IHTTPClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIHTTPClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *IHTTPClient {
	mock := &IHTTPClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
